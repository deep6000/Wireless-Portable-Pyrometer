

HI-TECH Software PRO Macro Assembler (PIC18) V9.66 build 8870 
                                                       Sat Jun 02 15:09:29 2018

HI-TECH Software Omniscient Code Generator build 8870
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 8870"
     2                           
     3                           	processor	18F65K90
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	2
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	112
   109  000000                     main@state	equ	??_main+0
   110                           	global	main@state
   111  000000                     main@max	equ	??_main+1
   112                           	global	main@max
   113  000000                     Print_Str_LCD@i	equ	??_Print_Str_LCD+0
   114                           	global	Print_Str_LCD@i
   115  000000                     Read_adc@data	equ	??_Read_adc+0
   116                           	global	Read_adc@data
   117  000000                     UART2_Init@x	equ	??_UART2_Init+0
   118                           	global	UART2_Init@x
   119  000000                     UART2_Init@baudrate	equ	?_UART2_Init+0
   120                           	global	UART2_Init@baudrate
   121  000000                     Temp_Calc@mask	equ	??_Temp_Calc+0
   122                           	global	Temp_Calc@mask
   123  000000                     Uart2_Temp@data	equ	?_Uart2_Temp+0
   124                           	global	Uart2_Temp@data
   125  000000                     Write_IO@data	equ	?_Write_IO+0
   126                           	global	Write_IO@data
   127  000000                     Print_Num_LCD@i	equ	??_Print_Num_LCD+0
   128                           	global	Print_Num_LCD@i
   129  000000                     ADC_Init@val	equ	??_ADC_Init+0
   130                           	global	ADC_Init@val
   131  000000                     ADC_Init@val1	equ	??_ADC_Init+1
   132                           	global	ADC_Init@val1
   133  000000                     UART_Init@x	equ	??_UART_Init+0
   134                           	global	UART_Init@x
   135  000000                     UART_Init@baudrate	equ	?_UART_Init+0
   136                           	global	UART_Init@baudrate
   137  000000                     sprintf@prec	equ	??_sprintf+0
   138                           	global	sprintf@prec
   139  000000                     sprintf@c	equ	??_sprintf+1
   140                           	global	sprintf@c
   141  000000                     sprintf@ap	equ	??_sprintf+2
   142                           	global	sprintf@ap
   143  000000                     sprintf@_val	equ	??_sprintf+4
   144                           	global	sprintf@_val
   145  000000                     sprintf@f	equ	?_sprintf+0
   146                           	global	sprintf@f
   147  000000                     Scale@Value	equ	?_Scale+0
   148                           	global	Scale@Value
   149  000000                     Scale@Izero	equ	?_Scale+4
   150                           	global	Scale@Izero
   151  000000                     Scale@Ispan	equ	?_Scale+8
   152                           	global	Scale@Ispan
   153  000000                     Scale@Ozero	equ	?_Scale+12
   154                           	global	Scale@Ozero
   155  000000                     Scale@Ospan	equ	?_Scale+16
   156                           	global	Scale@Ospan
   157  000000                     ___lldiv@quotient	equ	??___lldiv+0
   158                           	global	___lldiv@quotient
   159  000000                     ___lldiv@dividend	equ	?___lldiv+0
   160                           	global	___lldiv@dividend
   161  000000                     ___lldiv@divisor	equ	?___lldiv+4
   162                           	global	___lldiv@divisor
   163  000000                     Update_LCD@Seg_code	equ	??_Update_LCD+0
   164                           	global	Update_LCD@Seg_code
   165  000000                     Update_LCD@digit	equ	?_Update_LCD+0
   166                           	global	Update_LCD@digit
   167  000000                     Update_LCD@x	equ	?_Update_LCD+2
   168                           	global	Update_LCD@x
   169  000000                     Update_LCD@dp	equ	?_Update_LCD+3
   170                           	global	Update_LCD@dp
   171  000000                     DelayMs@j	equ	??_DelayMs+0
   172                           	global	DelayMs@j
   173  000000                     DelayMs@time	equ	?_DelayMs+0
   174                           	global	DelayMs@time
   175  000000                     ___lmul@product	equ	??___lmul+0
   176                           	global	___lmul@product
   177  000000                     ___lmul@multiplier	equ	?___lmul+0
   178                           	global	___lmul@multiplier
   179  000000                     ___lmul@multiplicand	equ	?___lmul+4
   180                           	global	___lmul@multiplicand
   181  000000                     ___lwmod@dividend	equ	?___lwmod+0
   182                           	global	___lwmod@dividend
   183  000000                     ___lwmod@divisor	equ	?___lwmod+2
   184                           	global	___lwmod@divisor
   185  000000                     ___lwdiv@dividend	equ	?___lwdiv+0
   186                           	global	___lwdiv@dividend
   187  000000                     ___lwdiv@divisor	equ	?___lwdiv+2
   188                           	global	___lwdiv@divisor
   189  000000                     ___aldiv@quotient	equ	??___aldiv+0
   190                           	global	___aldiv@quotient
   191  000000                     ___aldiv@dividend	equ	?___aldiv+0
   192                           	global	___aldiv@dividend
   193  000000                     ___aldiv@divisor	equ	?___aldiv+4
   194                           	global	___aldiv@divisor
   195                           ;Data sizes: Strings 144, constant 2058, data 10
                                 6, bss 0, persistent 0 stack 117
   196                           	global	_main
   197                           	global	??_main
   198                           	global	?_main
   199                           
   200                           ; *************** function _main ***************
                                 **
   201                           ; Defined at:
   202                           ;		line 16 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\main.c"
   203                           ; Parameters:
   204                           ;		None
   205                           ; Auto variables:
   206                           ;		i           	       	type: unsigned char 
   207                           ;		state       	       	type: char 
   208                           ;		max         	       	type: unsigned short 
   209                           ; Return value:
   210                           ;		type: void 
   211                           ;		size: 0
   212                           ; Registers used:
   213                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, stat
                                 us,2, status,0, tblptrl, tblptrh, tblptru, tabla
                                 t, prodl, prodh, cstack
   214                           ; Tracked objects:
   215                           ;		On entry : 0/0
   216                           ;		On exit  : 0/0
   217                           ;		Unchanged: FFFFFFF0/0
   218                           ; Data sizes:
   219                           ;		Autos:    3
   220                           ;		Params:   0
   221                           ;		Temp:     0
   222                           ;		Total:    3
   223                           ; This function calls:
   224                           ;		_UART_Init
   225                           ;		_ADC_Init
   226                           ;		_sprintf
   227                           ;		_Print_UART
   228                           ;		_LCD_Init
   229                           ;		_I2C_Init
   230                           ;		_UART2_Init
   231                           ;		_Print_Str_LCD
   232                           ;		_Read_adc
   233                           ;		_Temp_Calc
   234                           ;		_Write_IO
   235                           ;		_DelayMs
   236                           ;		_Print_Num_LCD
   237                           ;		_Uart2_Temp
   238                           ;		_Clr_LCD
   239                           ; This function is called by:
   240                           ;		Startup code after reset
   241                           ; This function uses a non-reentrant model
   242                           ; 
   243                                   psect   text0,class=CODE,space=0,reloc=2
   244                           
   245                           	opt pm
   246                           	file	"C:\Users\deepesh\Desktop\Final codes\main
                                 .c"
   247                           	line	16
   248  000000                     	__size_of_main	equ	__end_of_main-_main
   249                           ;main.c: 15: void main()
   250                           ;main.c: 16: {
   251                           	
   252  0000BA                     _main:		; BSR set to: ?
   253                           
   254                           	opt stack 30
   255                           	line	17
   256  0000BA  010F               	movlb	15	; () banked
   257  0000BC  6B25               	clrf	((3877))&0ffh	;volatile
   258                           	line	18
   259                           ;main.c: 18: ANCON1=0;
   260  0000BE  6B24               	clrf	((3876))&0ffh	;volatile
   261                           	line	19
   262                           ;main.c: 19: ANCON2=0;
   263  0000C0  6B23               	clrf	((3875))&0ffh	;volatile
   264                           	line	20
   265                           ;main.c: 20: signed char state=0;
   266  0000C2  0101               	movlb	1	; () banked
   267  0000C4  6B00               	clrf	((main@state))&0ffh
   268                           	line	24
   269                           ;main.c: 21: unsigned char i;
   270                           ;main.c: 22: unsigned short int max;
   271                           ;main.c: 24: UART_Init(9600);
   272  0000C6  0E80               	movlw	low(02580h)
   273  0000C8  6F03               	movwf	((?_UART_Init))&0ffh
   274  0000CA  0E25               	movlw	high(02580h)
   275  0000CC  6F04               	movwf	((?_UART_Init+1))&0ffh
   276  0000CE  0E00               	movlw	low highword(02580h)
   277  0000D0  6F05               	movwf	((?_UART_Init+2))&0ffh
   278  0000D2  0E00               	movlw	high highword(02580h)
   279  0000D4  6F06               	movwf	((?_UART_Init+3))&0ffh
   280  0000D6  EC27  F007         	call	_UART_Init	;wreg free
   281                           	line	26
   282                           ;main.c: 26: ADC_Init();
   283  0000DA  ECB8  F005         	call	_ADC_Init	;wreg free
   284                           	line	27
   285                           ;main.c: 27: sprintf( PrintStr, "\nADC INIT") ;
   286  0000DE  0EB6               	movlw	low(STR_1)
   287  0000E0  6F0F               	movwf	((?_sprintf))&0ffh
   288  0000E2  0E7F               	movlw	high(STR_1)
   289  0000E4  6F10               	movwf	((?_sprintf+1))&0ffh
   290  0000E6  0E00               	movlw	((c:0))&0ffh
   291                           	
   292  0000E8  EC82  F004         	call	_sprintf
   293                           	line	28
   294                           ;main.c: 28: Print_UART( PrintStr ) ;
   295  0000EC  0E00               	movlw	((c:0))&0ffh
   296                           	
   297  0000EE  ECA8  F007         	call	_Print_UART
   298                           	line	30
   299                           ;main.c: 30: LCD_Init();
   300  0000F2  EC08  F009         	call	_LCD_Init	;wreg free
   301                           	line	31
   302                           ;main.c: 31: sprintf( PrintStr, "\nLCD INIT") ;
   303  0000F6  0EA2               	movlw	low(STR_2)
   304  0000F8  0101               	movlb	1	; () banked
   305  0000FA  6F0F               	movwf	((?_sprintf))&0ffh
   306  0000FC  0E7F               	movlw	high(STR_2)
   307  0000FE  6F10               	movwf	((?_sprintf+1))&0ffh
   308  000100  0E00               	movlw	((c:0))&0ffh
   309                           	
   310  000102  EC82  F004         	call	_sprintf
   311                           	line	32
   312                           ;main.c: 32: Print_UART( PrintStr ) ;
   313  000106  0E00               	movlw	((c:0))&0ffh
   314                           	
   315  000108  ECA8  F007         	call	_Print_UART
   316                           	line	34
   317                           ;main.c: 34: I2C_Init ();
   318  00010C  EC49  F009         	call	_I2C_Init	;wreg free
   319                           	line	35
   320                           ;main.c: 35: sprintf( PrintStr, "\nI2C INIT") ;
   321  000110  0EC0               	movlw	low(STR_3)
   322  000112  0101               	movlb	1	; () banked
   323  000114  6F0F               	movwf	((?_sprintf))&0ffh
   324  000116  0E7F               	movlw	high(STR_3)
   325  000118  6F10               	movwf	((?_sprintf+1))&0ffh
   326  00011A  0E00               	movlw	((c:0))&0ffh
   327                           	
   328  00011C  EC82  F004         	call	_sprintf
   329                           	line	36
   330                           ;main.c: 36: Print_UART( PrintStr ) ;
   331  000120  0E00               	movlw	((c:0))&0ffh
   332                           	
   333  000122  ECA8  F007         	call	_Print_UART
   334                           	line	38
   335                           ;main.c: 38: UART2_Init(9600);
   336  000126  0E80               	movlw	low(02580h)
   337  000128  6F03               	movwf	((?_UART2_Init))&0ffh
   338  00012A  0E25               	movlw	high(02580h)
   339  00012C  6F04               	movwf	((?_UART2_Init+1))&0ffh
   340  00012E  0E00               	movlw	low highword(02580h)
   341  000130  6F05               	movwf	((?_UART2_Init+2))&0ffh
   342  000132  0E00               	movlw	high highword(02580h)
   343  000134  6F06               	movwf	((?_UART2_Init+3))&0ffh
   344  000136  EC87  F006         	call	_UART2_Init	;wreg free
   345                           	line	40
   346                           ;main.c: 40: INTCONbits.PEIE = 1;
   347  00013A  8CF2               	bsf	((c:4082)),c,6	;volatile
   348                           	line	41
   349                           ;main.c: 41: INTCONbits.GIE = 1;
   350  00013C  8EF2               	bsf	((c:4082)),c,7	;volatile
   351                           	line	42
   352                           ;main.c: 42: PORTCbits.RC0=0;
   353  00013E  9082               	bcf	((c:3970)),c,0	;volatile
   354                           	line	44
   355                           ;main.c: 44: sprintf( PrintStr, "PYR") ;
   356  000140  0EF2               	movlw	low(STR_4)
   357  000142  0101               	movlb	1	; () banked
   358  000144  6F0F               	movwf	((?_sprintf))&0ffh
   359  000146  0E7F               	movlw	high(STR_4)
   360  000148  6F10               	movwf	((?_sprintf+1))&0ffh
   361  00014A  0E00               	movlw	((c:0))&0ffh
   362                           	
   363  00014C  EC82  F004         	call	_sprintf
   364                           	line	45
   365                           ;main.c: 45: Print_Str_LCD( PrintStr ) ;
   366  000150  0E00               	movlw	((c:0))&0ffh
   367                           	
   368  000152  EC76  F008         	call	_Print_Str_LCD
   369                           	line	48
   370                           ;main.c: 48: while(1)
   371                           	
   372  000156                     l473:		; BSR set to: ?
   373                           
   374                           	line	54
   375                           ;main.c: 49: {
   376                           ;main.c: 54: AdcCount = Read_adc();
   377  000156  ECC2  F008         	call	_Read_adc	;wreg free
   378  00015A  C103  F066         	movff	0+?_Read_adc,(102)
   379  00015E  C104  F067         	movff	1+?_Read_adc,(102+1)
   380                           	line	55
   381                           ;main.c: 55: sprintf( PrintStr, "\n AdcCount");
   382  000162  0E97               	movlw	low(STR_5)
   383  000164  0101               	movlb	1	; () banked
   384  000166  6F0F               	movwf	((?_sprintf))&0ffh
   385  000168  0E7F               	movlw	high(STR_5)
   386  00016A  6F10               	movwf	((?_sprintf+1))&0ffh
   387  00016C  0E00               	movlw	((c:0))&0ffh
   388                           	
   389  00016E  EC82  F004         	call	_sprintf
   390                           	line	56
   391                           ;main.c: 56: Print_UART( PrintStr ) ;
   392  000172  0E00               	movlw	((c:0))&0ffh
   393                           	
   394  000174  ECA8  F007         	call	_Print_UART
   395                           	line	57
   396                           ;main.c: 57: Temp_Calc();
   397  000178  ECB5  F003         	call	_Temp_Calc	;wreg free
   398                           	line	58
   399                           ;main.c: 58: sprintf( PrintStr,"\n%u",AdcCount) 
                                 ;
   400  00017C  C066 F111          	movff	(102),0+(?_sprintf+02h)
   401  000180  C067 F112          	movff	(102+1),1+(?_sprintf+02h)
   402  000184  0EF6               	movlw	low(STR_6)
   403  000186  0101               	movlb	1	; () banked
   404  000188  6F0F               	movwf	((?_sprintf))&0ffh
   405  00018A  0E7F               	movlw	high(STR_6)
   406  00018C  6F10               	movwf	((?_sprintf+1))&0ffh
   407  00018E  0E00               	movlw	((c:0))&0ffh
   408                           	
   409  000190  EC82  F004         	call	_sprintf
   410                           	line	59
   411                           ;main.c: 59: Print_UART( PrintStr);
   412  000194  0E00               	movlw	((c:0))&0ffh
   413                           	
   414  000196  ECA8  F007         	call	_Print_UART
   415                           	line	60
   416                           ;main.c: 60: switch(state)
   417  00019A  EFE6  F001         	goto	l476
   418                           	line	62
   419                           ;main.c: 61: {
   420                           ;main.c: 62: case 0:
   421                           	
   422  00019E                     l477:		; BSR set to: 1
   423                           
   424                           	line	65
   425                           ;main.c: 63: {
   426                           ;main.c: 65: sprintf( PrintStr, "\ncase 0") ;
   427  00019E  0ECA               	movlw	low(STR_7)
   428  0001A0  6F0F               	movwf	((?_sprintf))&0ffh
   429  0001A2  0E7F               	movlw	high(STR_7)
   430  0001A4  6F10               	movwf	((?_sprintf+1))&0ffh
   431  0001A6  0E00               	movlw	((c:0))&0ffh
   432                           	
   433  0001A8  EC82  F004         	call	_sprintf
   434                           	line	66
   435                           ;main.c: 66: Print_UART( PrintStr ) ;
   436  0001AC  0E00               	movlw	((c:0))&0ffh
   437                           	
   438  0001AE  ECA8  F007         	call	_Print_UART
   439                           	line	67
   440                           ;main.c: 67: Write_IO(0x70,0XEE);
   441  0001B2  0EEE               	movlw	low(0EEh)
   442  0001B4  6F03               	movwf	((?_Write_IO))&0ffh
   443  0001B6  0E70               	movlw	(070h)&0ffh
   444                           	
   445  0001B8  EC27  F009         	call	_Write_IO
   446                           	line	68
   447                           ;main.c: 68: if(AdcCount < 21052)
   448  0001BC  0E3C               	movlw	03Ch
   449  0001BE  0100               	movlb	0	; () banked
   450  0001C0  5D66               	subwf	((102))&0ffh,w
   451  0001C2  0E52               	movlw	052h
   452  0001C4  5967               	subwfb	((102+1))&0ffh,w
   453  0001C6  B0D8               	btfsc	status,0
   454  0001C8  EFE8  F000         	goto	u2281
   455  0001CC  EFEA  F000         	goto	u2280
   456  0001D0                     u2281:
   457  0001D0  EFED  F000         	goto	l478
   458  0001D4                     u2280:
   459+                          	line	70
   460+                          ;main.c: 69: {
   461+                          ;main.c: 70: state=1;
   462+ 0001D4  0E01               	movlw	low(01h)
   463  0001D6  0101               	movlb	1	; () banked
   464  0001D8  6F00               	movwf	((main@state))&0ffh
   465                           	line	71
   466                           	
   467  0001DA                     l478:		; BSR set to: ?
   468                           
   469                           	line	73
   470                           ;main.c: 71: }
   471                           ;main.c: 72: }
   472                           ;main.c: 73: break;
   473  0001DA  EFF6  F001         	goto	l472
   474                           	line	75
   475                           ;main.c: 75: case 1:
   476                           	
   477  0001DE                     l479:		; BSR set to: 1
   478                           
   479                           	line	77
   480                           ;main.c: 76: {
   481                           ;main.c: 77: Write_IO(0x70,0XEF);
   482  0001DE  0EEF               	movlw	low(0EFh)
   483  0001E0  6F03               	movwf	((?_Write_IO))&0ffh
   484  0001E2  0E70               	movlw	(070h)&0ffh
   485                           	
   486  0001E4  EC27  F009         	call	_Write_IO
   487                           	line	78
   488                           ;main.c: 78: sprintf( PrintStr, "\ncase 1") ;
   489  0001E8  0EE2               	movlw	low(STR_8)
   490  0001EA  0101               	movlb	1	; () banked
   491  0001EC  6F0F               	movwf	((?_sprintf))&0ffh
   492  0001EE  0E7F               	movlw	high(STR_8)
   493  0001F0  6F10               	movwf	((?_sprintf+1))&0ffh
   494  0001F2  0E00               	movlw	((c:0))&0ffh
   495                           	
   496  0001F4  EC82  F004         	call	_sprintf
   497                           	line	79
   498                           ;main.c: 79: Print_UART( PrintStr ) ;
   499  0001F8  0E00               	movlw	((c:0))&0ffh
   500                           	
   501  0001FA  ECA8  F007         	call	_Print_UART
   502                           	line	80
   503                           ;main.c: 80: if(Temperature > 1000)
   504  0001FE  0EE9               	movlw	0E9h
   505  000200  0100               	movlb	0	; () banked
   506  000202  5D64               	subwf	((100))&0ffh,w
   507  000204  0E03               	movlw	03h
   508  000206  5965               	subwfb	((100+1))&0ffh,w
   509  000208  A0D8               	btfss	status,0
   510  00020A  EF09  F001         	goto	u2291
   511  00020E  EF0B  F001         	goto	u2290
   512  000212                     u2291:
   513  000212  EF10  F001         	goto	l480
   514  000216                     u2290:
   515                           	line	83
   516                           ;main.c: 81: {
   517                           ;main.c: 83: state = 2;
   518  000216  0E02               	movlw	low(02h)
   519  000218  0101               	movlb	1	; () banked
   520  00021A  6F00               	movwf	((main@state))&0ffh
   521                           	line	85
   522                           ;main.c: 85: }
   523  00021C  EFED  F000         	goto	l478
   524                           	line	86
   525                           	
   526  000220                     l480:		; BSR set to: 0
   527                           
   528                           	line	88
   529                           ;main.c: 86: else
   530                           ;main.c: 87: {
   531                           ;main.c: 88: state = 1;
   532  000220  0E01               	movlw	low(01h)
   533  000222  0101               	movlb	1	; () banked
   534  000224  6F00               	movwf	((main@state))&0ffh
   535                           	line	89
   536                           	
   537  000226                     l481:		; BSR set to: 1
   538                           
   539                           	line	91
   540                           ;main.c: 89: }
   541                           ;main.c: 90: }
   542                           ;main.c: 91: break;
   543  000226  EFF6  F001         	goto	l472
   544                           	line	93
   545                           ;main.c: 93: case 2:
   546                           	
   547  00022A                     l482:		; BSR set to: 1
   548                           
   549                           	line	95
   550                           ;main.c: 94: {
   551                           ;main.c: 95: Write_IO(0x70,0XED);
   552  00022A  0EED               	movlw	low(0EDh)
   553  00022C  6F03               	movwf	((?_Write_IO))&0ffh
   554  00022E  0E70               	movlw	(070h)&0ffh
   555                           	
   556  000230  EC27  F009         	call	_Write_IO
   557                           	line	96
   558                           ;main.c: 96: sprintf( PrintStr, "\ncase 2") ;
   559  000234  0EEA               	movlw	low(STR_9)
   560  000236  0101               	movlb	1	; () banked
   561  000238  6F0F               	movwf	((?_sprintf))&0ffh
   562  00023A  0E7F               	movlw	high(STR_9)
   563  00023C  6F10               	movwf	((?_sprintf+1))&0ffh
   564  00023E  0E00               	movlw	((c:0))&0ffh
   565                           	
   566  000240  EC82  F004         	call	_sprintf
   567                           	line	97
   568                           ;main.c: 97: Print_UART( PrintStr ) ;
   569  000244  0E00               	movlw	((c:0))&0ffh
   570                           	
   571  000246  ECA8  F007         	call	_Print_UART
   572                           	line	98
   573                           ;main.c: 98: Temp_Calc();
   574  00024A  ECB5  F003         	call	_Temp_Calc	;wreg free
   575                           	line	99
   576                           ;main.c: 99: for(i=0;i<150;i++)
   577  00024E  6AD9               	clrf	(0+fsr2l),c
   578  000250  EF2A  F001         	goto	l483
   579                           	line	100
   580                           	
   581  000254                     l483:		; BSR set to: ?
   582                           
   583                           	line	101
   584                           ;main.c: 100: {
   585                           ;main.c: 101: if( Temperature > 1000 && Temperat
                                 ure < 1700)
   586  000254  0EE9               	movlw	0E9h
   587  000256  0100               	movlb	0	; () banked
   588  000258  5D64               	subwf	((100))&0ffh,w
   589  00025A  0E03               	movlw	03h
   590  00025C  5965               	subwfb	((100+1))&0ffh,w
   591  00025E  A0D8               	btfss	status,0
   592  000260  EF34  F001         	goto	u2311
   593  000264  EF36  F001         	goto	u2310
   594  000268                     u2311:
   595  000268  EF5D  F001         	goto	l486
   596  00026C                     u2310:
   597  00026C  0EA4               	movlw	0A4h
   598  00026E  5D64               	subwf	((100))&0ffh,w
   599  000270  0E06               	movlw	06h
   600  000272  5965               	subwfb	((100+1))&0ffh,w
   601  000274  B0D8               	btfsc	status,0
   602  000276  EF3F  F001         	goto	u2321
   603  00027A  EF41  F001         	goto	u2320
   604  00027E                     u2321:
   605  00027E  EF5D  F001         	goto	l486
   606  000282                     u2320:
   607                           	line	103
   608                           ;main.c: 102: {
   609                           ;main.c: 103: if(Temperature > max)
   610  000282  5164               	movf	((100))&0ffh,w
   611  000284  0101               	movlb	1	; () banked
   612  000286  5D01               	subwf	((main@max))&0ffh,w
   613  000288  0100               	movlb	0	; () banked
   614  00028A  5165               	movf	((100+1))&0ffh,w
   615  00028C  0101               	movlb	1	; () banked
   616  00028E  5902               	subwfb	((main@max+1))&0ffh,w
   617  000290  B0D8               	btfsc	status,0
   618  000292  EF4D  F001         	goto	u2331
   619  000296  EF4F  F001         	goto	u2330
   620  00029A                     u2331:
   621  00029A  EF53  F001         	goto	l487
   622  00029E                     u2330:
   623                           	line	104
   624                           ;main.c: 104: max=Temperature;
   625  00029E  C064 F101          	movff	(100),(main@max)
   626  0002A2  C065 F102          	movff	(100+1),(main@max+1)
   627                           	
   628  0002A6                     l487:		; BSR set to: 1
   629                           
   630                           	line	105
   631                           ;main.c: 105: state=3;
   632  0002A6  0E03               	movlw	low(03h)
   633  0002A8  6F00               	movwf	((main@state))&0ffh
   634                           	line	106
   635                           ;main.c: 106: DelayMs(1);
   636  0002AA  0E01               	movlw	low(01h)
   637  0002AC  6F05               	movwf	((?_DelayMs))&0ffh
   638  0002AE  0E00               	movlw	high(01h)
   639  0002B0  6F06               	movwf	((?_DelayMs+1))&0ffh
   640  0002B2  ECE5  F008         	call	_DelayMs	;wreg free
   641                           	line	107
   642                           ;main.c: 107: }
   643  0002B6  EF66  F001         	goto	l488
   644                           	line	108
   645                           	
   646  0002BA                     l486:		; BSR set to: 0
   647                           
   648                           	line	110
   649                           ;main.c: 108: else
   650                           ;main.c: 109: {
   651                           ;main.c: 110: Write_IO(0x70,0XEF);
   652  0002BA  0EEF               	movlw	low(0EFh)
   653  0002BC  0101               	movlb	1	; () banked
   654  0002BE  6F03               	movwf	((?_Write_IO))&0ffh
   655  0002C0  0E70               	movlw	(070h)&0ffh
   656                           	
   657  0002C2  EC27  F009         	call	_Write_IO
   658                           	line	111
   659                           ;main.c: 111: state=4;
   660  0002C6  0E04               	movlw	low(04h)
   661  0002C8  0101               	movlb	1	; () banked
   662  0002CA  6F00               	movwf	((main@state))&0ffh
   663                           	line	112
   664                           	
   665  0002CC                     l488:		; BSR set to: 1
   666                           
   667                           	line	99
   668  0002CC  2AD9               	incf	(0+fsr2l),c
   669  0002CE  0E95               	movlw	(096h-1)
   670  0002D0  64D9               	cpfsgt	(0+fsr2l),c
   671  0002D2  EF6D  F001         	goto	u2341
   672  0002D6  EF6F  F001         	goto	u2340
   673  0002DA                     u2341:
   674  0002DA  EF2A  F001         	goto	l483
   675  0002DE                     u2340:
   676                           	
   677  0002DE                     l484:		; BSR set to: 1
   678                           
   679                           	line	114
   680                           ;main.c: 112: }
   681                           ;main.c: 113: }
   682                           ;main.c: 114: Temperature=max;
   683  0002DE  C101  F064         	movff	(main@max),(100)
   684  0002E2  C102  F065         	movff	(main@max+1),(100+1)
   685                           	line	115
   686                           ;main.c: 115: DelayMs(2500);
   687  0002E6  0EC4               	movlw	low(09C4h)
   688  0002E8  6F05               	movwf	((?_DelayMs))&0ffh
   689  0002EA  0E09               	movlw	high(09C4h)
   690  0002EC  6F06               	movwf	((?_DelayMs+1))&0ffh
   691  0002EE  ECE5  F008         	call	_DelayMs	;wreg free
   692                           	line	117
   693                           ;main.c: 116: }
   694                           ;main.c: 117: break;
   695  0002F2  EFF6  F001         	goto	l472
   696                           	line	118
   697                           ;main.c: 118: case 3:
   698                           	
   699  0002F6                     l489:		; BSR set to: 1
   700                           
   701                           	line	121
   702                           ;main.c: 119: {
   703                           ;main.c: 121: Write_IO(0x70,0XEF);
   704  0002F6  0EEF               	movlw	low(0EFh)
   705  0002F8  6F03               	movwf	((?_Write_IO))&0ffh
   706  0002FA  0E70               	movlw	(070h)&0ffh
   707                           	
   708  0002FC  EC27  F009         	call	_Write_IO
   709                           	line	122
   710                           ;main.c: 122: Write_IO(0x70,0XE7);
   711  000300  0EE7               	movlw	low(0E7h)
   712  000302  0101               	movlb	1	; () banked
   713  000304  6F03               	movwf	((?_Write_IO))&0ffh
   714  000306  0E70               	movlw	(070h)&0ffh
   715                           	
   716  000308  EC27  F009         	call	_Write_IO
   717                           	line	123
   718                           ;main.c: 123: sprintf( PrintStr, "\ncase 3") ;
   719  00030C  0ED2               	movlw	low(STR_10)
   720  00030E  0101               	movlb	1	; () banked
   721  000310  6F0F               	movwf	((?_sprintf))&0ffh
   722  000312  0E7F               	movlw	high(STR_10)
   723  000314  6F10               	movwf	((?_sprintf+1))&0ffh
   724  000316  0E00               	movlw	((c:0))&0ffh
   725                           	
   726  000318  EC82  F004         	call	_sprintf
   727                           	line	124
   728                           ;main.c: 124: Print_UART( PrintStr ) ;
   729  00031C  0E00               	movlw	((c:0))&0ffh
   730                           	
   731  00031E  ECA8  F007         	call	_Print_UART
   732                           	line	125
   733                           ;main.c: 125: sprintf( PrintStr,"%u",Temperature
                                 ) ;
   734  000322  C064 F111          	movff	(100),0+(?_sprintf+02h)
   735  000326  C065 F112          	movff	(100+1),1+(?_sprintf+02h)
   736  00032A  0EF7               	movlw	low(STR_11)
   737  00032C  6F0F               	movwf	((?_sprintf))&0ffh
   738  00032E  0E7F               	movlw	high(STR_11)
   739  000330  6F10               	movwf	((?_sprintf+1))&0ffh
   740  000332  0E00               	movlw	((c:0))&0ffh
   741                           	
   742  000334  EC82  F004         	call	_sprintf
   743                           	line	126
   744                           ;main.c: 126: Print_Num_LCD( PrintStr);
   745  000338  0E00               	movlw	((c:0))&0ffh
   746                           	
   747  00033A  EC9F  F008         	call	_Print_Num_LCD
   748                           	line	127
   749                           ;main.c: 127: Uart2_Temp(Temperature);
   750  00033E  C064 F103          	movff	(100),(?_Uart2_Temp)
   751  000342  C065 F104          	movff	(100+1),(?_Uart2_Temp+1)
   752  000346  EC5E  F009         	call	_Uart2_Temp	;wreg free
   753                           	line	128
   754                           ;main.c: 128: DelayMs(13000);
   755  00034A  0EC8               	movlw	low(032C8h)
   756  00034C  6F05               	movwf	((?_DelayMs))&0ffh
   757  00034E  0E32               	movlw	high(032C8h)
   758  000350  6F06               	movwf	((?_DelayMs+1))&0ffh
   759  000352  ECE5  F008         	call	_DelayMs	;wreg free
   760                           	line	129
   761                           ;main.c: 129: Write_IO(0x70,0XEF);
   762  000356  0EEF               	movlw	low(0EFh)
   763  000358  6F03               	movwf	((?_Write_IO))&0ffh
   764  00035A  0E70               	movlw	(070h)&0ffh
   765                           	
   766  00035C  EC27  F009         	call	_Write_IO
   767                           	line	130
   768                           ;main.c: 130: if(AdcCount>3000)
   769  000360  0EB9               	movlw	0B9h
   770  000362  0100               	movlb	0	; () banked
   771  000364  5D66               	subwf	((102))&0ffh,w
   772  000366  0E0B               	movlw	0Bh
   773  000368  5967               	subwfb	((102+1))&0ffh,w
   774  00036A  A0D8               	btfss	status,0
   775  00036C  EFBA  F001         	goto	u2351
   776  000370  EFBC  F001         	goto	u2350
   777  000374                     u2351:
   778  000374  EFED  F000         	goto	l478
   779  000378                     u2350:
   780                           	line	132
   781                           ;main.c: 131: {
   782                           ;main.c: 132: state=0;
   783  000378  0101               	movlb	1	; () banked
   784  00037A  6B00               	clrf	((main@state))&0ffh
   785                           	line	134
   786                           	
   787  00037C                     l490:		; BSR set to: 1
   788                           
   789                           	line	136
   790                           ;main.c: 134: }
   791                           ;main.c: 135: }
   792                           ;main.c: 136: break;
   793  00037C  EFF6  F001         	goto	l472
   794                           	line	137
   795                           ;main.c: 137: case 4:
   796                           	
   797  000380                     l491:		; BSR set to: 1
   798                           
   799                           	line	140
   800                           ;main.c: 138: {
   801                           ;main.c: 140: sprintf( PrintStr, "\ncase4 ") ;
   802  000380  0EDA               	movlw	low(STR_12)
   803  000382  6F0F               	movwf	((?_sprintf))&0ffh
   804  000384  0E7F               	movlw	high(STR_12)
   805  000386  6F10               	movwf	((?_sprintf+1))&0ffh
   806  000388  0E00               	movlw	((c:0))&0ffh
   807                           	
   808  00038A  EC82  F004         	call	_sprintf
   809                           	line	141
   810                           ;main.c: 141: Print_UART( PrintStr ) ;
   811  00038E  0E00               	movlw	((c:0))&0ffh
   812                           	
   813  000390  ECA8  F007         	call	_Print_UART
   814                           	line	142
   815                           ;main.c: 142: sprintf( PrintStr, "err") ;
   816  000394  0EFA               	movlw	low(STR_13)
   817  000396  6F0F               	movwf	((?_sprintf))&0ffh
   818  000398  0E7F               	movlw	high(STR_13)
   819  00039A  6F10               	movwf	((?_sprintf+1))&0ffh
   820  00039C  0E00               	movlw	((c:0))&0ffh
   821                           	
   822  00039E  EC82  F004         	call	_sprintf
   823                           	line	143
   824                           ;main.c: 143: Print_Str_LCD( PrintStr ) ;
   825  0003A2  0E00               	movlw	((c:0))&0ffh
   826                           	
   827  0003A4  EC76  F008         	call	_Print_Str_LCD
   828                           	line	144
   829                           ;main.c: 144: if(AdcCount>3000)
   830  0003A8  0EB9               	movlw	0B9h
   831  0003AA  0100               	movlb	0	; () banked
   832  0003AC  5D66               	subwf	((102))&0ffh,w
   833  0003AE  0E0B               	movlw	0Bh
   834  0003B0  5967               	subwfb	((102+1))&0ffh,w
   835  0003B2  A0D8               	btfss	status,0
   836  0003B4  EFDE  F001         	goto	u2361
   837  0003B8  EFE0  F001         	goto	u2360
   838  0003BC                     u2361:
   839  0003BC  EFED  F000         	goto	l478
   840  0003C0                     u2360:
   841                           	line	146
   842                           ;main.c: 145: {
   843                           ;main.c: 146: state=0;
   844  0003C0  0101               	movlb	1	; () banked
   845  0003C2  6B00               	clrf	((main@state))&0ffh
   846                           	line	147
   847                           ;main.c: 147: Clr_LCD();
   848  0003C4  EC56  F009         	call	_Clr_LCD	;wreg free
   849                           	line	148
   850                           	
   851  0003C8                     l492:		; BSR set to: 1
   852                           
   853                           	line	150
   854                           ;main.c: 148: }
   855                           ;main.c: 149: }
   856                           ;main.c: 150: break;
   857  0003C8  EFF6  F001         	goto	l472
   858                           	line	60
   859                           	
   860  0003CC                     l476:		; BSR set to: 1
   861                           
   862  0003CC  5100               	movf	((main@state))&0ffh,w
   863  0003CE  0A00               	xorlw	0 ^ 0
   864  0003D0  E101 D6E5          	bz	l477
   865  0003D4  0A01               	xorlw	1 ^ 0
   866  0003D6  E101 D702          	bz	l479
   867  0003DA  0A03               	xorlw	2 ^ 1
   868  0003DC  E101 D725          	bz	l482
   869  0003E0  0A01               	xorlw	3 ^ 2
   870  0003E2  E089               	bz	l489
   871  0003E4  0A07               	xorlw	4 ^ 3
   872  0003E6  E0CC               	bz	l491
   873  0003E8  EFF6  F001         	goto	l472
   874                           
   875                           	line	152
   876                           	
   877  0003EC                     l472:		; BSR set to: ?
   878                           
   879                           	line	48
   880  0003EC  EFAB  F000         	goto	l473
   881                           	global	start
   882  0003F0  EF0A  F000         	goto	start
   883                           	opt stack 0
   884                           GLOBAL __end_of_main
   885  0003F4                     	__end_of_main:
   886                           	FNSIZE	_main,3,0
   887                           ; =============== function _main ends ==========
                                 ==
   888                           
   889                                   psect   text1,class=CODE,space=0,reloc=2
   890                           	line	153
   891                           
   892                           	opt pm
   893                           	signat	_main,88
   894                           	global	_Print_Str_LCD
   895                           	global	??_Print_Str_LCD
   896                           	global	?_Print_Str_LCD
   897                           
   898                           ; *************** function _Print_Str_LCD ******
                                 ***********
   899                           ; Defined at:
   900                           ;		line 127 in file "C:\Users\deepesh\Desktop\Fi
                                 nal codes\lcd.c"
   901                           ; Parameters:
   902                           ;		str            size:   1reg:   wre	type: PTR 
                                 char ; Largest target is 64
   903                           ;		 -> PrintStr(64), 
   904                           ; Auto variables:
   905                           ;		i           	       	type: unsigned short 
   906                           ; Return value:
   907                           ;		type: void 
   908                           ;		size: 0
   909                           ; Registers used:
   910                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, stat
                                 us,2, status,0, prodl, prodh, cstack
   911                           ; Tracked objects:
   912                           ;		On entry : F/1
   913                           ;		On exit  : F/1
   914                           ;		Unchanged: FFFFFFF0/0
   915                           ; Data sizes:
   916                           ;		Autos:    2
   917                           ;		Params:   0
   918                           ;		Temp:     1
   919                           ;		Total:    3
   920                           ; This function calls:
   921                           ;		_Update_LCD
   922                           ; This function is called by:
   923                           ;		_main
   924                           ; This function uses a non-reentrant model
   925                           ; 
   926                           	file	"C:\Users\deepesh\Desktop\Final codes\lcd.
                                 c"
   927                           	line	127
   928  000000                     	__size_of_Print_Str_LCD	equ	__end_of_Print_Str_
                                 LCD-_Print_Str_LCD
   929                           ;lcd.c: 126: void Print_Str_LCD(signed char *str
                                 )
   930                           ;lcd.c: 127: {
   931                           	
   932  0010EC                     _Print_Str_LCD:		; BSR set to: 1
   933                           
   934                           	opt stack 29
   935                           ; Print_Str_LCD@str loaded to fsr2l
   936                           	line	129
   937  0010EC  CFE8 FFD9          	movff	0+wreg,fsr2l
   938  0010F0  0E01               	movlw	low(01h)
   939  0010F2  6F03               	movwf	((Print_Str_LCD@i))&0ffh
   940  0010F4  0E00               	movlw	high(01h)
   941  0010F6  6F04               	movwf	((Print_Str_LCD@i+1))&0ffh
   942  0010F8  EF90  F008         	goto	l2441
   943                           	line	130
   944                           	
   945  0010FC                     l2438:		; BSR set to: 1
   946                           
   947                           	line	131
   948                           ;lcd.c: 130: {
   949                           ;lcd.c: 131: Update_LCD(i,str[i-1],0);
   950  0010FC  0E00               	movlw	low(0)
   951  0010FE  6F09               	movwf	(0+(?_Update_LCD+03h))&0ffh
   952  001100  50D9               	movf	(0+fsr2l),c,w
   953  001102  2503               	addwf	((Print_Str_LCD@i))&0ffh,w
   954  001104  6F05               	movwf	(??_Print_Str_LCD+2+0)&0ffh
   955  001106  0505               	decf	((??_Print_Str_LCD+2+0))&0ffh,w
   956  001108  6EE9               	movwf	fsr0l
   957  00110A  6AEA               	clrf	fsr0h
   958  00110C  50EF               	movf	indf0,w
   959  00110E  6F08               	movwf	(0+(?_Update_LCD+02h))&0ffh
   960  001110  C103  F106         	movff	(Print_Str_LCD@i),(?_Update_LCD)
   961  001114  C104  F107         	movff	(Print_Str_LCD@i+1),(?_Update_LCD+1)
   962  001118  ECE6  F002         	call	_Update_LCD	;wreg free
   963                           	line	129
   964  00111C  4B03               	infsnz	((Print_Str_LCD@i))&0ffh
   965  00111E  2B04               	incf	((Print_Str_LCD@i+1))&0ffh
   966                           	
   967  001120                     l2441:		; BSR set to: 1
   968                           
   969  001120  50D9               	movf	(0+fsr2l),c,w
   970  001122  2503               	addwf	((Print_Str_LCD@i))&0ffh,w
   971  001124  6F05               	movwf	(??_Print_Str_LCD+2+0)&0ffh
   972  001126  0505               	decf	((??_Print_Str_LCD+2+0))&0ffh,w
   973  001128  6EE9               	movwf	fsr0l
   974  00112A  6AEA               	clrf	fsr0h
   975  00112C  50EF               	movf	indf0,w
   976  00112E  A4D8               	btfss	status,2
   977  001130  EF9C  F008         	goto	u2371
   978  001134  EF9E  F008         	goto	u2370
   979  001138                     u2371:
   980  001138  EF7E  F008         	goto	l2438
   981  00113C                     u2370:
   982                           	
   983  00113C                     l2439:		; BSR set to: 1
   984                           
   985                           	line	134
   986                           ;lcd.c: 132: }
   987                           ;lcd.c: 134: }
   988  00113C                     l2437:
   989                           			; BSR set to: 1
   990                           
   991  00113C  0012               	return
   992                           	opt stack 0
   993                           GLOBAL __end_of_Print_Str_LCD
   994  00113E                     	__end_of_Print_Str_LCD:
   995                           	FNSIZE	_Print_Str_LCD,3,0
   996                           ; =============== function _Print_Str_LCD ends =
                                 ===========
   997                           
   998                           	signat	_Print_Str_LCD,4216
   999                           	global	_Read_adc
  1000                           	global	??_Read_adc
  1001                           	global	?_Read_adc
  1002                           
  1003                           ; *************** function _Read_adc ***********
                                 ******
  1004                           ; Defined at:
  1005                           ;		line 78 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\adc.c"
  1006                           ; Parameters:
  1007                           ;		None
  1008                           ; Auto variables:
  1009                           ;		data        	       	type: unsigned short 
  1010                           ; Return value:
  1011                           ;		type: unsigned short 
  1012                           ;		size: 2
  1013                           ; Registers used:
  1014                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
                                 , prodl, prodh, cstack
  1015                           ; Tracked objects:
  1016                           ;		On entry : E/1
  1017                           ;		On exit  : 0/0
  1018                           ;		Unchanged: FFFFFFF0/0
  1019                           ; Data sizes:
  1020                           ;		Autos:    2
  1021                           ;		Params:   2
  1022                           ;		Temp:     0
  1023                           ;		Total:    4
  1024                           ; This function calls:
  1025                           ;		_SPI_Rx_Tx
  1026                           ; This function is called by:
  1027                           ;		_main
  1028                           ; This function uses a non-reentrant model
  1029                           ; 
  1030                                   psect   text2,class=CODE,space=0,reloc=2
  1031                           
  1032                           	opt pm
  1033                           	file	"C:\Users\deepesh\Desktop\Final codes\adc.
                                 c"
  1034                           	line	78
  1035  000000                     	__size_of_Read_adc	equ	__end_of_Read_adc-_Read_
                                 adc
  1036                           ;adc.c: 77: unsigned short int Read_adc(void)
  1037                           ;adc.c: 78: {
  1038                           	
  1039  001184                     _Read_adc:		; BSR set to: ?
  1040                           
  1041                           	opt stack 29
  1042                           	line	81
  1043  001184  9E85               	bcf	((c:3973)),c,7	;volatile
  1044                           	line	82
  1045                           ;adc.c: 82: while(PORTAbits.RA2)
  1046  001186  EFC5  F008         	goto	l1466
  1047                           	line	84
  1048                           ;adc.c: 83: {
  1049                           	
  1050  00118A                     l1466:		; BSR set to: ?
  1051                           
  1052                           	line	82
  1053                           	
  1054  00118A  B480               	btfsc	((c:3968)),c,2	;volatile
  1055  00118C  EFCA  F008         	goto	u2381
  1056  001190  EFCC  F008         	goto	u2380
  1057  001194                     u2381:
  1058  001194  EFC5  F008         	goto	l1466
  1059  001198                     u2380:
  1060                           	
  1061  001198                     l1468:		; BSR set to: ?
  1062                           
  1063                           	line	85
  1064                           ;adc.c: 84: }
  1065                           ;adc.c: 85: data = SPI_Rx_Tx(0xFF);
  1066  001198  0EFF               	movlw	(0FFh)&0ffh
  1067                           	
  1068  00119A  EC44  F008         	call	_SPI_Rx_Tx
  1069  00119E  0101               	movlb	1	; () banked
  1070  0011A0  6F05               	movwf	((Read_adc@data))&0ffh
  1071  0011A2  6B06               	clrf	((Read_adc@data+1))&0ffh
  1072                           	line	86
  1073                           ;adc.c: 86: data <<= 8;
  1074  0011A4  5105               	movf	((Read_adc@data))&0ffh,w
  1075  0011A6  6F06               	movwf	((Read_adc@data+1))&0ffh
  1076  0011A8  6B05               	clrf	((Read_adc@data))&0ffh
  1077                           	line	87
  1078                           ;adc.c: 87: data |= SPI_Rx_Tx(0xFF);
  1079  0011AA  0EFF               	movlw	(0FFh)&0ffh
  1080                           	
  1081  0011AC  EC44  F008         	call	_SPI_Rx_Tx
  1082  0011B0  0101               	movlb	1	; () banked
  1083  0011B2  1305               	iorwf	((Read_adc@data))&0ffh
  1084                           	line	88
  1085                           ;adc.c: 88: SPI_Rx_Tx(0x12);
  1086  0011B4  0E12               	movlw	(012h)&0ffh
  1087                           	
  1088  0011B6  EC44  F008         	call	_SPI_Rx_Tx
  1089                           	line	89
  1090                           ;adc.c: 89: PORTFbits.RF7= 1;
  1091  0011BA  8E85               	bsf	((c:3973)),c,7	;volatile
  1092                           	line	90
  1093  0011BC  C105  F103         	movff	(Read_adc@data),(?_Read_adc)
  1094  0011C0  C106  F104         	movff	(Read_adc@data+1),(?_Read_adc+1)
  1095  0011C4  EFE4  F008         	goto	l1465
  1096                           	line	91
  1097                           ;adc.c: 91: }
  1098  0011C8                     l1465:
  1099                           			; BSR set to: ?
  1100                           
  1101  0011C8  0012               	return
  1102                           	opt stack 0
  1103                           GLOBAL __end_of_Read_adc
  1104  0011CA                     	__end_of_Read_adc:
  1105                           	FNSIZE	_Read_adc,2,2
  1106                           ; =============== function _Read_adc ends ======
                                 ======
  1107                           
  1108                           	signat	_Read_adc,90
  1109                           	global	_I2C_Init
  1110                           	global	??_I2C_Init
  1111                           	global	?_I2C_Init
  1112                           
  1113                           ; *************** function _I2C_Init ***********
                                 ******
  1114                           ; Defined at:
  1115                           ;		line 10 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\I2Cforegnd.c"
  1116                           ; Parameters:
  1117                           ;		None
  1118                           ; Auto variables:
  1119                           ;		None
  1120                           ; Return value:
  1121                           ;		type: void 
  1122                           ;		size: 0
  1123                           ; Registers used:
  1124                           ;		wreg, status,2
  1125                           ; Tracked objects:
  1126                           ;		On entry : F/1
  1127                           ;		On exit  : F/E
  1128                           ;		Unchanged: FFFFFFF0/0
  1129                           ; Data sizes:
  1130                           ;		Autos:    0
  1131                           ;		Params:   0
  1132                           ;		Temp:     0
  1133                           ;		Total:    0
  1134                           ; This function calls:
  1135                           ;		Nothing
  1136                           ; This function is called by:
  1137                           ;		_main
  1138                           ; This function uses a non-reentrant model
  1139                           ; 
  1140                                   psect   text3,class=CODE,space=0,reloc=2
  1141                           
  1142                           	opt pm
  1143                           	file	"C:\Users\deepesh\Desktop\Final codes\I2Cf
                                 oregnd.c"
  1144                           	line	10
  1145  000000                     	__size_of_I2C_Init	equ	__end_of_I2C_Init-_I2C_I
                                 nit
  1146                           ;I2Cforegnd.c: 9: void I2C_Init (void)
  1147                           ;I2Cforegnd.c: 10: {
  1148                           	
  1149  001292                     _I2C_Init:		; BSR set to: 1
  1150                           
  1151                           	opt stack 29
  1152                           	line	11
  1153  001292  8C95               	bsf	((c:3989)),c,6	;volatile
  1154                           	line	12
  1155                           ;I2Cforegnd.c: 12: TRISDbits.TRISD5=1;
  1156  001294  8A95               	bsf	((c:3989)),c,5	;volatile
  1157                           	line	13
  1158                           ;I2Cforegnd.c: 13: SSP2CON1 = 0x08;
  1159  001296  0E08               	movlw	low(08h)
  1160  001298  010E               	movlb	14	; () banked
  1161  00129A  6FFF               	movwf	((3839))&0ffh	;volatile
  1162                           	line	14
  1163                           ;I2Cforegnd.c: 14: SSP2ADD = 0x13 ;
  1164  00129C  0E13               	movlw	low(013h)
  1165  00129E  010F               	movlb	15	; () banked
  1166  0012A0  6F01               	movwf	((3841))&0ffh	;volatile
  1167                           	line	15
  1168                           ;I2Cforegnd.c: 15: SSP2STAT = 0;
  1169  0012A2  6B00               	clrf	((3840))&0ffh	;volatile
  1170                           	line	16
  1171                           ;I2Cforegnd.c: 16: PIE2bits.SSP2IE=1;
  1172  0012A4  8AA0               	bsf	((c:4000)),c,5	;volatile
  1173                           	line	17
  1174                           ;I2Cforegnd.c: 17: SSP2CON1bits.SSPEN=1;
  1175  0012A6  010E               	movlb	14	; () banked
  1176  0012A8  8BFF               	bsf	((3839))&0ffh,5	;volatile
  1177                           	line	21
  1178                           ;I2Cforegnd.c: 21: }
  1179  0012AA                     l3893:
  1180                           			; BSR set to: 14
  1181                           
  1182  0012AA  0012               	return
  1183                           	opt stack 0
  1184                           GLOBAL __end_of_I2C_Init
  1185  0012AC                     	__end_of_I2C_Init:
  1186                           	FNSIZE	_I2C_Init,0,0
  1187                           ; =============== function _I2C_Init ends ======
                                 ======
  1188                           
  1189                           	signat	_I2C_Init,88
  1190                           	global	_UART2_Init
  1191                           	global	??_UART2_Init
  1192                           	global	?_UART2_Init
  1193                           
  1194                           ; *************** function _UART2_Init *********
                                 ********
  1195                           ; Defined at:
  1196                           ;		line 23 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\uart2.c"
  1197                           ; Parameters:
  1198                           ;		baudrate       size:   4offs:   0	type: unsig
                                 ned long 
  1199                           ; Auto variables:
  1200                           ;		x           	       	type: unsigned long 
  1201                           ; Return value:
  1202                           ;		type: void 
  1203                           ;		size: 0
  1204                           ; Registers used:
  1205                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
  1206                           ; Tracked objects:
  1207                           ;		On entry : F/1
  1208                           ;		On exit  : F/1
  1209                           ;		Unchanged: FFFFFFF0/0
  1210                           ; Data sizes:
  1211                           ;		Autos:    4
  1212                           ;		Params:   4
  1213                           ;		Temp:     4
  1214                           ;		Total:   12
  1215                           ; This function calls:
  1216                           ;		___lldiv
  1217                           ;		_sprintf
  1218                           ;		_Print_UART
  1219                           ; This function is called by:
  1220                           ;		_main
  1221                           ; This function uses a non-reentrant model
  1222                           ; 
  1223                                   psect   text4,class=CODE,space=0,reloc=2
  1224                           
  1225                           	opt pm
  1226                           	file	"C:\Users\deepesh\Desktop\Final codes\uart
                                 2.c"
  1227                           	line	23
  1228  000000                     	__size_of_UART2_Init	equ	__end_of_UART2_Init-_U
                                 ART2_Init
  1229                           ;uart2.c: 22: void UART2_Init( unsigned long int
                                  baudrate)
  1230                           ;uart2.c: 23: {
  1231                           	
  1232  000D0E                     _UART2_Init:		; BSR set to: 1
  1233                           
  1234                           	opt stack 29
  1235                           	line	24
  1236  000D0E  9098               	bcf	((c:3992)),c,0	;volatile
  1237                           	line	25
  1238                           ;uart2.c: 25: PORTGbits.RG0 =1;
  1239  000D10  8086               	bsf	((c:3974)),c,0	;volatile
  1240                           	line	28
  1241                           ;uart2.c: 26: unsigned long int x ;
  1242                           ;uart2.c: 28: x=4000000;
  1243  000D12  0E00               	movlw	low(03D0900h)
  1244  000D14  0101               	movlb	1	; () banked
  1245  000D16  6F07               	movwf	((UART2_Init@x))&0ffh
  1246  000D18  0E09               	movlw	high(03D0900h)
  1247  000D1A  6F08               	movwf	((UART2_Init@x+1))&0ffh
  1248  000D1C  0E3D               	movlw	low highword(03D0900h)
  1249  000D1E  6F09               	movwf	((UART2_Init@x+2))&0ffh
  1250  000D20  0E00               	movlw	high highword(03D0900h)
  1251  000D22  6F0A               	movwf	((UART2_Init@x+3))&0ffh
  1252                           	line	29
  1253                           ;uart2.c: 29: x/=16;
  1254  000D24  0E04               	movlw	04h
  1255  000D26  6F0B               	movwf	(??_UART2_Init+4+0)&0ffh
  1256  000D28                     u2395:
  1257  000D28  90D8               	bcf	status,0
  1258  000D2A  330A               	rrcf	((UART2_Init@x+3))&0ffh
  1259  000D2C  3309               	rrcf	((UART2_Init@x+2))&0ffh
  1260  000D2E  3308               	rrcf	((UART2_Init@x+1))&0ffh
  1261  000D30  3307               	rrcf	((UART2_Init@x))&0ffh
  1262  000D32  2F0B               	decfsz	(??_UART2_Init+4+0)&0ffh
  1263  000D34  EF94  F006         	goto	u2395
  1264                           
  1265                           	line	30
  1266                           ;uart2.c: 30: x/=baudrate;
  1267  000D38  C103  F113         	movff	(UART2_Init@baudrate),0+(?___lldiv+04h)
  1268  000D3C  C104  F114         	movff	(UART2_Init@baudrate+1),1+(?___lldiv+04h)
  1269  000D40  C105  F115         	movff	(UART2_Init@baudrate+2),2+(?___lldiv+04h)
  1270  000D44  C106  F116         	movff	(UART2_Init@baudrate+3),3+(?___lldiv+04h)
  1271  000D48  C107  F10F         	movff	(UART2_Init@x),(?___lldiv)
  1272  000D4C  C108  F110         	movff	(UART2_Init@x+1),(?___lldiv+1)
  1273  000D50  C109  F111         	movff	(UART2_Init@x+2),(?___lldiv+2)
  1274  000D54  C10A  F112         	movff	(UART2_Init@x+3),(?___lldiv+3)
  1275  000D58  ECD7  F006         	call	___lldiv	;wreg free
  1276  000D5C  C10F  F107         	movff	0+?___lldiv,(UART2_Init@x)
  1277  000D60  C110  F108         	movff	1+?___lldiv,(UART2_Init@x+1)
  1278  000D64  C111  F109         	movff	2+?___lldiv,(UART2_Init@x+2)
  1279  000D68  C112  F10A         	movff	3+?___lldiv,(UART2_Init@x+3)
  1280                           	line	31
  1281                           ;uart2.c: 31: x-=1;
  1282  000D6C  0707               	decf	((UART2_Init@x))&0ffh
  1283  000D6E  0E00               	movlw	0
  1284  000D70  5B08               	subwfb	((UART2_Init@x+1))&0ffh
  1285  000D72  5B09               	subwfb	((UART2_Init@x+2))&0ffh
  1286  000D74  5B0A               	subwfb	((UART2_Init@x+3))&0ffh
  1287                           	line	33
  1288                           ;uart2.c: 33: BAUDCON2bits.BRG16=0;
  1289  000D76  010F               	movlb	15	; () banked
  1290  000D78  9720               	bcf	((3872))&0ffh,3	;volatile
  1291                           	line	34
  1292                           ;uart2.c: 34: SPBRG2=x;
  1293  000D7A  C107  FF1E         	movff	(UART2_Init@x),(3870)	;volatile
  1294                           	line	35
  1295                           ;uart2.c: 35: TRISGbits.TRISG1=0;
  1296  000D7E  9298               	bcf	((c:3992)),c,1	;volatile
  1297                           	line	36
  1298                           ;uart2.c: 36: TRISGbits.TRISG2=1;
  1299  000D80  8498               	bsf	((c:3992)),c,2	;volatile
  1300                           	line	37
  1301                           ;uart2.c: 37: TXSTA2bits.SYNC=0;
  1302  000D82  010F               	movlb	15	; () banked
  1303  000D84  9921               	bcf	((3873))&0ffh,4	;volatile
  1304                           	line	38
  1305                           ;uart2.c: 38: RCSTA2bits.SPEN=1;
  1306  000D86  010F               	movlb	15	; () banked
  1307  000D88  8F22               	bsf	((3874))&0ffh,7	;volatile
  1308                           	line	39
  1309                           ;uart2.c: 39: TXSTA2bits.BRGH=1;
  1310  000D8A  010F               	movlb	15	; () banked
  1311  000D8C  8521               	bsf	((3873))&0ffh,2	;volatile
  1312                           	line	41
  1313                           ;uart2.c: 41: TXSTA2bits.TXEN=1;
  1314  000D8E  010F               	movlb	15	; () banked
  1315  000D90  8B21               	bsf	((3873))&0ffh,5	;volatile
  1316                           	line	42
  1317                           ;uart2.c: 42: RCSTA2bits.CREN=1;
  1318  000D92  010F               	movlb	15	; () banked
  1319  000D94  8922               	bsf	((3874))&0ffh,4	;volatile
  1320                           	line	43
  1321                           ;uart2.c: 43: sprintf( PrintStr, "\nUART2 INIT")
                                 ;
  1322  000D96  0E8B               	movlw	low(STR_21)
  1323  000D98  0101               	movlb	1	; () banked
  1324  000D9A  6F0F               	movwf	((?_sprintf))&0ffh
  1325  000D9C  0E7F               	movlw	high(STR_21)
  1326  000D9E  6F10               	movwf	((?_sprintf+1))&0ffh
  1327  000DA0  0E00               	movlw	((c:0))&0ffh
  1328                           	
  1329  000DA2  EC82  F004         	call	_sprintf
  1330                           	line	44
  1331                           ;uart2.c: 44: Print_UART( PrintStr ) ;
  1332  000DA6  0E00               	movlw	((c:0))&0ffh
  1333                           	
  1334  000DA8  ECA8  F007         	call	_Print_UART
  1335                           	line	45
  1336                           ;uart2.c: 45: }
  1337  000DAC                     l5376:
  1338                           			; BSR set to: 1
  1339                           
  1340  000DAC  0012               	return
  1341                           	opt stack 0
  1342                           GLOBAL __end_of_UART2_Init
  1343  000DAE                     	__end_of_UART2_Init:
  1344                           	FNSIZE	_UART2_Init,8,4
  1345                           ; =============== function _UART2_Init ends ====
                                 ========
  1346                           
  1347                           	signat	_UART2_Init,4216
  1348                           	global	_Temp_Calc
  1349                           	global	??_Temp_Calc
  1350                           	global	?_Temp_Calc
  1351                           
  1352                           ; *************** function _Temp_Calc **********
                                 *******
  1353                           ; Defined at:
  1354                           ;		line 148 in file "C:\Users\deepesh\Desktop\Fi
                                 nal codes\temp.c"
  1355                           ; Parameters:
  1356                           ;		None
  1357                           ; Auto variables:
  1358                           ;		mask        	       	type: unsigned short 
  1359                           ;		probe       	       	type: unsigned short 
  1360                           ; Return value:
  1361                           ;		type: void 
  1362                           ;		size: 0
  1363                           ; Registers used:
  1364                           ;		wreg, fsr1l, fsr2l, status,2, status,0, tblpt
                                 rl, tblptrh, tblptru, tablat, prodl, prodh, csta
                                 ck
  1365                           ; Tracked objects:
  1366                           ;		On entry : F/1
  1367                           ;		On exit  : F/0
  1368                           ;		Unchanged: FFFFFFF0/0
  1369                           ; Data sizes:
  1370                           ;		Autos:    2
  1371                           ;		Params:   0
  1372                           ;		Temp:    10
  1373                           ;		Total:   12
  1374                           ; This function calls:
  1375                           ;		_Scale
  1376                           ; This function is called by:
  1377                           ;		_main
  1378                           ; This function uses a non-reentrant model
  1379                           ; 
  1380                                   psect   text5,class=CODE,space=0,reloc=2
  1381                           
  1382                           	opt pm
  1383                           	file	"C:\Users\deepesh\Desktop\Final codes\temp
                                 .c"
  1384                           	line	148
  1385  000000                     	__size_of_Temp_Calc	equ	__end_of_Temp_Calc-_Tem
                                 p_Calc
  1386                           ;temp.c: 147: void Temp_Calc( void )
  1387                           ;temp.c: 148: {
  1388                           	
  1389  00076A                     _Temp_Calc:		; BSR set to: 1
  1390                           
  1391                           	opt stack 29
  1392                           	line	150
  1393  00076A  0E00               	movlw	low(0200h)
  1394  00076C  6F03               	movwf	((Temp_Calc@mask))&0ffh
  1395  00076E  0E02               	movlw	high(0200h)
  1396  000770  6F04               	movwf	((Temp_Calc@mask+1))&0ffh
  1397  000772  0E00               	movlw	low(0200h)
  1398  000774  6EF3               	movwf	(0+prodl),c
  1399  000776  0E02               	movlw	high(0200h)
  1400  000778  6EF4               	movwf	(1+prodl),c
  1401                           	line	151
  1402  00077A  0E98               	movlw	low(04998h)
  1403  00077C  6F1F               	movwf	(0+(?_Scale+010h))&0ffh
  1404  00077E  0E49               	movlw	high(04998h)
  1405  000780  6F20               	movwf	(1+(?_Scale+010h))&0ffh
  1406  000782  0E00               	movlw	low highword(04998h)
  1407  000784  6F21               	movwf	(2+(?_Scale+010h))&0ffh
  1408  000786  0E00               	movlw	high highword(04998h)
  1409  000788  6F22               	movwf	(3+(?_Scale+010h))&0ffh
  1410  00078A  0E00               	movlw	low(0)
  1411  00078C  6F1B               	movwf	(0+(?_Scale+0Ch))&0ffh
  1412  00078E  0E00               	movlw	high(0)
  1413  000790  6F1C               	movwf	(1+(?_Scale+0Ch))&0ffh
  1414  000792  0E00               	movlw	low highword(0)
  1415  000794  6F1D               	movwf	(2+(?_Scale+0Ch))&0ffh
  1416  000796  0E00               	movlw	high highword(0)
  1417  000798  6F1E               	movwf	(3+(?_Scale+0Ch))&0ffh
  1418  00079A  0E4C               	movlw	low(04B4Ch)
  1419  00079C  6F17               	movwf	(0+(?_Scale+08h))&0ffh
  1420  00079E  0E4B               	movlw	high(04B4Ch)
  1421  0007A0  6F18               	movwf	(1+(?_Scale+08h))&0ffh
  1422  0007A2  0E00               	movlw	low highword(04B4Ch)
  1423  0007A4  6F19               	movwf	(2+(?_Scale+08h))&0ffh
  1424  0007A6  0E00               	movlw	high highword(04B4Ch)
  1425  0007A8  6F1A               	movwf	(3+(?_Scale+08h))&0ffh
  1426  0007AA  0E02               	movlw	low(02h)
  1427  0007AC  6F13               	movwf	(0+(?_Scale+04h))&0ffh
  1428  0007AE  0E00               	movlw	high(02h)
  1429  0007B0  6F14               	movwf	(1+(?_Scale+04h))&0ffh
  1430  0007B2  0E00               	movlw	low highword(02h)
  1431  0007B4  6F15               	movwf	(2+(?_Scale+04h))&0ffh
  1432  0007B6  0E00               	movlw	high highword(02h)
  1433  0007B8  6F16               	movwf	(3+(?_Scale+04h))&0ffh
  1434  0007BA  0100               	movlb	0	; () banked
  1435  0007BC  0101               	movlb	1	; () banked
  1436  0007BE  C066 F10F          	movff	(102),(?_Scale)
  1437  0007C2  0100               	movlb	0	; () banked
  1438  0007C4  0101               	movlb	1	; () banked
  1439  0007C6  C067 F110          	movff	(102+1),(?_Scale+1)
  1440  0007CA  6B11               	clrf	((?_Scale+2))&0ffh
  1441  0007CC  6B12               	clrf	((?_Scale+3))&0ffh
  1442                           
  1443  0007CE  EC30  F006         	call	_Scale	;wreg free
  1444  0007D2  C10F  F069         	movff	0+?_Scale,(105)
  1445  0007D6  C110  F06A         	movff	1+?_Scale,(105+1)
  1446                           	line	156
  1447                           ;temp.c: 156: for( ; mask != 0 ; )
  1448  0007DA  EFEF  F003         	goto	l2915
  1449                           	line	157
  1450                           	
  1451  0007DE                     l2915:		; BSR set to: 1
  1452                           
  1453                           	line	158
  1454                           ;temp.c: 157: {
  1455                           ;temp.c: 158: if( mV < RType[ probe ] )
  1456  0007DE  90D8               	bcf	status,0
  1457  0007E0  34F3               	rlcf	(0+prodl),c,w
  1458  0007E2  6F05               	movwf	(??_Temp_Calc+2+0)&0ffh
  1459  0007E4  34F4               	rlcf	(1+prodl),c,w
  1460  0007E6  6F06               	movwf	1+(??_Temp_Calc+2+0)&0ffh
  1461  0007E8  0E64               	movlw	low((_RType))
  1462  0007EA  2505               	addwf	(??_Temp_Calc+2+0)&0ffh,w
  1463  0007EC  6EF6               	movwf	tblptrl
  1464  0007EE  0E77               	movlw	high((_RType))
  1465  0007F0  2106               	addwfc	(??_Temp_Calc+2+1)&0ffh,w
  1466  0007F2  6EF7               	movwf	tblptrh
  1467  0007F4  0009               	tblrd	*+
  1468                           	
  1469  0007F6  CFF5 F107          	movff	tablat,??_Temp_Calc+4+0
  1470  0007FA  0009               	tblrd	*+
  1471                           	
  1472  0007FC  CFF5 F108          	movff	tablat,??_Temp_Calc+4+0+1
  1473  000800  5107               	movf	(??_Temp_Calc+4+0)&0ffh,w
  1474  000802  0100               	movlb	0	; () banked
  1475  000804  5D69               	subwf	((105))&0ffh,w
  1476  000806  0101               	movlb	1	; () banked
  1477  000808  5108               	movf	(??_Temp_Calc+4+1)&0ffh,w
  1478  00080A  0100               	movlb	0	; () banked
  1479  00080C  596A               	subwfb	((105+1))&0ffh,w
  1480  00080E  B0D8               	btfsc	status,0
  1481  000810  EF0C  F004         	goto	u2411
  1482  000814  EF0E  F004         	goto	u2410
  1483  000818                     u2411:
  1484  000818  EF17  F004         	goto	l2918
  1485  00081C                     u2410:
  1486                           	line	159
  1487                           ;temp.c: 159: probe &= ~mask ;
  1488  00081C  0101               	movlb	1	; () banked
  1489  00081E  1D03               	comf	((Temp_Calc@mask))&0ffh,w
  1490                           
  1491  000820  6F05               	movwf	(??_Temp_Calc+2+0)&0ffh
  1492  000822  1D04               	comf	((Temp_Calc@mask+1))&0ffh,w
  1493  000824  6F06               	movwf	1+(??_Temp_Calc+2+0)&0ffh
  1494                           	
  1495  000826  5105               	movf	(??_Temp_Calc+2+0)&0ffh,w
  1496  000828  16F3               	andwf	(0+prodl),c
  1497  00082A  5106               	movf	(??_Temp_Calc+2+1)&0ffh,w
  1498  00082C  16F4               	andwf	(1+prodl),c
  1499                           
  1500                           	
  1501  00082E                     l2918:		; BSR set to: ?
  1502                           
  1503                           	line	161
  1504                           ;temp.c: 161: mask >>= 1 ;
  1505  00082E  0101               	movlb	1	; () banked
  1506  000830  90D8               	bcf	status,0
  1507  000832  3304               	rrcf	((Temp_Calc@mask+1))&0ffh
  1508  000834  3303               	rrcf	((Temp_Calc@mask))&0ffh
  1509                           	line	162
  1510                           ;temp.c: 162: probe |= mask ;
  1511  000836  5103               	movf	((Temp_Calc@mask))&0ffh,w
  1512  000838  12F3               	iorwf	(0+prodl),c
  1513  00083A  5104               	movf	((Temp_Calc@mask+1))&0ffh,w
  1514  00083C  12F4               	iorwf	(1+prodl),c
  1515                           
  1516                           	line	156
  1517  00083E  5104               	movf	((Temp_Calc@mask+1))&0ffh,w
  1518  000840  1103               	iorwf ((Temp_Calc@mask))&0ffh,w
  1519                           
  1520  000842  A4D8               	btfss	status,2
  1521  000844  EF26  F004         	goto	u2421
  1522  000848  EF28  F004         	goto	u2420
  1523  00084C                     u2421:
  1524  00084C  EFEF  F003         	goto	l2915
  1525  000850                     u2420:
  1526                           	
  1527  000850                     l2916:		; BSR set to: 1
  1528                           
  1529                           	line	165
  1530                           ;temp.c: 163: }
  1531                           ;temp.c: 165: Temperature = (unsigned short int)
                                 Scale( mV, RType[ probe], RType[ probe+1 ], prob
                                 e, (probe+1)) ;
  1532  000850  0E01               	movlw	01h
  1533  000852  24F3               	addwf	(0+prodl),c,w
  1534  000854  6F05               	movwf	(??_Temp_Calc+2+0)&0ffh
  1535  000856  0E00               	movlw	0
  1536  000858  20F4               	addwfc	(1+prodl),c,w
  1537  00085A  6F06               	movwf	(??_Temp_Calc+2+0+1)&0ffh
  1538  00085C  C105  F11F         	movff	??_Temp_Calc+2+0,0+(?_Scale+010h)
  1539  000860  C106  F120         	movff	??_Temp_Calc+2+1,1+(?_Scale+010h)
  1540  000864  6B21               	clrf	(2+(?_Scale+010h))&0ffh
  1541  000866  6B22               	clrf	(3+(?_Scale+010h))&0ffh
  1542                           
  1543  000868  CFF3 F11B          	movff	0+prodl,0+(?_Scale+0Ch)
  1544  00086C  CFF4 F11C          	movff	1+prodl,1+(?_Scale+0Ch)
  1545  000870  6B1D               	clrf	(2+(?_Scale+0Ch))&0ffh
  1546  000872  6B1E               	clrf	(3+(?_Scale+0Ch))&0ffh
  1547                           
  1548  000874  90D8               	bcf	status,0
  1549  000876  34F3               	rlcf	(0+prodl),c,w
  1550  000878  6F07               	movwf	(??_Temp_Calc+4+0)&0ffh
  1551  00087A  34F4               	rlcf	(1+prodl),c,w
  1552  00087C  6F08               	movwf	1+(??_Temp_Calc+4+0)&0ffh
  1553  00087E  0E02               	movlw	02h
  1554  000880  2707               	addwf	(??_Temp_Calc+4+0)&0ffh
  1555  000882  0E00               	movlw	0
  1556  000884  2308               	addwfc	(??_Temp_Calc+4+1)&0ffh
  1557  000886  0E64               	movlw	low((_RType))
  1558  000888  2507               	addwf	(??_Temp_Calc+4+0)&0ffh,w
  1559  00088A  6EF6               	movwf	tblptrl
  1560  00088C  0E77               	movlw	high((_RType))
  1561  00088E  2108               	addwfc	(??_Temp_Calc+4+1)&0ffh,w
  1562  000890  6EF7               	movwf	tblptrh
  1563  000892  0009               	tblrd	*+
  1564                           	
  1565  000894  CFF5 F109          	movff	tablat,??_Temp_Calc+6+0
  1566  000898  0009               	tblrd	*+
  1567                           	
  1568  00089A  CFF5 F10A          	movff	tablat,??_Temp_Calc+6+0+1
  1569  00089E  C109  F117         	movff	??_Temp_Calc+6+0,0+(?_Scale+08h)
  1570  0008A2  C10A  F118         	movff	??_Temp_Calc+6+1,1+(?_Scale+08h)
  1571  0008A6  6B19               	clrf	(2+(?_Scale+08h))&0ffh
  1572  0008A8  6B1A               	clrf	(3+(?_Scale+08h))&0ffh
  1573                           
  1574  0008AA  90D8               	bcf	status,0
  1575  0008AC  34F3               	rlcf	(0+prodl),c,w
  1576  0008AE  6F0B               	movwf	(??_Temp_Calc+8+0)&0ffh
  1577  0008B0  34F4               	rlcf	(1+prodl),c,w
  1578  0008B2  6F0C               	movwf	1+(??_Temp_Calc+8+0)&0ffh
  1579  0008B4  0E64               	movlw	low((_RType))
  1580  0008B6  250B               	addwf	(??_Temp_Calc+8+0)&0ffh,w
  1581  0008B8  6EF6               	movwf	tblptrl
  1582  0008BA  0E77               	movlw	high((_RType))
  1583  0008BC  210C               	addwfc	(??_Temp_Calc+8+1)&0ffh,w
  1584  0008BE  6EF7               	movwf	tblptrh
  1585  0008C0  0009               	tblrd	*+
  1586                           	
  1587  0008C2  CFF5 F10D          	movff	tablat,??_Temp_Calc+10+0
  1588  0008C6  0009               	tblrd	*+
  1589                           	
  1590  0008C8  CFF5 F10E          	movff	tablat,??_Temp_Calc+10+0+1
  1591  0008CC  C10D  F113         	movff	??_Temp_Calc+10+0,0+(?_Scale+04h)
  1592  0008D0  C10E  F114         	movff	??_Temp_Calc+10+1,1+(?_Scale+04h)
  1593  0008D4  6B15               	clrf	(2+(?_Scale+04h))&0ffh
  1594  0008D6  6B16               	clrf	(3+(?_Scale+04h))&0ffh
  1595                           
  1596  0008D8  0100               	movlb	0	; () banked
  1597  0008DA  0101               	movlb	1	; () banked
  1598  0008DC  C069 F10F          	movff	(105),(?_Scale)
  1599  0008E0  0100               	movlb	0	; () banked
  1600  0008E2  0101               	movlb	1	; () banked
  1601  0008E4  C06A F110          	movff	(105+1),(?_Scale+1)
  1602  0008E8  6B11               	clrf	((?_Scale+2))&0ffh
  1603  0008EA  6B12               	clrf	((?_Scale+3))&0ffh
  1604                           
  1605  0008EC  EC30  F006         	call	_Scale	;wreg free
  1606  0008F0  C10F  F064         	movff	0+?_Scale,(100)
  1607  0008F4  C110  F065         	movff	1+?_Scale,(100+1)
  1608                           	line	166
  1609                           ;temp.c: 166: Temperature += 740 ;
  1610  0008F8  0100               	movlb	0	; () banked
  1611  0008FA  0EE4               	movlw	low(02E4h)
  1612  0008FC  2764               	addwf	((100))&0ffh
  1613  0008FE  0E02               	movlw	high(02E4h)
  1614  000900  2365               	addwfc	((100+1))&0ffh
  1615                           	line	168
  1616                           ;temp.c: 168: }
  1617  000902                     l2914:
  1618                           			; BSR set to: 0
  1619                           
  1620  000902  0012               	return
  1621                           	opt stack 0
  1622                           GLOBAL __end_of_Temp_Calc
  1623  000904                     	__end_of_Temp_Calc:
  1624                           	FNSIZE	_Temp_Calc,12,0
  1625                           ; =============== function _Temp_Calc ends =====
                                 =======
  1626                           
  1627                           	signat	_Temp_Calc,88
  1628                           	global	_Uart2_Temp
  1629                           	global	??_Uart2_Temp
  1630                           	global	?_Uart2_Temp
  1631                           
  1632                           ; *************** function _Uart2_Temp *********
                                 ********
  1633                           ; Defined at:
  1634                           ;		line 53 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\uart2.c"
  1635                           ; Parameters:
  1636                           ;		data           size:   2offs:   0	type: unsig
                                 ned short 
  1637                           ; Auto variables:
  1638                           ;		None
  1639                           ; Return value:
  1640                           ;		type: void 
  1641                           ;		size: 0
  1642                           ; Registers used:
  1643                           ;		wreg, fsr2l, status,2, cstack
  1644                           ; Tracked objects:
  1645                           ;		On entry : F/1
  1646                           ;		On exit  : F/1
  1647                           ;		Unchanged: FFFFFFF0/0
  1648                           ; Data sizes:
  1649                           ;		Autos:    0
  1650                           ;		Params:   2
  1651                           ;		Temp:     0
  1652                           ;		Total:    2
  1653                           ; This function calls:
  1654                           ;		_Uart2_Write
  1655                           ; This function is called by:
  1656                           ;		_main
  1657                           ; This function uses a non-reentrant model
  1658                           ; 
  1659                                   psect   text6,class=CODE,space=0,reloc=2
  1660                           
  1661                           	opt pm
  1662                           	file	"C:\Users\deepesh\Desktop\Final codes\uart
                                 2.c"
  1663                           	line	53
  1664  000000                     	__size_of_Uart2_Temp	equ	__end_of_Uart2_Temp-_U
                                 art2_Temp
  1665                           ;uart2.c: 52: void Uart2_Temp( unsigned short in
                                 t data)
  1666                           ;uart2.c: 53: {
  1667                           	
  1668  0012BC                     _Uart2_Temp:		; BSR set to: 1
  1669                           
  1670                           	opt stack 29
  1671                           	line	54
  1672  0012BC  5103               	movf	((Uart2_Temp@data))&0ffh,w
  1673                           	
  1674  0012BE  EC3B  F009         	call	_Uart2_Write
  1675                           	line	55
  1676                           ;uart2.c: 55: Uart2_Write((data>>8)&0xFF);
  1677  0012C2  5104               	movf	((Uart2_Temp@data+1))&0ffh,w
  1678                           	
  1679  0012C4  EC3B  F009         	call	_Uart2_Write
  1680                           	line	56
  1681                           ;uart2.c: 56: }
  1682  0012C8                     l5381:
  1683                           			; BSR set to: 1
  1684                           
  1685  0012C8  0012               	return
  1686                           	opt stack 0
  1687                           GLOBAL __end_of_Uart2_Temp
  1688  0012CA                     	__end_of_Uart2_Temp:
  1689                           	FNSIZE	_Uart2_Temp,0,2
  1690                           ; =============== function _Uart2_Temp ends ====
                                 ========
  1691                           
  1692                           	signat	_Uart2_Temp,4216
  1693                           	global	_Clr_LCD
  1694                           	global	??_Clr_LCD
  1695                           	global	?_Clr_LCD
  1696                           
  1697                           ; *************** function _Clr_LCD ************
                                 *****
  1698                           ; Defined at:
  1699                           ;		line 105 in file "C:\Users\deepesh\Desktop\Fi
                                 nal codes\lcd.c"
  1700                           ; Parameters:
  1701                           ;		None
  1702                           ; Auto variables:
  1703                           ;		None
  1704                           ; Return value:
  1705                           ;		type: void 
  1706                           ;		size: 0
  1707                           ; Registers used:
  1708                           ;		wreg, status,2, status,0
  1709                           ; Tracked objects:
  1710                           ;		On entry : F/1
  1711                           ;		On exit  : F/1
  1712                           ;		Unchanged: FFFFFFFF/0
  1713                           ; Data sizes:
  1714                           ;		Autos:    0
  1715                           ;		Params:   0
  1716                           ;		Temp:     0
  1717                           ;		Total:    0
  1718                           ; This function calls:
  1719                           ;		Nothing
  1720                           ; This function is called by:
  1721                           ;		_main
  1722                           ; This function uses a non-reentrant model
  1723                           ; 
  1724                                   psect   text7,class=CODE,space=0,reloc=2
  1725                           
  1726                           	opt pm
  1727                           	file	"C:\Users\deepesh\Desktop\Final codes\lcd.
                                 c"
  1728                           	line	105
  1729  000000                     	__size_of_Clr_LCD	equ	__end_of_Clr_LCD-_Clr_LCD
  1730                           ;lcd.c: 104: void Clr_LCD(void)
  1731                           ;lcd.c: 105: {
  1732                           	
  1733  0012AC                     _Clr_LCD:		; BSR set to: 1
  1734                           
  1735                           	opt stack 29
  1736                           	line	108
  1737  0012AC  0E60               	movlw	(060h)&0ffh
  1738  0012AE  1666               	andwf	((c:3942)),c	;volatile
  1739                           	line	109
  1740                           ;lcd.c: 109: LCDDATA1 &= ~0XFF;
  1741  0012B0  6A67               	clrf	((c:3943)),c	;volatile
  1742                           	line	110
  1743                           ;lcd.c: 110: LCDDATA2 &= ~0XFF;
  1744  0012B2  6A68               	clrf	((c:3944)),c	;volatile
  1745                           	line	111
  1746                           ;lcd.c: 111: LCDDATA3 &= ~0XE1;
  1747  0012B4  0E1E               	movlw	(01Eh)&0ffh
  1748  0012B6  1669               	andwf	((c:3945)),c	;volatile
  1749                           	line	112
  1750                           ;lcd.c: 112: LCDDATA4 &= ~0X01;
  1751  0012B8  906A               	bcf	(0+(0/8)+(c:3946)),c,(0)&7	;volatile
  1752                           	line	114
  1753                           ;lcd.c: 114: }
  1754  0012BA                     l2431:
  1755                           			; BSR set to: 1
  1756                           
  1757  0012BA  0012               	return
  1758                           	opt stack 0
  1759                           GLOBAL __end_of_Clr_LCD
  1760  0012BC                     	__end_of_Clr_LCD:
  1761                           	FNSIZE	_Clr_LCD,0,0
  1762                           ; =============== function _Clr_LCD ends =======
                                 =====
  1763                           
  1764                           	signat	_Clr_LCD,88
  1765                           	global	_Write_IO
  1766                           	global	??_Write_IO
  1767                           	global	?_Write_IO
  1768                           
  1769                           ; *************** function _Write_IO ***********
                                 ******
  1770                           ; Defined at:
  1771                           ;		line 89 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\I2Cforegnd.c"
  1772                           ; Parameters:
  1773                           ;		addr           size:   1reg:   wre	type: unsi
                                 gned char 
  1774                           ;		data           size:   1offs:   0	type: unsig
                                 ned char 
  1775                           ; Auto variables:
  1776                           ;		None
  1777                           ; Return value:
  1778                           ;		type: void 
  1779                           ;		size: 0
  1780                           ; Registers used:
  1781                           ;		wreg, status,2
  1782                           ; Tracked objects:
  1783                           ;		On entry : F/1
  1784                           ;		On exit  : F/E
  1785                           ;		Unchanged: FFFFFFF0/0
  1786                           ; Data sizes:
  1787                           ;		Autos:    0
  1788                           ;		Params:   1
  1789                           ;		Temp:     0
  1790                           ;		Total:    1
  1791                           ; This function calls:
  1792                           ;		Nothing
  1793                           ; This function is called by:
  1794                           ;		_main
  1795                           ; This function uses a non-reentrant model
  1796                           ; 
  1797                                   psect   text8,class=CODE,space=0,reloc=2
  1798                           
  1799                           	opt pm
  1800                           	file	"C:\Users\deepesh\Desktop\Final codes\I2Cf
                                 oregnd.c"
  1801                           	line	89
  1802  000000                     	__size_of_Write_IO	equ	__end_of_Write_IO-_Write
                                 _IO
  1803                           ;I2Cforegnd.c: 88: void Write_IO ( unsigned char
                                  addr, unsigned char data)
  1804                           ;I2Cforegnd.c: 89: {
  1805                           	
  1806  00124E                     _Write_IO:		; BSR set to: 1
  1807                           
  1808                           	opt stack 29
  1809                           	line	91
  1810  00124E  EF29  F009         	goto	l3905
  1811                           	
  1812  001252                     l3905:		; BSR set to: 1
  1813                           
  1814                           	
  1815  001252  A2AC               	btfss	((c:4012)),c,1	;volatile
  1816  001254  EF2E  F009         	goto	u2431
  1817  001258  EF30  F009         	goto	u2430
  1818  00125C                     u2431:
  1819  00125C  EF29  F009         	goto	l3905
  1820  001260                     u2430:
  1821                           	
  1822  001260                     l3907:		; BSR set to: 1
  1823                           
  1824                           	line	92
  1825                           ;I2Cforegnd.c: 92: arr[0]=0x70;
  1826  001260  0E70               	movlw	low(070h)
  1827  001262  6E40               	movwf	((c:64)),c
  1828                           	line	93
  1829                           ;I2Cforegnd.c: 93: arr[1]=data;
  1830  001264  C103  F041         	movff	(Write_IO@data),0+((c:64)+01h)
  1831                           	line	95
  1832                           ;I2Cforegnd.c: 95: I2Ctxlen=1;
  1833  001268  0E01               	movlw	low(01h)
  1834  00126A  0100               	movlb	0	; () banked
  1835  00126C  6F6C               	movwf	((108))&0ffh
  1836                           	line	96
  1837                           ;I2Cforegnd.c: 96: I2Crxlen=0;
  1838  00126E  6B6B               	clrf	((107))&0ffh
  1839                           	line	97
  1840                           ;I2Cforegnd.c: 97: SSP2CON2bits.SEN=1;
  1841  001270  010E               	movlb	14	; () banked
  1842  001272  81FE               	bsf	((3838))&0ffh,0	;volatile
  1843                           	line	99
  1844                           ;I2Cforegnd.c: 99: }
  1845  001274                     l3904:
  1846                           			; BSR set to: 14
  1847                           
  1848  001274  0012               	return
  1849                           	opt stack 0
  1850                           GLOBAL __end_of_Write_IO
  1851  001276                     	__end_of_Write_IO:
  1852                           	FNSIZE	_Write_IO,0,1
  1853                           ; =============== function _Write_IO ends ======
                                 ======
  1854                           
  1855                           	signat	_Write_IO,8312
  1856                           	global	_Print_Num_LCD
  1857                           	global	??_Print_Num_LCD
  1858                           	global	?_Print_Num_LCD
  1859                           
  1860                           ; *************** function _Print_Num_LCD ******
                                 ***********
  1861                           ; Defined at:
  1862                           ;		line 117 in file "C:\Users\deepesh\Desktop\Fi
                                 nal codes\lcd.c"
  1863                           ; Parameters:
  1864                           ;		str            size:   1reg:   wre	type: PTR 
                                 char ; Largest target is 64
  1865                           ;		 -> PrintStr(64), 
  1866                           ; Auto variables:
  1867                           ;		i           	       	type: unsigned short 
  1868                           ; Return value:
  1869                           ;		type: void 
  1870                           ;		size: 0
  1871                           ; Registers used:
  1872                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, stat
                                 us,2, status,0, prodl, prodh, cstack
  1873                           ; Tracked objects:
  1874                           ;		On entry : F/1
  1875                           ;		On exit  : F/1
  1876                           ;		Unchanged: FFFFFFF0/0
  1877                           ; Data sizes:
  1878                           ;		Autos:    2
  1879                           ;		Params:   0
  1880                           ;		Temp:     0
  1881                           ;		Total:    2
  1882                           ; This function calls:
  1883                           ;		_Update_LCD
  1884                           ; This function is called by:
  1885                           ;		_main
  1886                           ; This function uses a non-reentrant model
  1887                           ; 
  1888                                   psect   text9,class=CODE,space=0,reloc=2
  1889                           
  1890                           	opt pm
  1891                           	file	"C:\Users\deepesh\Desktop\Final codes\lcd.
                                 c"
  1892                           	line	117
  1893  000000                     	__size_of_Print_Num_LCD	equ	__end_of_Print_Num_
                                 LCD-_Print_Num_LCD
  1894                           ;lcd.c: 116: void Print_Num_LCD(signed char *str
                                 )
  1895                           ;lcd.c: 117: {
  1896                           	
  1897  00113E                     _Print_Num_LCD:		; BSR set to: 1
  1898                           
  1899                           	opt stack 29
  1900                           ; Print_Num_LCD@str loaded to fsr2l
  1901                           	line	119
  1902  00113E  CFE8 FFD9          	movff	0+wreg,fsr2l
  1903  001142  6B03               	clrf	((Print_Num_LCD@i))&0ffh
  1904  001144  6B04               	clrf	((Print_Num_LCD@i+1))&0ffh
  1905  001146  EFB5  F008         	goto	l2436
  1906                           	line	120
  1907                           	
  1908  00114A                     l2433:		; BSR set to: 1
  1909                           
  1910                           	line	121
  1911                           ;lcd.c: 120: {
  1912                           ;lcd.c: 121: Update_LCD(i,str[i],0);
  1913  00114A  0E00               	movlw	low(0)
  1914  00114C  6F09               	movwf	(0+(?_Update_LCD+03h))&0ffh
  1915  00114E  50D9               	movf	(0+fsr2l),c,w
  1916  001150  2503               	addwf	((Print_Num_LCD@i))&0ffh,w
  1917  001152  6EE9               	movwf	fsr0l
  1918  001154  6AEA               	clrf	fsr0h
  1919  001156  50EF               	movf	indf0,w
  1920  001158  6F08               	movwf	(0+(?_Update_LCD+02h))&0ffh
  1921  00115A  C103  F106         	movff	(Print_Num_LCD@i),(?_Update_LCD)
  1922  00115E  C104  F107         	movff	(Print_Num_LCD@i+1),(?_Update_LCD+1)
  1923  001162  ECE6  F002         	call	_Update_LCD	;wreg free
  1924                           	line	119
  1925  001166  4B03               	infsnz	((Print_Num_LCD@i))&0ffh
  1926  001168  2B04               	incf	((Print_Num_LCD@i+1))&0ffh
  1927                           	
  1928  00116A                     l2436:		; BSR set to: 1
  1929                           
  1930  00116A  50D9               	movf	(0+fsr2l),c,w
  1931  00116C  2503               	addwf	((Print_Num_LCD@i))&0ffh,w
  1932  00116E  6EE9               	movwf	fsr0l
  1933  001170  6AEA               	clrf	fsr0h
  1934  001172  50EF               	movf	indf0,w
  1935  001174  A4D8               	btfss	status,2
  1936  001176  EFBF  F008         	goto	u2441
  1937  00117A  EFC1  F008         	goto	u2440
  1938  00117E                     u2441:
  1939  00117E  EFA5  F008         	goto	l2433
  1940  001182                     u2440:
  1941                           	
  1942  001182                     l2434:		; BSR set to: 1
  1943                           
  1944                           	line	124
  1945                           ;lcd.c: 122: }
  1946                           ;lcd.c: 124: }
  1947  001182                     l2432:
  1948                           			; BSR set to: 1
  1949                           
  1950  001182  0012               	return
  1951                           	opt stack 0
  1952                           GLOBAL __end_of_Print_Num_LCD
  1953  001184                     	__end_of_Print_Num_LCD:
  1954                           	FNSIZE	_Print_Num_LCD,2,0
  1955                           ; =============== function _Print_Num_LCD ends =
                                 ===========
  1956                           
  1957                           	signat	_Print_Num_LCD,4216
  1958                           	global	_LCD_Init
  1959                           	global	??_LCD_Init
  1960                           	global	?_LCD_Init
  1961                           
  1962                           ; *************** function _LCD_Init ***********
                                 ******
  1963                           ; Defined at:
  1964                           ;		line 8 in file "C:\Users\deepesh\Desktop\Fina
                                 l codes\lcd.c"
  1965                           ; Parameters:
  1966                           ;		None
  1967                           ; Auto variables:
  1968                           ;		None
  1969                           ; Return value:
  1970                           ;		type: void 
  1971                           ;		size: 0
  1972                           ; Registers used:
  1973                           ;		wreg, status,2, status,0
  1974                           ; Tracked objects:
  1975                           ;		On entry : F/1
  1976                           ;		On exit  : F/E
  1977                           ;		Unchanged: FFFFFFF0/0
  1978                           ; Data sizes:
  1979                           ;		Autos:    0
  1980                           ;		Params:   0
  1981                           ;		Temp:     0
  1982                           ;		Total:    0
  1983                           ; This function calls:
  1984                           ;		Nothing
  1985                           ; This function is called by:
  1986                           ;		_main
  1987                           ; This function uses a non-reentrant model
  1988                           ; 
  1989                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1990                           
  1991                           	opt pm
  1992                           	file	"C:\Users\deepesh\Desktop\Final codes\lcd.
                                 c"
  1993                           	line	8
  1994  000000                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_I
                                 nit
  1995                           ;lcd.c: 7: void LCD_Init( void )
  1996                           ;lcd.c: 8: {
  1997                           	
  1998  001210                     _LCD_Init:		; BSR set to: 1
  1999                           
  2000                           	opt stack 29
  2001                           	line	9
  2002  001210  010E               	movlb	14	; () banked
  2003  001212  8DF4               	bsf	((3828))&0ffh,6	;volatile
  2004                           	line	10
  2005                           ;lcd.c: 10: LCDCONbits.LMUX1 = 0;
  2006  001214  010E               	movlb	14	; () banked
  2007  001216  93F4               	bcf	((3828))&0ffh,1	;volatile
  2008                           	line	11
  2009                           ;lcd.c: 11: LCDCONbits.LMUX0 = 0;
  2010  001218  010E               	movlb	14	; () banked
  2011  00121A  91F4               	bcf	((3828))&0ffh,0	;volatile
  2012                           	line	12
  2013                           ;lcd.c: 12: LCDPSbits.BIASMD = 0;
  2014  00121C  010E               	movlb	14	; () banked
  2015  00121E  9DF5               	bcf	((3829))&0ffh,6	;volatile
  2016                           	line	13
  2017                           ;lcd.c: 13: LCDREF = 0X98;
  2018  001220  0E98               	movlw	low(098h)
  2019  001222  6FFD               	movwf	((3837))&0ffh	;volatile
  2020                           	line	14
  2021                           ;lcd.c: 14: LCDRL = 0XF0;
  2022  001224  0EF0               	movlw	low(0F0h)
  2023  001226  6FFC               	movwf	((3836))&0ffh	;volatile
  2024                           	line	15
  2025                           ;lcd.c: 15: LCDSE0 = 0X9F;
  2026  001228  0E9F               	movlw	low(09Fh)
  2027  00122A  6FF6               	movwf	((3830))&0ffh	;volatile
  2028                           	line	16
  2029                           ;lcd.c: 16: LCDSE1 = 0XFF;
  2030  00122C  69F7               	setf	((3831))&0ffh	;volatile
  2031                           	line	17
  2032                           ;lcd.c: 17: LCDSE2 = 0XFF;
  2033  00122E  69F8               	setf	((3832))&0ffh	;volatile
  2034                           	line	18
  2035                           ;lcd.c: 18: LCDSE3 = 0XE1;
  2036  001230  0EE1               	movlw	low(0E1h)
  2037  001232  6FF9               	movwf	((3833))&0ffh	;volatile
  2038                           	line	19
  2039                           ;lcd.c: 19: LCDSE4 = 0X01;
  2040  001234  0E01               	movlw	low(01h)
  2041  001236  6FFA               	movwf	((3834))&0ffh	;volatile
  2042                           	line	20
  2043                           ;lcd.c: 20: LCDCONbits.LCDEN = 1;
  2044  001238  010E               	movlb	14	; () banked
  2045  00123A  8FF4               	bsf	((3828))&0ffh,7	;volatile
  2046                           	line	22
  2047                           ;lcd.c: 22: LCDDATA0 &= ~0X9F;
  2048  00123C  0E60               	movlw	(060h)&0ffh
  2049  00123E  1666               	andwf	((c:3942)),c	;volatile
  2050                           	line	24
  2051                           ;lcd.c: 24: LCDDATA1 &= ~0XDF;
  2052  001240  0E20               	movlw	(020h)&0ffh
  2053  001242  1667               	andwf	((c:3943)),c	;volatile
  2054                           	line	26
  2055                           ;lcd.c: 26: LCDDATA2 &= ~0XFF;
  2056  001244  6A68               	clrf	((c:3944)),c	;volatile
  2057                           	line	28
  2058                           ;lcd.c: 28: LCDDATA3 &= ~0XE1;
  2059  001246  0E1E               	movlw	(01Eh)&0ffh
  2060  001248  1669               	andwf	((c:3945)),c	;volatile
  2061                           	line	30
  2062                           ;lcd.c: 30: LCDDATA4 &= ~0X01;
  2063  00124A  906A               	bcf	(0+(0/8)+(c:3946)),c,(0)&7	;volatile
  2064                           	line	32
  2065                           ;lcd.c: 32: }
  2066  00124C                     l2415:
  2067                           			; BSR set to: 14
  2068                           
  2069  00124C  0012               	return
  2070                           	opt stack 0
  2071                           GLOBAL __end_of_LCD_Init
  2072  00124E                     	__end_of_LCD_Init:
  2073                           	FNSIZE	_LCD_Init,0,0
  2074                           ; =============== function _LCD_Init ends ======
                                 ======
  2075                           
  2076                           	signat	_LCD_Init,88
  2077                           	global	_ADC_Init
  2078                           	global	??_ADC_Init
  2079                           	global	?_ADC_Init
  2080                           
  2081                           ; *************** function _ADC_Init ***********
                                 ******
  2082                           ; Defined at:
  2083                           ;		line 10 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\adc.c"
  2084                           ; Parameters:
  2085                           ;		None
  2086                           ; Auto variables:
  2087                           ;		val         	       	type: unsigned char 
  2088                           ;		val1        	       	type: unsigned char 
  2089                           ; Return value:
  2090                           ;		type: void 
  2091                           ;		size: 0
  2092                           ; Registers used:
  2093                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
  2094                           ; Tracked objects:
  2095                           ;		On entry : F/1
  2096                           ;		On exit  : F/1
  2097                           ;		Unchanged: FFFFFFF0/0
  2098                           ; Data sizes:
  2099                           ;		Autos:    2
  2100                           ;		Params:   0
  2101                           ;		Temp:     0
  2102                           ;		Total:    2
  2103                           ; This function calls:
  2104                           ;		_DelayMs
  2105                           ;		_SPI_Rx_Tx
  2106                           ;		_sprintf
  2107                           ;		_Print_UART
  2108                           ; This function is called by:
  2109                           ;		_main
  2110                           ; This function uses a non-reentrant model
  2111                           ; 
  2112                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  2113                           
  2114                           	opt pm
  2115                           	file	"C:\Users\deepesh\Desktop\Final codes\adc.
                                 c"
  2116                           	line	10
  2117  000000                     	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_I
                                 nit
  2118                           ;adc.c: 9: void ADC_Init(void)
  2119                           ;adc.c: 10: {
  2120                           	
  2121  000B70                     _ADC_Init:		; BSR set to: 1
  2122                           
  2123                           	opt stack 29
  2124                           	line	13
  2125  000B70  010F               	movlb	15	; () banked
  2126  000B72  6B25               	clrf	((3877))&0ffh	;volatile
  2127                           	line	15
  2128                           ;adc.c: 15: TRISAbits.TRISA0 = 0;
  2129  000B74  9092               	bcf	((c:3986)),c,0	;volatile
  2130                           	line	16
  2131                           ;adc.c: 16: TRISAbits.TRISA2 = 1;
  2132  000B76  8492               	bsf	((c:3986)),c,2	;volatile
  2133                           	line	17
  2134                           ;adc.c: 17: TRISAbits.TRISA3 = 0;
  2135  000B78  9692               	bcf	((c:3986)),c,3	;volatile
  2136                           	line	18
  2137                           ;adc.c: 18: TRISFbits.TRISF7 = 0;
  2138  000B7A  9E97               	bcf	((c:3991)),c,7	;volatile
  2139                           	line	20
  2140                           ;adc.c: 20: PORTGbits.RG3 = 0;
  2141  000B7C  9686               	bcf	((c:3974)),c,3	;volatile
  2142                           	line	21
  2143                           ;adc.c: 21: DelayMs(200);
  2144  000B7E  0EC8               	movlw	low(0C8h)
  2145  000B80  0101               	movlb	1	; () banked
  2146  000B82  6F05               	movwf	((?_DelayMs))&0ffh
  2147  000B84  0E00               	movlw	high(0C8h)
  2148  000B86  6F06               	movwf	((?_DelayMs+1))&0ffh
  2149  000B88  ECE5  F008         	call	_DelayMs	;wreg free
  2150                           	line	22
  2151                           ;adc.c: 22: PORTGbits.RG3 = 1;
  2152  000B8C  8686               	bsf	((c:3974)),c,3	;volatile
  2153                           	line	23
  2154                           ;adc.c: 23: DelayMs(200);
  2155  000B8E  0EC8               	movlw	low(0C8h)
  2156  000B90  0101               	movlb	1	; () banked
  2157  000B92  6F05               	movwf	((?_DelayMs))&0ffh
  2158  000B94  0E00               	movlw	high(0C8h)
  2159  000B96  6F06               	movwf	((?_DelayMs+1))&0ffh
  2160  000B98  ECE5  F008         	call	_DelayMs	;wreg free
  2161                           	line	24
  2162                           ;adc.c: 24: PORTFbits.RF7= 0;
  2163  000B9C  9E85               	bcf	((c:3973)),c,7	;volatile
  2164                           	line	26
  2165                           ;adc.c: 26: SPI_Rx_Tx(0x06);
  2166  000B9E  0E06               	movlw	(06h)&0ffh
  2167                           	
  2168  000BA0  EC44  F008         	call	_SPI_Rx_Tx
  2169                           	line	28
  2170                           ;adc.c: 28: PORTFbits.RF7= 1;
  2171  000BA4  8E85               	bsf	((c:3973)),c,7	;volatile
  2172                           	line	29
  2173                           ;adc.c: 29: PORTFbits.RF7= 0;
  2174  000BA6  9E85               	bcf	((c:3973)),c,7	;volatile
  2175                           	line	31
  2176                           ;adc.c: 31: SPI_Rx_Tx(0x42);
  2177  000BA8  0E42               	movlw	(042h)&0ffh
  2178                           	
  2179  000BAA  EC44  F008         	call	_SPI_Rx_Tx
  2180                           	line	32
  2181                           ;adc.c: 32: SPI_Rx_Tx(0x00);
  2182  000BAE  0E00               	movlw	(0)&0ffh
  2183                           	
  2184  000BB0  EC44  F008         	call	_SPI_Rx_Tx
  2185                           	line	33
  2186                           ;adc.c: 33: SPI_Rx_Tx(0x30);
  2187  000BB4  0E30               	movlw	(030h)&0ffh
  2188                           	
  2189  000BB6  EC44  F008         	call	_SPI_Rx_Tx
  2190                           	line	35
  2191                           ;adc.c: 35: PORTFbits.RF7= 1;
  2192  000BBA  8E85               	bsf	((c:3973)),c,7	;volatile
  2193                           	line	36
  2194                           ;adc.c: 36: PORTFbits.RF7= 0;
  2195  000BBC  9E85               	bcf	((c:3973)),c,7	;volatile
  2196                           	line	38
  2197                           ;adc.c: 38: SPI_Rx_Tx(0x22);
  2198  000BBE  0E22               	movlw	(022h)&0ffh
  2199                           	
  2200  000BC0  EC44  F008         	call	_SPI_Rx_Tx
  2201                           	line	39
  2202                           ;adc.c: 39: SPI_Rx_Tx(0x00);
  2203  000BC4  0E00               	movlw	(0)&0ffh
  2204                           	
  2205  000BC6  EC44  F008         	call	_SPI_Rx_Tx
  2206                           	line	40
  2207                           ;adc.c: 40: val = SPI_Rx_Tx(0xFF);
  2208  000BCA  0EFF               	movlw	(0FFh)&0ffh
  2209                           	
  2210  000BCC  EC44  F008         	call	_SPI_Rx_Tx
  2211  000BD0  0101               	movlb	1	; () banked
  2212  000BD2  6F03               	movwf	((ADC_Init@val))&0ffh
  2213                           	line	42
  2214                           ;adc.c: 42: PORTFbits.RF7= 1;
  2215  000BD4  8E85               	bsf	((c:3973)),c,7	;volatile
  2216                           	line	43
  2217                           ;adc.c: 43: PORTFbits.RF7= 0;
  2218  000BD6  9E85               	bcf	((c:3973)),c,7	;volatile
  2219                           	line	45
  2220                           ;adc.c: 45: sprintf( PrintStr, "\n%u",val ) ;
  2221  000BD8  0101               	movlb	1	; () banked
  2222  000BDA  C103  F111         	movff	(ADC_Init@val),0+(?_sprintf+02h)
  2223  000BDE  6B12               	clrf	(1+(?_sprintf+02h))&0ffh
  2224  000BE0  0EF6               	movlw	low(STR_15)
  2225  000BE2  6F0F               	movwf	((?_sprintf))&0ffh
  2226  000BE4  0E7F               	movlw	high(STR_15)
  2227  000BE6  6F10               	movwf	((?_sprintf+1))&0ffh
  2228  000BE8  0E00               	movlw	((c:0))&0ffh
  2229                           	
  2230  000BEA  EC82  F004         	call	_sprintf
  2231                           	line	46
  2232                           ;adc.c: 46: Print_UART( PrintStr );
  2233  000BEE  0E00               	movlw	((c:0))&0ffh
  2234                           	
  2235  000BF0  ECA8  F007         	call	_Print_UART
  2236                           	line	49
  2237                           ;adc.c: 49: SPI_Rx_Tx(0x43);
  2238  000BF4  0E43               	movlw	(043h)&0ffh
  2239                           	
  2240  000BF6  EC44  F008         	call	_SPI_Rx_Tx
  2241                           	line	50
  2242                           ;adc.c: 50: SPI_Rx_Tx(0x00);
  2243  000BFA  0E00               	movlw	(0)&0ffh
  2244                           	
  2245  000BFC  EC44  F008         	call	_SPI_Rx_Tx
  2246                           	line	51
  2247                           ;adc.c: 51: SPI_Rx_Tx(0x60);
  2248  000C00  0E60               	movlw	(060h)&0ffh
  2249                           	
  2250  000C02  EC44  F008         	call	_SPI_Rx_Tx
  2251                           	line	53
  2252                           ;adc.c: 53: PORTFbits.RF7= 1;
  2253  000C06  8E85               	bsf	((c:3973)),c,7	;volatile
  2254                           	line	54
  2255                           ;adc.c: 54: PORTFbits.RF7= 0;
  2256  000C08  9E85               	bcf	((c:3973)),c,7	;volatile
  2257                           	line	56
  2258                           ;adc.c: 56: SPI_Rx_Tx(0x23);
  2259  000C0A  0E23               	movlw	(023h)&0ffh
  2260                           	
  2261  000C0C  EC44  F008         	call	_SPI_Rx_Tx
  2262                           	line	57
  2263                           ;adc.c: 57: SPI_Rx_Tx(0x00);
  2264  000C10  0E00               	movlw	(0)&0ffh
  2265                           	
  2266  000C12  EC44  F008         	call	_SPI_Rx_Tx
  2267                           	line	58
  2268                           ;adc.c: 58: val1 = SPI_Rx_Tx(0xFF);
  2269  000C16  0EFF               	movlw	(0FFh)&0ffh
  2270                           	
  2271  000C18  EC44  F008         	call	_SPI_Rx_Tx
  2272  000C1C  0101               	movlb	1	; () banked
  2273  000C1E  6F04               	movwf	((ADC_Init@val1))&0ffh
  2274                           	line	60
  2275                           ;adc.c: 60: PORTFbits.RF7= 1;
  2276  000C20  8E85               	bsf	((c:3973)),c,7	;volatile
  2277                           	line	61
  2278                           ;adc.c: 61: PORTFbits.RF7= 0;
  2279  000C22  9E85               	bcf	((c:3973)),c,7	;volatile
  2280                           	line	63
  2281                           ;adc.c: 63: SPI_Rx_Tx(0x4A);
  2282  000C24  0E4A               	movlw	(04Ah)&0ffh
  2283                           	
  2284  000C26  EC44  F008         	call	_SPI_Rx_Tx
  2285                           	line	64
  2286                           ;adc.c: 64: SPI_Rx_Tx(0x00);
  2287  000C2A  0E00               	movlw	(0)&0ffh
  2288                           	
  2289  000C2C  EC44  F008         	call	_SPI_Rx_Tx
  2290                           	line	65
  2291                           ;adc.c: 65: SPI_Rx_Tx(0x08);
  2292  000C30  0E08               	movlw	(08h)&0ffh
  2293                           	
  2294  000C32  EC44  F008         	call	_SPI_Rx_Tx
  2295                           	line	66
  2296                           ;adc.c: 66: PORTFbits.RF7= 1;
  2297  000C36  8E85               	bsf	((c:3973)),c,7	;volatile
  2298                           	line	67
  2299                           ;adc.c: 67: PORTFbits.RF7= 0;
  2300  000C38  9E85               	bcf	((c:3973)),c,7	;volatile
  2301                           	line	69
  2302                           ;adc.c: 69: SPI_Rx_Tx(0x12);
  2303  000C3A  0E12               	movlw	(012h)&0ffh
  2304                           	
  2305  000C3C  EC44  F008         	call	_SPI_Rx_Tx
  2306                           	line	70
  2307                           ;adc.c: 70: PORTFbits.RF7= 1;
  2308  000C40  8E85               	bsf	((c:3973)),c,7	;volatile
  2309                           	line	71
  2310                           ;adc.c: 71: sprintf( PrintStr, "\n%u",val1 ) ;
  2311  000C42  0101               	movlb	1	; () banked
  2312  000C44  C104  F111         	movff	(ADC_Init@val1),0+(?_sprintf+02h)
  2313  000C48  6B12               	clrf	(1+(?_sprintf+02h))&0ffh
  2314  000C4A  0EF6               	movlw	low(STR_16)
  2315  000C4C  6F0F               	movwf	((?_sprintf))&0ffh
  2316  000C4E  0E7F               	movlw	high(STR_16)
  2317  000C50  6F10               	movwf	((?_sprintf+1))&0ffh
  2318  000C52  0E00               	movlw	((c:0))&0ffh
  2319                           	
  2320  000C54  EC82  F004         	call	_sprintf
  2321                           	line	72
  2322                           ;adc.c: 72: Print_UART( PrintStr );
  2323  000C58  0E00               	movlw	((c:0))&0ffh
  2324                           	
  2325  000C5A  ECA8  F007         	call	_Print_UART
  2326                           	line	75
  2327                           ;adc.c: 75: }
  2328  000C5E                     l1464:
  2329                           			; BSR set to: 1
  2330                           
  2331  000C5E  0012               	return
  2332                           	opt stack 0
  2333                           GLOBAL __end_of_ADC_Init
  2334  000C60                     	__end_of_ADC_Init:
  2335                           	FNSIZE	_ADC_Init,2,0
  2336                           ; =============== function _ADC_Init ends ======
                                 ======
  2337                           
  2338                           	signat	_ADC_Init,88
  2339                           	global	_UART_Init
  2340                           	global	??_UART_Init
  2341                           	global	?_UART_Init
  2342                           
  2343                           ; *************** function _UART_Init **********
                                 *******
  2344                           ; Defined at:
  2345                           ;		line 22 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\uart.c"
  2346                           ; Parameters:
  2347                           ;		baudrate       size:   4offs:   0	type: unsig
                                 ned long 
  2348                           ; Auto variables:
  2349                           ;		x           	       	type: unsigned long 
  2350                           ; Return value:
  2351                           ;		type: void 
  2352                           ;		size: 0
  2353                           ; Registers used:
  2354                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
  2355                           ; Tracked objects:
  2356                           ;		On entry : F/1
  2357                           ;		On exit  : F/1
  2358                           ;		Unchanged: FFFFFFF0/0
  2359                           ; Data sizes:
  2360                           ;		Autos:    4
  2361                           ;		Params:   4
  2362                           ;		Temp:     4
  2363                           ;		Total:   12
  2364                           ; This function calls:
  2365                           ;		___lldiv
  2366                           ;		_sprintf
  2367                           ;		_Print_UART
  2368                           ; This function is called by:
  2369                           ;		_main
  2370                           ; This function uses a non-reentrant model
  2371                           ; 
  2372                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  2373                           
  2374                           	opt pm
  2375                           	file	"C:\Users\deepesh\Desktop\Final codes\uart
                                 .c"
  2376                           	line	22
  2377  000000                     	__size_of_UART_Init	equ	__end_of_UART_Init-_UAR
                                 T_Init
  2378                           ;uart.c: 21: void UART_Init( unsigned long int b
                                 audrate)
  2379                           ;uart.c: 22: {
  2380                           	
  2381  000E4E                     _UART_Init:		; BSR set to: 1
  2382                           
  2383                           	opt stack 29
  2384                           	line	25
  2385  000E4E  0E00               	movlw	low(03D0900h)
  2386  000E50  6F07               	movwf	((UART_Init@x))&0ffh
  2387  000E52  0E09               	movlw	high(03D0900h)
  2388  000E54  6F08               	movwf	((UART_Init@x+1))&0ffh
  2389  000E56  0E3D               	movlw	low highword(03D0900h)
  2390  000E58  6F09               	movwf	((UART_Init@x+2))&0ffh
  2391  000E5A  0E00               	movlw	high highword(03D0900h)
  2392  000E5C  6F0A               	movwf	((UART_Init@x+3))&0ffh
  2393                           	line	26
  2394                           ;uart.c: 26: x/=16;
  2395  000E5E  0E04               	movlw	04h
  2396  000E60  6F0B               	movwf	(??_UART_Init+4+0)&0ffh
  2397  000E62                     u2455:
  2398  000E62  90D8               	bcf	status,0
  2399  000E64  330A               	rrcf	((UART_Init@x+3))&0ffh
  2400  000E66  3309               	rrcf	((UART_Init@x+2))&0ffh
  2401  000E68  3308               	rrcf	((UART_Init@x+1))&0ffh
  2402  000E6A  3307               	rrcf	((UART_Init@x))&0ffh
  2403  000E6C  2F0B               	decfsz	(??_UART_Init+4+0)&0ffh
  2404  000E6E  EF31  F007         	goto	u2455
  2405                           
  2406                           	line	27
  2407                           ;uart.c: 27: x/=baudrate;
  2408  000E72  C103  F113         	movff	(UART_Init@baudrate),0+(?___lldiv+04h)
  2409  000E76  C104  F114         	movff	(UART_Init@baudrate+1),1+(?___lldiv+04h)
  2410  000E7A  C105  F115         	movff	(UART_Init@baudrate+2),2+(?___lldiv+04h)
  2411  000E7E  C106  F116         	movff	(UART_Init@baudrate+3),3+(?___lldiv+04h)
  2412  000E82  C107  F10F         	movff	(UART_Init@x),(?___lldiv)
  2413  000E86  C108  F110         	movff	(UART_Init@x+1),(?___lldiv+1)
  2414  000E8A  C109  F111         	movff	(UART_Init@x+2),(?___lldiv+2)
  2415  000E8E  C10A  F112         	movff	(UART_Init@x+3),(?___lldiv+3)
  2416  000E92  ECD7  F006         	call	___lldiv	;wreg free
  2417  000E96  C10F  F107         	movff	0+?___lldiv,(UART_Init@x)
  2418  000E9A  C110  F108         	movff	1+?___lldiv,(UART_Init@x+1)
  2419  000E9E  C111  F109         	movff	2+?___lldiv,(UART_Init@x+2)
  2420  000EA2  C112  F10A         	movff	3+?___lldiv,(UART_Init@x+3)
  2421                           	line	28
  2422                           ;uart.c: 28: x-=1;
  2423  000EA6  0707               	decf	((UART_Init@x))&0ffh
  2424  000EA8  0E00               	movlw	0
  2425  000EAA  5B08               	subwfb	((UART_Init@x+1))&0ffh
  2426  000EAC  5B09               	subwfb	((UART_Init@x+2))&0ffh
  2427  000EAE  5B0A               	subwfb	((UART_Init@x+3))&0ffh
  2428                           	line	30
  2429                           ;uart.c: 30: BAUDCON1bits.BRG16=0;
  2430  000EB0  9665               	bcf	((c:3941)),c,3	;volatile
  2431                           	line	31
  2432                           ;uart.c: 31: SPBRG1=x;
  2433  000EB2  C107  FFAF         	movff	(UART_Init@x),(c:4015)	;volatile
  2434                           	line	32
  2435                           ;uart.c: 32: TRISCbits.TRISC6=0;
  2436  000EB6  9C94               	bcf	((c:3988)),c,6	;volatile
  2437                           	line	33
  2438                           ;uart.c: 33: TRISCbits.TRISC7=1;
  2439  000EB8  8E94               	bsf	((c:3988)),c,7	;volatile
  2440                           	line	34
  2441                           ;uart.c: 34: TXSTA1bits.SYNC=0;
  2442  000EBA  98AC               	bcf	((c:4012)),c,4	;volatile
  2443                           	line	35
  2444                           ;uart.c: 35: RCSTA1bits.SPEN=1;
  2445  000EBC  8EAB               	bsf	((c:4011)),c,7	;volatile
  2446                           	line	36
  2447                           ;uart.c: 36: TXSTA1bits.BRGH=1;
  2448  000EBE  84AC               	bsf	((c:4012)),c,2	;volatile
  2449                           	line	38
  2450                           ;uart.c: 38: TXSTA1bits.TXEN=1;
  2451  000EC0  8AAC               	bsf	((c:4012)),c,5	;volatile
  2452                           	line	39
  2453                           ;uart.c: 39: RCSTA1bits.CREN=1;
  2454  000EC2  88AB               	bsf	((c:4011)),c,4	;volatile
  2455                           	line	40
  2456                           ;uart.c: 40: sprintf( PrintStr, "UART INIT") ;
  2457  000EC4  0EAC               	movlw	low(STR_14)
  2458  000EC6  0101               	movlb	1	; () banked
  2459  000EC8  6F0F               	movwf	((?_sprintf))&0ffh
  2460  000ECA  0E7F               	movlw	high(STR_14)
  2461  000ECC  6F10               	movwf	((?_sprintf+1))&0ffh
  2462  000ECE  0E00               	movlw	((c:0))&0ffh
  2463                           	
  2464  000ED0  EC82  F004         	call	_sprintf
  2465                           	line	41
  2466                           ;uart.c: 41: Print_UART( PrintStr ) ;
  2467  000ED4  0E00               	movlw	((c:0))&0ffh
  2468                           	
  2469  000ED6  ECA8  F007         	call	_Print_UART
  2470                           	line	42
  2471                           ;uart.c: 42: }
  2472  000EDA                     l974:
  2473                           			; BSR set to: 1
  2474                           
  2475  000EDA  0012               	return
  2476                           	opt stack 0
  2477                           GLOBAL __end_of_UART_Init
  2478  000EDC                     	__end_of_UART_Init:
  2479                           	FNSIZE	_UART_Init,8,4
  2480                           ; =============== function _UART_Init ends =====
                                 =======
  2481                           
  2482                           	signat	_UART_Init,4216
  2483                           	global	_sprintf
  2484                           	global	??_sprintf
  2485                           	global	?_sprintf
  2486                           
  2487                           ; *************** function _sprintf ************
                                 *****
  2488                           ; Defined at:
  2489                           ;		line 492 in file "C:\Program Files (x86)\HI-T
                                 ECH Software\PICC-18\PRO\9.66\lib\doprnt.c"
  2490                           ; Parameters:
  2491                           ;		sp             size:   1reg:   wre	type: PTR 
                                 unsigned char ; Largest target is 64
  2492                           ;		 -> PrintStr(64), 
  2493                           ;		f              size:   2offs:   0	type: PTR c
                                 onst unsigned char ; Largest target is 16
  2494                           ;		 -> STR_21(12), STR_20(3), STR_19(16), STR_18
                                 (3), 
  2495                           ;		 -> STR_17(13), STR_16(4), STR_15(4), STR_14(
                                 10), 
  2496                           ;		 -> STR_13(4), STR_12(8), STR_11(3), STR_10(8
                                 ), 
  2497                           ;		 -> STR_9(8), STR_8(8), STR_7(8), STR_6(4), 
  2498                           ;		 -> STR_5(11), STR_4(4), STR_3(10), STR_2(10)
                                 , 
  2499                           ;		 -> STR_1(10), 
  2500                           ; Auto variables:
  2501                           ;		prec        	       	type: char 
  2502                           ;		c           	       	type: char 
  2503                           ;		ap          	       	type: PTR void [1]
  2504                           ;		_val        	       	type: struct .
  2505                           ; Return value:
  2506                           ;		type: int 
  2507                           ;		size: 2
  2508                           ; Registers used:
  2509                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
                                 tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
                                 l, prodh, cstack
  2510                           ; Tracked objects:
  2511                           ;		On entry : F/1
  2512                           ;		On exit  : F/1
  2513                           ;		Unchanged: FFFFFFF0/0
  2514                           ; Data sizes:
  2515                           ;		Autos:    9
  2516                           ;		Params:   4
  2517                           ;		Temp:     2
  2518                           ;		Total:   15
  2519                           ; This function calls:
  2520                           ;		___lwdiv
  2521                           ;		___lwmod
  2522                           ; This function is called by:
  2523                           ;		_main
  2524                           ;		_UART_Init
  2525                           ;		_ADC_Init
  2526                           ;		_UART2_Init
  2527                           ;		_CalcRoomT
  2528                           ; This function uses a non-reentrant model
  2529                           ; 
  2530                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  2531                           
  2532                           	opt pm
  2533                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\lib\doprnt.c"
  2534                           	line	492
  2535  000000                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2536                           ;doprnt.c: 354: const static unsigned int dpower
                                 s[] = {1, 10, 100, 1000, 10000,
  2537                           ;doprnt.c: 359: };
  2538                           ;doprnt.c: 455: int
  2539                           ;doprnt.c: 491: sprintf(char * sp, const char * 
                                 f, ...)
  2540                           ;doprnt.c: 492: {
  2541                           	
  2542  000904                     _sprintf:		; BSR set to: 1
  2543                           
  2544                           	opt stack 28
  2545                           ; sprintf@sp loaded to fsr1l
  2546                           	line	541
  2547  000904  CFE8 FFE1          	movff	0+wreg,fsr1l
  2548  000908  0E11               	movlw	low(?_sprintf+02h)
  2549  00090A  6F15               	movwf	((sprintf@ap))&0ffh
  2550  00090C  0E01               	movlw	high(?_sprintf+02h)
  2551  00090E  6F16               	movwf	((sprintf@ap+1))&0ffh
  2552                           	line	544
  2553                           ;doprnt.c: 544: while(c = *f++) {
  2554  000910  EF1D  F005         	goto	l5390
  2555                           	
  2556  000914                     l5391:		; BSR set to: 1
  2557                           
  2558                           	line	546
  2559                           ;doprnt.c: 546: if(c != '%')
  2560  000914  50F3               	movf	(0+prodl),c,w
  2561  000916  0A25               	xorlw	37
  2562                           
  2563  000918  B4D8               	btfsc	status,2
  2564  00091A  EF91  F004         	goto	u2461
  2565  00091E  EF93  F004         	goto	u2460
  2566  000922                     u2461:
  2567  000922  EF9B  F004         	goto	l5393
  2568  000926                     u2460:
  2569                           	line	549
  2570  000926  50E1               	movf	(0+fsr1l),c,w
  2571  000928  6EE9               	movwf	fsr0l
  2572  00092A  6AEA               	clrf	fsr0h
  2573  00092C  CFF3 FFEF          	movff	0+prodl,indf0
  2574                           
  2575                           ;doprnt.c: 548: {
  2576                           ;doprnt.c: 549: ((*sp++ = (c)));
  2577  000930  2AE1               	incf	(0+fsr1l),c
  2578                           	line	550
  2579                           ;doprnt.c: 550: continue;
  2580  000932  EF1D  F005         	goto	l5390
  2581                           	line	551
  2582                           	
  2583  000936                     l5393:		; BSR set to: 1
  2584                           
  2585                           	line	642
  2586                           ;doprnt.c: 551: }
  2587                           ;doprnt.c: 556: flag = 0;
  2588  000936  EFA3  F004         	goto	l5395
  2589                           	line	644
  2590                           ;doprnt.c: 644: case 0:
  2591                           	
  2592  00093A                     l5396:		; BSR set to: 1
  2593                           
  2594                           	line	645
  2595                           ;doprnt.c: 645: goto alldone;
  2596  00093A  EF2D  F005         	goto	l5397
  2597                           	line	809
  2598                           ;doprnt.c: 809: default:
  2599                           	
  2600  00093E                     l5398:		; BSR set to: 1
  2601                           
  2602                           	line	820
  2603                           ;doprnt.c: 820: continue;
  2604  00093E  EF1D  F005         	goto	l5390
  2605                           	line	824
  2606                           ;doprnt.c: 824: case 'u':
  2607                           	
  2608  000942                     l5399:		; BSR set to: 1
  2609                           
  2610                           	line	826
  2611                           ;doprnt.c: 825: flag |= 0xC0;
  2612  000942  EFB3  F004         	goto	l5394
  2613                           	line	642
  2614                           	
  2615  000946                     l5395:		; BSR set to: 1
  2616                           
  2617                           ; sprintf@c allocated to fsr2l
  2618  000946  C10F  FFF6         	movff	(sprintf@f),tblptrl
  2619  00094A  C110  FFF7         	movff	(sprintf@f+1),tblptrh
  2620  00094E  4B0F               	infsnz	((sprintf@f))&0ffh
  2621  000950  2B10               	incf	((sprintf@f+1))&0ffh
  2622  000952  0008               	tblrd	*
  2623                           	
  2624  000954  CFF5 FFD9          	movff	tablat,0+fsr2l
  2625  000958  50D9               	movf	(0+fsr2l),c,w
  2626  00095A  0A00               	xorlw	0 ^ 0
  2627  00095C  E0EE               	bz	l5396
  2628  00095E  0A75               	xorlw	117 ^ 0
  2629  000960  E0F0               	bz	l5399
  2630  000962  EF9F  F004         	goto	l5398
  2631                           
  2632                           	line	829
  2633                           	
  2634  000966                     l5394:		; BSR set to: 1
  2635                           
  2636                           	line	1280
  2637                           ;doprnt.c: 1267: {
  2638                           ;doprnt.c: 1280: _val._val = (*(unsigned *)__va_
                                 arg((*(unsigned **)ap)));
  2639  000966  C115  FFE9         	movff	(sprintf@ap),fsr0l
  2640  00096A  C116  FFEA         	movff	(sprintf@ap+1),fsr0h
  2641  00096E  0E02               	movlw	low(02h)
  2642  000970  2715               	addwf	((sprintf@ap))&0ffh
  2643  000972  0E00               	movlw	high(02h)
  2644  000974  2316               	addwfc	((sprintf@ap+1))&0ffh
  2645  000976  CFEE F117          	movff	postinc0,(sprintf@_val)
  2646  00097A  CFED F118          	movff	postdec0,(sprintf@_val+1)
  2647                           	line	1299
  2648                           ;doprnt.c: 1281: }
  2649                           ;doprnt.c: 1299: for(c = 1 ; c != sizeof dpowers
                                 /sizeof dpowers[0] ; c++)
  2650  00097E  0E01               	movlw	low(01h)
  2651  000980  6ED9               	movwf	(0+fsr2l),c
  2652  000982  EFC3  F004         	goto	l5400
  2653                           	line	1300
  2654                           	
  2655  000986                     l5400:		; BSR set to: 1
  2656                           
  2657                           ;doprnt.c: 1300: if(_val._val < dpowers[c])
  2658  000986  50D9               	movf	(0+fsr2l),c,w
  2659  000988  0D02               	mullw	02h
  2660  00098A  0E64               	movlw	low((_dpowers))
  2661  00098C  24F3               	addwf	(prodl),c,w
  2662  00098E  6EF6               	movwf	tblptrl
  2663  000990  6AF7               	clrf	tblptrh
  2664  000992  0E7F               	movlw	high((_dpowers))
  2665  000994  22F7               	addwfc	tblptrh
  2666  000996  0009               	tblrd	*+
  2667                           	
  2668  000998  CFF5 F11C          	movff	tablat,??_sprintf+9+0
  2669  00099C  0009               	tblrd	*+
  2670                           	
  2671  00099E  CFF5 F11D          	movff	tablat,??_sprintf+9+0+1
  2672  0009A2  511C               	movf	(??_sprintf+9+0)&0ffh,w
  2673  0009A4  5D17               	subwf	((sprintf@_val))&0ffh,w
  2674  0009A6  511D               	movf	(??_sprintf+9+1)&0ffh,w
  2675  0009A8  5918               	subwfb	((sprintf@_val+1))&0ffh,w
  2676  0009AA  B0D8               	btfsc	status,0
  2677  0009AC  EFDA  F004         	goto	u2481
  2678  0009B0  EFDC  F004         	goto	u2480
  2679  0009B4                     u2481:
  2680  0009B4  EFDE  F004         	goto	l5403
  2681  0009B8                     u2480:
  2682                           	line	1301
  2683                           ;doprnt.c: 1301: break;
  2684  0009B8  EFE8  F004         	goto	l5401
  2685                           	
  2686  0009BC                     l5403:		; BSR set to: 1
  2687                           
  2688                           	line	1299
  2689  0009BC  2AD9               	incf	(0+fsr2l),c
  2690  0009BE  50D9               	movf	(0+fsr2l),c,w
  2691  0009C0  0A05               	xorlw	5
  2692                           
  2693  0009C2  A4D8               	btfss	status,2
  2694  0009C4  EFE6  F004         	goto	u2491
  2695  0009C8  EFE8  F004         	goto	u2490
  2696  0009CC                     u2491:
  2697  0009CC  EFC3  F004         	goto	l5400
  2698  0009D0                     u2490:
  2699                           	
  2700  0009D0                     l5401:		; BSR set to: 1
  2701                           
  2702                           	line	1466
  2703                           ;doprnt.c: 1416: {
  2704                           ;doprnt.c: 1463: }
  2705                           ;doprnt.c: 1466: prec = c;
  2706  0009D0  CFD9 F113          	movff	0+fsr2l,(sprintf@prec)
  2707                           	line	1468
  2708                           ;doprnt.c: 1468: while(prec--) {
  2709  0009D4  EF13  F005         	goto	l5404
  2710                           	
  2711  0009D8                     l5405:		; BSR set to: 1
  2712                           
  2713                           	line	1483
  2714                           ;doprnt.c: 1472: {
  2715                           ;doprnt.c: 1483: c = (_val._val / dpowers[prec])
                                  % 10 + '0';
  2716  0009D8  5113               	movf	((sprintf@prec))&0ffh,w
  2717  0009DA  0D02               	mullw	02h
  2718  0009DC  0E64               	movlw	low((_dpowers))
  2719  0009DE  24F3               	addwf	(prodl),c,w
  2720  0009E0  6EF6               	movwf	tblptrl
  2721  0009E2  6AF7               	clrf	tblptrh
  2722  0009E4  0E7F               	movlw	high((_dpowers))
  2723  0009E6  22F7               	addwfc	tblptrh
  2724  0009E8  0009               	tblrd*+
  2725                           	
  2726  0009EA  CFF5 F120          	movff	tablat,0+(?___lwdiv+02h)
  2727  0009EE  000A               	tblrd*-
  2728                           	
  2729  0009F0  CFF5 F121          	movff	tablat,1+(?___lwdiv+02h)
  2730                           
  2731  0009F4  C117  F11E         	movff	(sprintf@_val),(?___lwdiv)
  2732  0009F8  C118  F11F         	movff	(sprintf@_val+1),(?___lwdiv+1)
  2733  0009FC  EC6E  F007         	call	___lwdiv	;wreg free
  2734  000A00  C11E  F11E         	movff	0+?___lwdiv,(?___lwmod)
  2735  000A04  C11F  F11F         	movff	1+?___lwdiv,(?___lwmod+1)
  2736  000A08  0E0A               	movlw	low(0Ah)
  2737  000A0A  6F20               	movwf	(0+(?___lwmod+02h))&0ffh
  2738  000A0C  0E00               	movlw	high(0Ah)
  2739  000A0E  6F21               	movwf	(1+(?___lwmod+02h))&0ffh
  2740  000A10  ECDD  F007         	call	___lwmod	;wreg free
  2741  000A14  511E               	movf	(0+?___lwmod)&0ffh,w
  2742  000A16  0F30               	addlw	low(030h)
  2743  000A18  6F14               	movwf	((sprintf@c))&0ffh
  2744                           	line	1515
  2745  000A1A  50E1               	movf	(0+fsr1l),c,w
  2746  000A1C  6EE9               	movwf	fsr0l
  2747  000A1E  6AEA               	clrf	fsr0h
  2748  000A20  C114  FFEF         	movff	(sprintf@c),indf0
  2749                           
  2750                           ;doprnt.c: 1514: }
  2751                           ;doprnt.c: 1515: ((*sp++ = (c)));
  2752  000A24  2AE1               	incf	(0+fsr1l),c
  2753                           	line	1516
  2754                           	
  2755  000A26                     l5404:		; BSR set to: 1
  2756                           
  2757                           	line	1468
  2758  000A26  0713               	decf	((sprintf@prec))&0ffh
  2759  000A28  0101               	movlb	1	; () banked
  2760  000A2A  2913               	incf	((sprintf@prec))&0ffh,w
  2761                           
  2762  000A2C  A4D8               	btfss	status,2
  2763  000A2E  EF1B  F005         	goto	u2501
  2764  000A32  EF1D  F005         	goto	u2500
  2765  000A36                     u2501:
  2766  000A36  EFEC  F004         	goto	l5405
  2767  000A3A                     u2500:
  2768                           	
  2769  000A3A                     l5406:		; BSR set to: 1
  2770                           
  2771                           	line	1524
  2772                           	
  2773  000A3A                     l5390:		; BSR set to: 1
  2774                           
  2775                           ; sprintf@c allocated to prodl
  2776                           	line	544
  2777  000A3A  C10F  FFF6         	movff	(sprintf@f),tblptrl
  2778  000A3E  C110  FFF7         	movff	(sprintf@f+1),tblptrh
  2779  000A42  4B0F               	infsnz	((sprintf@f))&0ffh
  2780  000A44  2B10               	incf	((sprintf@f+1))&0ffh
  2781  000A46  0008               	tblrd	*
  2782                           	
  2783  000A48  CFF5 FFF3          	movff	tablat,0+prodl
  2784  000A4C  66F3               	tstfsz	(0+prodl),c
  2785  000A4E  EF2B  F005         	goto	u2511
  2786  000A52  EF2D  F005         	goto	u2510
  2787  000A56                     u2511:
  2788  000A56  EF8A  F004         	goto	l5391
  2789  000A5A                     u2510:
  2790                           	
  2791  000A5A                     l5392:		; BSR set to: 1
  2792                           
  2793                           	line	1526
  2794                           ;doprnt.c: 1516: }
  2795                           ;doprnt.c: 1524: }
  2796                           ;doprnt.c: 1526: alldone:
  2797                           	
  2798  000A5A                     l5397:		; BSR set to: 1
  2799                           
  2800                           	line	1529
  2801                           ;doprnt.c: 1529: *sp = 0;
  2802  000A5A  50E1               	movf	(0+fsr1l),c,w
  2803  000A5C  6EE9               	movwf	fsr0l
  2804  000A5E  6AEA               	clrf	fsr0h
  2805  000A60  0E00               	movlw	low(0)
  2806  000A62  6EEF               	movwf	indf0
  2807                           	line	1531
  2808  000A64  EF34  F005         	goto	l5389
  2809                           	line	1532
  2810                           ;doprnt.c: 1532: }
  2811  000A68                     l5389:
  2812                           			; BSR set to: 1
  2813                           
  2814  000A68  0012               	return
  2815                           	opt stack 0
  2816                           GLOBAL __end_of_sprintf
  2817  000A6A                     	__end_of_sprintf:
  2818                           	FNSIZE	_sprintf,11,4
  2819                           ; =============== function _sprintf ends =======
                                 =====
  2820                           
  2821                           	signat	_sprintf,4698
  2822                           	global	_Scale
  2823                           	global	??_Scale
  2824                           	global	?_Scale
  2825                           
  2826                           ; *************** function _Scale **************
                                 ***
  2827                           ; Defined at:
  2828                           ;		line 141 in file "C:\Users\deepesh\Desktop\Fi
                                 nal codes\temp.c"
  2829                           ; Parameters:
  2830                           ;		Value          size:   4offs:   0	type: long 
  2831                           ;		Izero          size:   4offs:   4	type: long 
  2832                           ;		Ispan          size:   4offs:   8	type: long 
  2833                           ;		Ozero          size:   4offs:  12	type: long 
  2834                           ;		Ospan          size:   4offs:  16	type: long 
  2835                           ; Auto variables:
  2836                           ;		None
  2837                           ; Return value:
  2838                           ;		type: long 
  2839                           ;		size: 4
  2840                           ; Registers used:
  2841                           ;		wreg, fsr1l, fsr2l, status,2, status,0, cstac
                                 k
  2842                           ; Tracked objects:
  2843                           ;		On entry : F/1
  2844                           ;		On exit  : F/1
  2845                           ;		Unchanged: FFFFFFF0/0
  2846                           ; Data sizes:
  2847                           ;		Autos:    0
  2848                           ;		Params:  20
  2849                           ;		Temp:     0
  2850                           ;		Total:   20
  2851                           ; This function calls:
  2852                           ;		___lmul
  2853                           ;		___aldiv
  2854                           ; This function is called by:
  2855                           ;		_Temp_Calc
  2856                           ; This function uses a non-reentrant model
  2857                           ; 
  2858                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  2859                           
  2860                           	opt pm
  2861                           	file	"C:\Users\deepesh\Desktop\Final codes\temp
                                 .c"
  2862                           	line	141
  2863  000000                     	__size_of_Scale	equ	__end_of_Scale-_Scale
  2864                           ;temp.c: 13: const unsigned short int RType[ 102
                                 4] =
  2865                           ;temp.c: 14: { 7232, 7244, 7256, 7268, 7280, 729
                                 2, 7304, 7316, 7328, 7340,
  2866                           ;temp.c: 15: 7352, 7364, 7376, 7389, 7401, 7413,
                                  7425, 7437, 7449, 7461,
  2867                           ;temp.c: 16: 7473, 7485, 7498, 7510, 7522, 7534,
                                  7546, 7558, 7570, 7583,
  2868                           ;temp.c: 17: 7595, 7607, 7619, 7631, 7644, 7656,
                                  7668, 7680, 7692, 7705,
  2869                           ;temp.c: 18: 7717, 7729, 7741, 7753, 7766, 7778,
                                  7790, 7802, 7815, 7827,
  2870                           ;temp.c: 20: 7839, 7851, 7864, 7876, 7888, 7901,
                                  7913, 7925, 7938, 7950,
  2871                           ;temp.c: 21: 7962, 7974, 7987, 7999, 8011, 8024,
                                  8036, 8048, 8061, 8073,
  2872                           	
  2873  000C60                     _Scale:		; BSR set to: 1
  2874                           
  2875                           	opt stack 28
  2876                           	line	142
  2877  000C60  5116               	movf	((Scale@Izero+3))&0ffh,w
  2878  000C62  191A               	xorwf	((Scale@Ispan+3))&0ffh,w
  2879  000C64  E108               	bnz	u2525
  2880  000C66  5115               	movf	((Scale@Izero+2))&0ffh,w
  2881  000C68  1919               	xorwf	((Scale@Ispan+2))&0ffh,w
  2882  000C6A  E105               	bnz	u2525
  2883  000C6C  5114               	movf	((Scale@Izero+1))&0ffh,w
  2884  000C6E  1918               	xorwf	((Scale@Ispan+1))&0ffh,w
  2885  000C70  E102               	bnz	u2525
  2886  000C72  5113               	movf	((Scale@Izero))&0ffh,w
  2887  000C74  1917               	xorwf	((Scale@Ispan))&0ffh,w
  2888  000C76                     u2525:
  2889  000C76  A4D8               	btfss	status,2
  2890  000C78  EF40  F006         	goto	u2521
  2891  000C7C  EF42  F006         	goto	u2520
  2892  000C80                     u2521:
  2893  000C80  EF48  F006         	goto	l2913
  2894  000C84                     u2520:
  2895                           	line	143
  2896  000C84  6B0F               	clrf	((?_Scale))&0ffh
  2897  000C86  6B10               	clrf	((?_Scale+1))&0ffh
  2898  000C88  6B11               	clrf	((?_Scale+2))&0ffh
  2899  000C8A  6B12               	clrf	((?_Scale+3))&0ffh
  2900                           
  2901  000C8C  EF86  F006         	goto	l2912
  2902                           	
  2903  000C90                     l2913:		; BSR set to: 1
  2904                           
  2905                           	line	144
  2906  000C90  511B               	movf	((Scale@Ozero))&0ffh,w
  2907  000C92  5D1F               	subwf	((Scale@Ospan))&0ffh,w
  2908  000C94  6F27               	movwf	(0+(?___lmul+04h))&0ffh
  2909  000C96  511C               	movf	((Scale@Ozero+1))&0ffh,w
  2910  000C98  5920               	subwfb	((Scale@Ospan+1))&0ffh,w
  2911  000C9A  6F28               	movwf	1+(0+(?___lmul+04h))&0ffh
  2912                           	
  2913  000C9C  511D               	movf	((Scale@Ozero+2))&0ffh,w
  2914  000C9E  5921               	subwfb	((Scale@Ospan+2))&0ffh,w
  2915  000CA0  6F29               	movwf	2+(0+(?___lmul+04h))&0ffh
  2916                           	
  2917  000CA2  511E               	movf	((Scale@Ozero+3))&0ffh,w
  2918  000CA4  5922               	subwfb	((Scale@Ospan+3))&0ffh,w
  2919  000CA6  6F2A               	movwf	3+(0+(?___lmul+04h))&0ffh
  2920  000CA8  5113               	movf	((Scale@Izero))&0ffh,w
  2921  000CAA  5D0F               	subwf	((Scale@Value))&0ffh,w
  2922  000CAC  6F23               	movwf	((?___lmul))&0ffh
  2923  000CAE  5114               	movf	((Scale@Izero+1))&0ffh,w
  2924  000CB0  5910               	subwfb	((Scale@Value+1))&0ffh,w
  2925  000CB2  6F24               	movwf	1+((?___lmul))&0ffh
  2926                           	
  2927  000CB4  5115               	movf	((Scale@Izero+2))&0ffh,w
  2928  000CB6  5911               	subwfb	((Scale@Value+2))&0ffh,w
  2929  000CB8  6F25               	movwf	2+((?___lmul))&0ffh
  2930                           	
  2931  000CBA  5116               	movf	((Scale@Izero+3))&0ffh,w
  2932  000CBC  5912               	subwfb	((Scale@Value+3))&0ffh,w
  2933  000CBE  6F26               	movwf	3+((?___lmul))&0ffh
  2934  000CC0  EC11  F008         	call	___lmul	;wreg free
  2935  000CC4  C123  F123         	movff	0+?___lmul,(?___aldiv)
  2936  000CC8  C124  F124         	movff	1+?___lmul,(?___aldiv+1)
  2937  000CCC  C125  F125         	movff	2+?___lmul,(?___aldiv+2)
  2938  000CD0  C126  F126         	movff	3+?___lmul,(?___aldiv+3)
  2939  000CD4  5113               	movf	((Scale@Izero))&0ffh,w
  2940  000CD6  5D17               	subwf	((Scale@Ispan))&0ffh,w
  2941  000CD8  6F27               	movwf	(0+(?___aldiv+04h))&0ffh
  2942  000CDA  5114               	movf	((Scale@Izero+1))&0ffh,w
  2943  000CDC  5918               	subwfb	((Scale@Ispan+1))&0ffh,w
  2944  000CDE  6F28               	movwf	1+(0+(?___aldiv+04h))&0ffh
  2945                           	
  2946  000CE0  5115               	movf	((Scale@Izero+2))&0ffh,w
  2947  000CE2  5919               	subwfb	((Scale@Ispan+2))&0ffh,w
  2948  000CE4  6F29               	movwf	2+(0+(?___aldiv+04h))&0ffh
  2949                           	
  2950  000CE6  5116               	movf	((Scale@Izero+3))&0ffh,w
  2951  000CE8  591A               	subwfb	((Scale@Ispan+3))&0ffh,w
  2952  000CEA  6F2A               	movwf	3+(0+(?___aldiv+04h))&0ffh
  2953  000CEC  EC35  F005         	call	___aldiv	;wreg free
  2954  000CF0  511B               	movf	((Scale@Ozero))&0ffh,w
  2955  000CF2  2523               	addwf	(0+?___aldiv)&0ffh,w
  2956  000CF4  6F0F               	movwf	((?_Scale))&0ffh
  2957  000CF6  511C               	movf	((Scale@Ozero+1))&0ffh,w
  2958  000CF8  2124               	addwfc	(1+?___aldiv)&0ffh,w
  2959  000CFA  6F10               	movwf	1+((?_Scale))&0ffh
  2960                           	
  2961  000CFC  511D               	movf	((Scale@Ozero+2))&0ffh,w
  2962  000CFE  2125               	addwfc	(2+?___aldiv)&0ffh,w
  2963  000D00  6F11               	movwf	2+((?_Scale))&0ffh
  2964                           	
  2965  000D02  511E               	movf	((Scale@Ozero+3))&0ffh,w
  2966  000D04  2126               	addwfc	(3+?___aldiv)&0ffh,w
  2967  000D06  6F12               	movwf	3+((?_Scale))&0ffh
  2968  000D08  EF86  F006         	goto	l2912
  2969                           	line	145
  2970                           ;temp.c: 145: }
  2971  000D0C                     l2912:
  2972                           			; BSR set to: 1
  2973                           
  2974  000D0C  0012               	return
  2975                           	opt stack 0
  2976                           GLOBAL __end_of_Scale
  2977  000D0E                     	__end_of_Scale:
  2978                           	FNSIZE	_Scale,0,20
  2979                           ; =============== function _Scale ends =========
                                 ===
  2980                           
  2981                           	signat	_Scale,20604
  2982                           	global	_Uart2_Write
  2983                           	global	??_Uart2_Write
  2984                           	global	?_Uart2_Write
  2985                           
  2986                           ; *************** function _Uart2_Write ********
                                 *********
  2987                           ; Defined at:
  2988                           ;		line 47 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\uart2.c"
  2989                           ; Parameters:
  2990                           ;		data           size:   1reg:   wre	type: unsi
                                 gned char 
  2991                           ; Auto variables:
  2992                           ;		None
  2993                           ; Return value:
  2994                           ;		type: void 
  2995                           ;		size: 0
  2996                           ; Registers used:
  2997                           ;		wreg, fsr2l
  2998                           ; Tracked objects:
  2999                           ;		On entry : F/1
  3000                           ;		On exit  : F/1
  3001                           ;		Unchanged: FFFFFFFF/0
  3002                           ; Data sizes:
  3003                           ;		Autos:    0
  3004                           ;		Params:   0
  3005                           ;		Temp:     0
  3006                           ;		Total:    0
  3007                           ; This function calls:
  3008                           ;		Nothing
  3009                           ; This function is called by:
  3010                           ;		_Uart2_Temp
  3011                           ; This function uses a non-reentrant model
  3012                           ; 
  3013                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  3014                           
  3015                           	opt pm
  3016                           	file	"C:\Users\deepesh\Desktop\Final codes\uart
                                 2.c"
  3017                           	line	47
  3018  000000                     	__size_of_Uart2_Write	equ	__end_of_Uart2_Write-
                                 _Uart2_Write
  3019                           ;uart2.c: 46: void Uart2_Write(unsigned char dat
                                 a)
  3020                           ;uart2.c: 47: {
  3021                           	
  3022  001276                     _Uart2_Write:		; BSR set to: 1
  3023                           
  3024                           	opt stack 28
  3025                           ; Uart2_Write@data loaded to fsr2l
  3026                           	line	48
  3027  001276  CFE8 FFD9          	movff	0+wreg,fsr2l
  3028  00127A  EF3F  F009         	goto	l5378
  3029                           	
  3030  00127E                     l5378:		; BSR set to: 1
  3031                           
  3032                           	
  3033  00127E  A2AC               	btfss	((c:4012)),c,1	;volatile
  3034  001280  EF44  F009         	goto	u2531
  3035  001284  EF46  F009         	goto	u2530
  3036  001288                     u2531:
  3037  001288  EF3F  F009         	goto	l5378
  3038  00128C                     u2530:
  3039                           	
  3040  00128C                     l5380:		; BSR set to: 1
  3041                           
  3042                           	line	49
  3043                           ;uart2.c: 49: TXREG2 = data;
  3044  00128C  CFD9 FF1C          	movff	0+fsr2l,(3868)	;volatile
  3045                           	line	50
  3046                           ;uart2.c: 50: }
  3047  001290                     l5377:
  3048                           			; BSR set to: 1
  3049                           
  3050  001290  0012               	return
  3051                           	opt stack 0
  3052                           GLOBAL __end_of_Uart2_Write
  3053  001292                     	__end_of_Uart2_Write:
  3054                           	FNSIZE	_Uart2_Write,0,0
  3055                           ; =============== function _Uart2_Write ends ===
                                 =========
  3056                           
  3057                           	signat	_Uart2_Write,4216
  3058                           	global	___lldiv
  3059                           	global	??___lldiv
  3060                           	global	?___lldiv
  3061                           
  3062                           ; *************** function ___lldiv ************
                                 *****
  3063                           ; Defined at:
  3064                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
                                 H Software\PICC-18\PRO\9.66\sources\lldiv.c"
  3065                           ; Parameters:
  3066                           ;		dividend       size:   4offs:   0	type: unsig
                                 ned long 
  3067                           ;		divisor        size:   4offs:   4	type: unsig
                                 ned long 
  3068                           ; Auto variables:
  3069                           ;		counter     	       	type: unsigned char 
  3070                           ;		quotient    	       	type: unsigned long 
  3071                           ; Return value:
  3072                           ;		type: unsigned long 
  3073                           ;		size: 4
  3074                           ; Registers used:
  3075                           ;		wreg, fsr2l, status,2, status,0
  3076                           ; Tracked objects:
  3077                           ;		On entry : F/1
  3078                           ;		On exit  : F/1
  3079                           ;		Unchanged: FFFFFFF0/0
  3080                           ; Data sizes:
  3081                           ;		Autos:    4
  3082                           ;		Params:   8
  3083                           ;		Temp:     0
  3084                           ;		Total:   12
  3085                           ; This function calls:
  3086                           ;		Nothing
  3087                           ; This function is called by:
  3088                           ;		_UART_Init
  3089                           ;		_UART2_Init
  3090                           ; This function uses a non-reentrant model
  3091                           ; 
  3092                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  3093                           
  3094                           	opt pm
  3095                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\sources\lldiv.c"
  3096                           	line	5
  3097  000000                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3098                           	
  3099  000DAE                     ___lldiv:		; BSR set to: 1
  3100                           
  3101                           	opt stack 28
  3102                           	line	9
  3103  000DAE  6B17               	clrf	((___lldiv@quotient))&0ffh
  3104  000DB0  6B18               	clrf	((___lldiv@quotient+1))&0ffh
  3105  000DB2  6B19               	clrf	((___lldiv@quotient+2))&0ffh
  3106  000DB4  6B1A               	clrf	((___lldiv@quotient+3))&0ffh
  3107                           
  3108                           	line	10
  3109  000DB6  5116               	movf	((___lldiv@divisor+3))&0ffh,w
  3110  000DB8  1113               	iorwf ((___lldiv@divisor))&0ffh,w
  3111  000DBA  1114               	iorwf ((___lldiv@divisor+1))&0ffh,w
  3112  000DBC  1115               	iorwf ((___lldiv@divisor+2))&0ffh,w
  3113                           
  3114  000DBE  B4D8               	btfsc	status,2
  3115  000DC0  EFE4  F006         	goto	u2541
  3116  000DC4  EFE6  F006         	goto	u2540
  3117  000DC8                     u2541:
  3118  000DC8  EF1C  F007         	goto	l5687
  3119  000DCC                     u2540:
  3120                           	line	11
  3121  000DCC  0E01               	movlw	low(01h)
  3122  000DCE  6ED9               	movwf	(0+fsr2l),c
  3123                           	line	12
  3124  000DD0  EFF0  F006         	goto	l5688
  3125                           	
  3126  000DD4                     l5689:		; BSR set to: 1
  3127                           
  3128                           	line	13
  3129  000DD4  90D8               	bcf	status,0
  3130  000DD6  3713               	rlcf	((___lldiv@divisor))&0ffh
  3131  000DD8  3714               	rlcf	((___lldiv@divisor+1))&0ffh
  3132  000DDA  3715               	rlcf	((___lldiv@divisor+2))&0ffh
  3133  000DDC  3716               	rlcf	((___lldiv@divisor+3))&0ffh
  3134                           	line	14
  3135  000DDE  2AD9               	incf	(0+fsr2l),c
  3136                           	line	15
  3137                           	
  3138  000DE0                     l5688:		; BSR set to: 1
  3139                           
  3140                           	line	12
  3141                           	
  3142  000DE0  AF16               	btfss	((___lldiv@divisor+3))&0ffh,(31)&7
  3143  000DE2  EFF5  F006         	goto	u2551
  3144  000DE6  EFF7  F006         	goto	u2550
  3145  000DEA                     u2551:
  3146  000DEA  EFEA  F006         	goto	l5689
  3147  000DEE                     u2550:
  3148                           	
  3149  000DEE                     l5690:		; BSR set to: 1
  3150                           
  3151                           	line	16
  3152                           	
  3153  000DEE                     l5693:		; BSR set to: 1
  3154                           
  3155                           	line	17
  3156  000DEE  90D8               	bcf	status,0
  3157  000DF0  3717               	rlcf	((___lldiv@quotient))&0ffh
  3158  000DF2  3718               	rlcf	((___lldiv@quotient+1))&0ffh
  3159  000DF4  3719               	rlcf	((___lldiv@quotient+2))&0ffh
  3160  000DF6  371A               	rlcf	((___lldiv@quotient+3))&0ffh
  3161                           	line	18
  3162  000DF8  5113               	movf	((___lldiv@divisor))&0ffh,w
  3163  000DFA  5D0F               	subwf	((___lldiv@dividend))&0ffh,w
  3164  000DFC  5114               	movf	((___lldiv@divisor+1))&0ffh,w
  3165  000DFE  5910               	subwfb	((___lldiv@dividend+1))&0ffh,w
  3166  000E00  5115               	movf	((___lldiv@divisor+2))&0ffh,w
  3167  000E02  5911               	subwfb	((___lldiv@dividend+2))&0ffh,w
  3168  000E04  5116               	movf	((___lldiv@divisor+3))&0ffh,w
  3169  000E06  5912               	subwfb	((___lldiv@dividend+3))&0ffh,w
  3170  000E08  A0D8               	btfss	status,0
  3171  000E0A  EF09  F007         	goto	u2561
  3172  000E0E  EF0B  F007         	goto	u2560
  3173  000E12                     u2561:
  3174  000E12  EF14  F007         	goto	l5694
  3175  000E16                     u2560:
  3176                           	line	19
  3177  000E16  5113               	movf	((___lldiv@divisor))&0ffh,w
  3178  000E18  5F0F               	subwf	((___lldiv@dividend))&0ffh
  3179  000E1A  5114               	movf	((___lldiv@divisor+1))&0ffh,w
  3180  000E1C  5B10               	subwfb	((___lldiv@dividend+1))&0ffh
  3181  000E1E  5115               	movf	((___lldiv@divisor+2))&0ffh,w
  3182  000E20  5B11               	subwfb	((___lldiv@dividend+2))&0ffh
  3183  000E22  5116               	movf	((___lldiv@divisor+3))&0ffh,w
  3184  000E24  5B12               	subwfb	((___lldiv@dividend+3))&0ffh
  3185                           	line	20
  3186  000E26  8117               	bsf	(0+(0/8)+(___lldiv@quotient))&0ffh,(0)&7
  3187                           	line	21
  3188                           	
  3189  000E28                     l5694:		; BSR set to: 1
  3190                           
  3191                           	line	22
  3192  000E28  90D8               	bcf	status,0
  3193  000E2A  3316               	rrcf	((___lldiv@divisor+3))&0ffh
  3194  000E2C  3315               	rrcf	((___lldiv@divisor+2))&0ffh
  3195  000E2E  3314               	rrcf	((___lldiv@divisor+1))&0ffh
  3196  000E30  3313               	rrcf	((___lldiv@divisor))&0ffh
  3197                           	line	23
  3198  000E32  2ED9               	decfsz	(0+fsr2l),c
  3199                           	
  3200  000E34  EFF7  F006         	goto	l5693
  3201                           	
  3202  000E38                     l5692:		; BSR set to: 1
  3203                           
  3204                           	line	24
  3205                           	
  3206  000E38                     l5687:		; BSR set to: 1
  3207                           
  3208                           	line	25
  3209  000E38  C117  F10F         	movff	(___lldiv@quotient),(?___lldiv)
  3210  000E3C  C118  F110         	movff	(___lldiv@quotient+1),(?___lldiv+1)
  3211  000E40  C119  F111         	movff	(___lldiv@quotient+2),(?___lldiv+2)
  3212  000E44  C11A  F112         	movff	(___lldiv@quotient+3),(?___lldiv+3)
  3213  000E48  EF26  F007         	goto	l5686
  3214                           	line	26
  3215  000E4C                     l5686:
  3216                           			; BSR set to: 1
  3217                           
  3218  000E4C  0012               	return
  3219                           	opt stack 0
  3220                           GLOBAL __end_of___lldiv
  3221  000E4E                     	__end_of___lldiv:
  3222                           	FNSIZE	___lldiv,4,8
  3223                           ; =============== function ___lldiv ends =======
                                 =====
  3224                           
  3225                           	signat	___lldiv,8316
  3226                           	global	_Update_LCD
  3227                           	global	??_Update_LCD
  3228                           	global	?_Update_LCD
  3229                           
  3230                           ; *************** function _Update_LCD *********
                                 ********
  3231                           ; Defined at:
  3232                           ;		line 35 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\lcd.c"
  3233                           ; Parameters:
  3234                           ;		digit          size:   2offs:   0	type: unsig
                                 ned short 
  3235                           ;		x              size:   1offs:   2	type: unsig
                                 ned char 
  3236                           ;		dp             size:   1offs:   3	type: unsig
                                 ned char 
  3237                           ; Auto variables:
  3238                           ;		Seg_code    	       	type: unsigned short [51
                                 ]
  3239                           ; Return value:
  3240                           ;		type: void 
  3241                           ;		size: 0
  3242                           ; Registers used:
  3243                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, s
                                 tatus,0, prodl, prodh
  3244                           ; Tracked objects:
  3245                           ;		On entry : F/1
  3246                           ;		On exit  : F/1
  3247                           ;		Unchanged: FFFFFFF0/0
  3248                           ; Data sizes:
  3249                           ;		Autos:  102
  3250                           ;		Params:   4
  3251                           ;		Temp:     3
  3252                           ;		Total:  109
  3253                           ; This function calls:
  3254                           ;		Nothing
  3255                           ; This function is called by:
  3256                           ;		_Print_Num_LCD
  3257                           ;		_Print_Str_LCD
  3258                           ; This function uses a non-reentrant model
  3259                           ; 
  3260                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  3261                           
  3262                           	opt pm
  3263                           	file	"C:\Users\deepesh\Desktop\Final codes\lcd.
                                 c"
  3264                           	line	35
  3265  000000                     	__size_of_Update_LCD	equ	__end_of_Update_LCD-_U
                                 pdate_LCD
  3266                           ;lcd.c: 34: void Update_LCD( unsigned short int 
                                 digit, unsigned char x, unsigned char dp )
  3267                           ;lcd.c: 35: {
  3268                           	
  3269  0005CC                     _Update_LCD:		; BSR set to: 1
  3270                           
  3271                           	opt stack 28
  3272                           	line	43
  3273  0005CC  EE00 F070          	lfsr	0,(112)
  3274  0005D0  EE11  F00A         	lfsr	1,(Update_LCD@Seg_code)
  3275  0005D4  0E66               	movlw	102
  3276  0005D6                     u2571:
  3277  0005D6  CFEE FFE6          	movff	postinc0,postinc1
  3278  0005DA  2EE8               	decfsz	wreg
  3279  0005DC  EFEB  F002         	goto	u2571
  3280                           	line	46
  3281                           ;lcd.c: 46: switch(digit)
  3282  0005E0  EF9B  F003         	goto	l2418
  3283                           	line	48
  3284                           ;lcd.c: 47: {
  3285                           ;lcd.c: 48: case 0:
  3286                           	
  3287  0005E4                     l2419:		; BSR set to: 1
  3288                           
  3289                           	line	50
  3290                           ;lcd.c: 50: if( x == '1' )
  3291  0005E4  5108               	movf	((Update_LCD@x))&0ffh,w
  3292  0005E6  0A31               	xorlw	49
  3293                           
  3294  0005E8  A4D8               	btfss	status,2
  3295  0005EA  EFF9  F002         	goto	u2581
  3296  0005EE  EFFB  F002         	goto	u2580
  3297  0005F2                     u2581:
  3298  0005F2  EFFE  F002         	goto	l2420
  3299  0005F6                     u2580:
  3300                           	line	51
  3301                           ;lcd.c: 51: LCDDATA1 |= 0x40 ;
  3302  0005F6  8C67               	bsf	(0+(6/8)+(c:3943)),c,(6)&7	;volatile
  3303  0005F8  EFFF  F002         	goto	l2421
  3304                           	line	52
  3305                           	
  3306  0005FC                     l2420:		; BSR set to: 1
  3307                           
  3308                           	line	53
  3309                           ;lcd.c: 52: else
  3310                           ;lcd.c: 53: LCDDATA1 &= ~0x40 ;
  3311  0005FC  9C67               	bcf	(0+(6/8)+(c:3943)),c,(6)&7	;volatile
  3312                           	
  3313  0005FE                     l2421:		; BSR set to: 1
  3314                           
  3315                           	line	55
  3316                           ;lcd.c: 55: if( dp )
  3317  0005FE  5109               	movf	((Update_LCD@dp))&0ffh,w
  3318  000600  B4D8               	btfsc	status,2
  3319  000602  EF05  F003         	goto	u2591
  3320  000606  EF07  F003         	goto	u2590
  3321  00060A                     u2591:
  3322  00060A  EF0A  F003         	goto	l2422
  3323  00060E                     u2590:
  3324                           	line	56
  3325                           ;lcd.c: 56: LCDDATA1 |= 0x80 ;
  3326  00060E  8E67               	bsf	(0+(7/8)+(c:3943)),c,(7)&7	;volatile
  3327  000610  EF0B  F003         	goto	l2424
  3328                           	line	57
  3329                           	
  3330  000614                     l2422:		; BSR set to: 1
  3331                           
  3332                           	line	58
  3333                           ;lcd.c: 57: else
  3334                           ;lcd.c: 58: LCDDATA1 &= ~0x80 ;
  3335  000614  9E67               	bcf	(0+(7/8)+(c:3943)),c,(7)&7	;volatile
  3336                           	
  3337  000616                     l2423:		; BSR set to: 1
  3338                           
  3339                           	line	60
  3340                           ;lcd.c: 60: case 1:
  3341                           	
  3342  000616                     l2424:		; BSR set to: 1
  3343                           
  3344                           	line	62
  3345                           ;lcd.c: 62: LCDDATA2 = 0X00;
  3346  000616  6A68               	clrf	((c:3944)),c	;volatile
  3347                           	line	63
  3348                           ;lcd.c: 63: LCDDATA2 = Seg_code[x - '0'];
  3349  000618  5108               	movf	((Update_LCD@x))&0ffh,w
  3350  00061A  0D02               	mullw	02h
  3351  00061C  CFF3 F170          	movff	prodl,??_Update_LCD+102+0
  3352  000620  0EA0               	movlw	-96
  3353  000622  2770               	addwf	(??_Update_LCD+102+0)&0ffh
  3354  000624  0E0A               	movlw	low(Update_LCD@Seg_code)
  3355  000626  2570               	addwf	(??_Update_LCD+102+0)&0ffh,w
  3356  000628  6EE9               	movwf	c:fsr0l
  3357  00062A  6AEA               	clrf	1+c:fsr0l
  3358  00062C  0E01               	movlw	high(Update_LCD@Seg_code)
  3359  00062E  22EA               	addwfc	1+c:fsr0l
  3360  000630  50EF               	movf	indf0,w
  3361  000632  6E68               	movwf	((c:3944)),c	;volatile
  3362                           	line	64
  3363                           ;lcd.c: 64: if( dp )
  3364  000634  5109               	movf	((Update_LCD@dp))&0ffh,w
  3365  000636  B4D8               	btfsc	status,2
  3366  000638  EF20  F003         	goto	u2601
  3367  00063C  EF22  F003         	goto	u2600
  3368  000640                     u2601:
  3369  000640  EF25  F003         	goto	l2425
  3370  000644                     u2600:
  3371                           	line	65
  3372                           ;lcd.c: 65: LCDDATA2 |= 0x80 ;
  3373  000644  8E68               	bsf	(0+(7/8)+(c:3944)),c,(7)&7	;volatile
  3374  000646  EF26  F003         	goto	l2427
  3375                           	line	66
  3376                           	
  3377  00064A                     l2425:		; BSR set to: 1
  3378                           
  3379                           	line	67
  3380                           ;lcd.c: 66: else
  3381                           ;lcd.c: 67: LCDDATA2 &= ~0x80 ;
  3382  00064A  9E68               	bcf	(0+(7/8)+(c:3944)),c,(7)&7	;volatile
  3383                           	
  3384  00064C                     l2426:		; BSR set to: 1
  3385                           
  3386                           	line	69
  3387                           ;lcd.c: 69: case 2:
  3388                           	
  3389  00064C                     l2427:		; BSR set to: 1
  3390                           
  3391                           	line	73
  3392                           ;lcd.c: 73: LCDDATA0 &= 0xF0 ;
  3393  00064C  0EF0               	movlw	(0F0h)&0ffh
  3394  00064E  1666               	andwf	((c:3942)),c	;volatile
  3395                           	line	74
  3396                           ;lcd.c: 74: LCDDATA3 &= 0x1F ;
  3397  000650  0E1F               	movlw	(01Fh)&0ffh
  3398  000652  1669               	andwf	((c:3945)),c	;volatile
  3399                           	line	78
  3400                           ;lcd.c: 78: if( dp )
  3401  000654  5109               	movf	((Update_LCD@dp))&0ffh,w
  3402  000656  B4D8               	btfsc	status,2
  3403  000658  EF30  F003         	goto	u2611
  3404  00065C  EF32  F003         	goto	u2610
  3405  000660                     u2611:
  3406  000660  EF35  F003         	goto	l2428
  3407  000664                     u2610:
  3408                           	line	79
  3409                           ;lcd.c: 79: LCDDATA4 |= 0x01 ;
  3410  000664  806A               	bsf	(0+(0/8)+(c:3946)),c,(0)&7	;volatile
  3411  000666  EF57  F003         	goto	l2430
  3412                           	line	80
  3413                           	
  3414  00066A                     l2428:		; BSR set to: 1
  3415                           
  3416                           	line	82
  3417                           ;lcd.c: 80: else
  3418                           ;lcd.c: 81: {
  3419                           ;lcd.c: 82: LCDDATA4 &= ~0x01 ;
  3420  00066A  906A               	bcf	(0+(0/8)+(c:3946)),c,(0)&7	;volatile
  3421                           	line	84
  3422                           ;lcd.c: 84: LCDDATA0 |= Seg_code[x-'0'] & 0x0F;
  3423  00066C  5108               	movf	((Update_LCD@x))&0ffh,w
  3424  00066E  0D02               	mullw	02h
  3425  000670  CFF3 F170          	movff	prodl,??_Update_LCD+102+0
  3426  000674  0EA0               	movlw	-96
  3427  000676  2770               	addwf	(??_Update_LCD+102+0)&0ffh
  3428  000678  0E0A               	movlw	low(Update_LCD@Seg_code)
  3429  00067A  2570               	addwf	(??_Update_LCD+102+0)&0ffh,w
  3430  00067C  6EE9               	movwf	c:fsr0l
  3431  00067E  6AEA               	clrf	1+c:fsr0l
  3432  000680  0E01               	movlw	high(Update_LCD@Seg_code)
  3433  000682  22EA               	addwfc	1+c:fsr0l
  3434  000684  50EF               	movf	indf0,w
  3435  000686  0B0F               	andlw	low(0Fh)
  3436  000688  1266               	iorwf	((c:3942)),c	;volatile
  3437                           	line	86
  3438                           ;lcd.c: 86: LCDDATA3 |= ( Seg_code[x-'0'] << 1 )
                                  & 0xE0;
  3439  00068A  5108               	movf	((Update_LCD@x))&0ffh,w
  3440  00068C  0D02               	mullw	02h
  3441  00068E  CFF3 F170          	movff	prodl,??_Update_LCD+102+0
  3442  000692  0EA0               	movlw	-96
  3443  000694  2770               	addwf	(??_Update_LCD+102+0)&0ffh
  3444  000696  0E0A               	movlw	low(Update_LCD@Seg_code)
  3445  000698  2570               	addwf	(??_Update_LCD+102+0)&0ffh,w
  3446  00069A  6EE9               	movwf	c:fsr0l
  3447  00069C  6AEA               	clrf	1+c:fsr0l
  3448  00069E  0E01               	movlw	high(Update_LCD@Seg_code)
  3449  0006A0  22EA               	addwfc	1+c:fsr0l
  3450  0006A2  50EF               	movf	indf0,w
  3451  0006A4  6F71               	movwf	(??_Update_LCD+103+0)&0ffh
  3452  0006A6  90D8               	bcf	status,0
  3453  0006A8  3571               	rlcf	((??_Update_LCD+103+0))&0ffh,w
  3454  0006AA  0BE0               	andlw	low(0E0h)
  3455  0006AC  1269               	iorwf	((c:3945)),c	;volatile
  3456                           	line	89
  3457                           	
  3458  0006AE                     l2429:		; BSR set to: 1
  3459                           
  3460                           	line	91
  3461                           ;lcd.c: 89: }
  3462                           ;lcd.c: 91: case 3:
  3463                           	
  3464  0006AE                     l2430:		; BSR set to: 1
  3465                           
  3466                           	line	93
  3467                           ;lcd.c: 93: LCDDATA0 &= 0x6F ;
  3468  0006AE  0E6F               	movlw	(06Fh)&0ffh
  3469  0006B0  1666               	andwf	((c:3942)),c	;volatile
  3470                           	line	95
  3471                           ;lcd.c: 95: LCDDATA1 &= 0xE0 ;
  3472  0006B2  0EE0               	movlw	(0E0h)&0ffh
  3473  0006B4  1667               	andwf	((c:3943)),c	;volatile
  3474                           	line	97
  3475                           ;lcd.c: 97: LCDDATA0 |= ( Seg_code[x-'0'] << 4 )
                                  & 0x10;
  3476  0006B6  5108               	movf	((Update_LCD@x))&0ffh,w
  3477  0006B8  0D02               	mullw	02h
  3478  0006BA  CFF3 F170          	movff	prodl,??_Update_LCD+102+0
  3479  0006BE  0EA0               	movlw	-96
  3480  0006C0  2770               	addwf	(??_Update_LCD+102+0)&0ffh
  3481  0006C2  0E0A               	movlw	low(Update_LCD@Seg_code)
  3482  0006C4  2570               	addwf	(??_Update_LCD+102+0)&0ffh,w
  3483  0006C6  6EE9               	movwf	c:fsr0l
  3484  0006C8  6AEA               	clrf	1+c:fsr0l
  3485  0006CA  0E01               	movlw	high(Update_LCD@Seg_code)
  3486  0006CC  22EA               	addwfc	1+c:fsr0l
  3487  0006CE  50EF               	movf	indf0,w
  3488  0006D0  6F71               	movwf	(??_Update_LCD+103+0)&0ffh
  3489  0006D2  3971               	swapf	((??_Update_LCD+103+0))&0ffh,w
  3490  0006D4  0BF0               	andlw	(0ffh shl 4) & 0ffh
  3491  0006D6  0B10               	andlw	low(010h)
  3492  0006D8  1266               	iorwf	((c:3942)),c	;volatile
  3493                           	line	98
  3494                           ;lcd.c: 98: LCDDATA0 |= ( Seg_code[x-'0'] << 6 )
                                  & 0x80;
  3495  0006DA  5108               	movf	((Update_LCD@x))&0ffh,w
  3496  0006DC  0D02               	mullw	02h
  3497  0006DE  CFF3 F170          	movff	prodl,??_Update_LCD+102+0
  3498  0006E2  0EA0               	movlw	-96
  3499  0006E4  2770               	addwf	(??_Update_LCD+102+0)&0ffh
  3500  0006E6  0E0A               	movlw	low(Update_LCD@Seg_code)
  3501  0006E8  2570               	addwf	(??_Update_LCD+102+0)&0ffh,w
  3502  0006EA  6EE9               	movwf	c:fsr0l
  3503  0006EC  6AEA               	clrf	1+c:fsr0l
  3504  0006EE  0E01               	movlw	high(Update_LCD@Seg_code)
  3505  0006F0  22EA               	addwfc	1+c:fsr0l
  3506  0006F2  50EF               	movf	indf0,w
  3507  0006F4  6F71               	movwf	(??_Update_LCD+103+0)&0ffh
  3508  0006F6  0E06               	movlw	06h
  3509  0006F8  6F72               	movwf	(??_Update_LCD+104+0)&0ffh
  3510  0006FA                     u2625:
  3511  0006FA  90D8               	bcf	status,0
  3512  0006FC  3771               	rlcf	((??_Update_LCD+103+0))&0ffh
  3513  0006FE  2F72               	decfsz	(??_Update_LCD+104+0)&0ffh
  3514  000700  EF7D  F003         	goto	u2625
  3515  000704  5171               	movf	((??_Update_LCD+103+0))&0ffh,w
  3516  000706  0B80               	andlw	low(080h)
  3517  000708  1266               	iorwf	((c:3942)),c	;volatile
  3518                           	line	99
  3519                           ;lcd.c: 99: LCDDATA1 |= ( Seg_code[x-'0'] >> 2 )
                                  & 0x1F;
  3520  00070A  5108               	movf	((Update_LCD@x))&0ffh,w
  3521  00070C  0D02               	mullw	02h
  3522  00070E  CFF3 F170          	movff	prodl,??_Update_LCD+102+0
  3523  000712  0EA0               	movlw	-96
  3524  000714  2770               	addwf	(??_Update_LCD+102+0)&0ffh
  3525  000716  0E0A               	movlw	low(Update_LCD@Seg_code)
  3526  000718  2570               	addwf	(??_Update_LCD+102+0)&0ffh,w
  3527  00071A  6EE9               	movwf	c:fsr0l
  3528  00071C  6AEA               	clrf	1+c:fsr0l
  3529  00071E  0E01               	movlw	high(Update_LCD@Seg_code)
  3530  000720  22EA               	addwfc	1+c:fsr0l
  3531  000722  50EF               	movf	indf0,w
  3532  000724  6F71               	movwf	(??_Update_LCD+103+0)&0ffh
  3533  000726  90D8               	bcf	status,0
  3534  000728  3371               	rrcf	((??_Update_LCD+103+0))&0ffh
  3535  00072A  90D8               	bcf	status,0
  3536  00072C  3171               	rrcf	((??_Update_LCD+103+0))&0ffh,w
  3537  00072E  0B1F               	andlw	low(01Fh)
  3538  000730  1267               	iorwf	((c:3943)),c	;volatile
  3539                           	line	101
  3540                           ;lcd.c: 101: }
  3541  000732  EFB4  F003         	goto	l2417
  3542                           	line	46
  3543                           	
  3544  000736                     l2418:		; BSR set to: 1
  3545                           
  3546  000736  C106  F170         	movff	(Update_LCD@digit),??_Update_LCD+102+0
  3547  00073A  C107  F171         	movff	(Update_LCD@digit+1),??_Update_LCD+102+0+
                                 1
  3548  00073E  EFAF  F003         	goto	l30019
  3549  000742                     l30020:
  3550  000742  5170               	movf	(??_Update_LCD+102+0)&0ffh,w
  3551  000744  0A00               	xorlw	0 ^ 0
  3552  000746  E101 D74D          	bz	l2419
  3553  00074A  0A01               	xorlw	1 ^ 0
  3554  00074C  E101 D763          	bz	l2424
  3555  000750  0A03               	xorlw	2 ^ 1
  3556  000752  E101 D77B          	bz	l2427
  3557  000756  0A01               	xorlw	3 ^ 2
  3558  000758  E0AA               	bz	l2430
  3559  00075A  EFB4  F003         	goto	l2417
  3560                           
  3561  00075E                     l30019:
  3562  00075E  5171               	movf	(??_Update_LCD+102+1)&0ffh,w
  3563  000760  0A00               	xorlw	0 ^ 0
  3564  000762  E0EF               	bz	l30020
  3565  000764  EFB4  F003         	goto	l2417
  3566                           
  3567                           	line	101
  3568                           	
  3569  000768                     l2417:		; BSR set to: 1
  3570                           
  3571                           	line	102
  3572                           ;lcd.c: 102: }
  3573  000768                     l2416:
  3574                           			; BSR set to: 1
  3575                           
  3576  000768  0012               	return
  3577                           	opt stack 0
  3578                           GLOBAL __end_of_Update_LCD
  3579  00076A                     	__end_of_Update_LCD:
  3580                           	FNSIZE	_Update_LCD,105,4
  3581                           ; =============== function _Update_LCD ends ====
                                 ========
  3582                           
  3583                           	signat	_Update_LCD,12408
  3584                           	global	_Print_UART
  3585                           	global	??_Print_UART
  3586                           	global	?_Print_UART
  3587                           
  3588                           ; *************** function _Print_UART *********
                                 ********
  3589                           ; Defined at:
  3590                           ;		line 7 in file "C:\Users\deepesh\Desktop\Fina
                                 l codes\uart.c"
  3591                           ; Parameters:
  3592                           ;		buffer         size:   1reg:   wre	type: PTR 
                                 char ; Largest target is 64
  3593                           ;		 -> PrintStr(64), 
  3594                           ; Auto variables:
  3595                           ;		None
  3596                           ; Return value:
  3597                           ;		type: void 
  3598                           ;		size: 0
  3599                           ; Registers used:
  3600                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  3601                           ; Tracked objects:
  3602                           ;		On entry : F/1
  3603                           ;		On exit  : F/1
  3604                           ;		Unchanged: FFFFFFFF/0
  3605                           ; Data sizes:
  3606                           ;		Autos:    0
  3607                           ;		Params:   0
  3608                           ;		Temp:     0
  3609                           ;		Total:    0
  3610                           ; This function calls:
  3611                           ;		Nothing
  3612                           ; This function is called by:
  3613                           ;		_main
  3614                           ;		_UART_Init
  3615                           ;		_ADC_Init
  3616                           ;		_UART2_Init
  3617                           ;		_CalcRoomT
  3618                           ; This function uses a non-reentrant model
  3619                           ; 
  3620                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  3621                           
  3622                           	opt pm
  3623                           	file	"C:\Users\deepesh\Desktop\Final codes\uart
                                 .c"
  3624                           	line	7
  3625  000000                     	__size_of_Print_UART	equ	__end_of_Print_UART-_P
                                 rint_UART
  3626                           ;uart.c: 6: void Print_UART( signed char *buffer
                                  )
  3627                           ;uart.c: 7: {
  3628                           	
  3629  000F50                     _Print_UART:		; BSR set to: 1
  3630                           
  3631                           	opt stack 28
  3632                           ; Print_UART@buffer loaded to fsr2l
  3633                           	line	9
  3634  000F50  CFE8 FFD9          	movff	0+wreg,fsr2l
  3635  000F54  EFD1  F007         	goto	l964
  3636                           	
  3637  000F58                     l965:		; BSR set to: ?
  3638                           
  3639                           	line	11
  3640                           ;uart.c: 10: {
  3641                           ;uart.c: 11: while( !TXSTA1bits.TRMT ){}
  3642  000F58  EFAE  F007         	goto	l967
  3643                           	
  3644  000F5C                     l967:		; BSR set to: ?
  3645                           
  3646                           	
  3647  000F5C  A2AC               	btfss	((c:4012)),c,1	;volatile
  3648  000F5E  EFB3  F007         	goto	u2631
  3649  000F62  EFB5  F007         	goto	u2630
  3650  000F66                     u2631:
  3651  000F66  EFAE  F007         	goto	l967
  3652  000F6A                     u2630:
  3653                           	
  3654  000F6A                     l969:		; BSR set to: ?
  3655                           
  3656                           	line	12
  3657                           ;uart.c: 12: if( *buffer == '\n' )
  3658  000F6A  50D9               	movf	(0+fsr2l),c,w
  3659  000F6C  6EE9               	movwf	fsr0l
  3660  000F6E  6AEA               	clrf	fsr0h
  3661  000F70  0E0A               	movlw	(0Ah)&0ffh
  3662  000F72  62EF               	cpfseq	indf0
  3663  000F74  EFBE  F007         	goto	u2641
  3664  000F78  EFC0  F007         	goto	u2640
  3665  000F7C                     u2641:
  3666  000F7C  EFCB  F007         	goto	l970
  3667  000F80                     u2640:
  3668                           	line	14
  3669                           ;uart.c: 13: {
  3670                           ;uart.c: 14: TXREG1 = '\r' ;
  3671  000F80  0E0D               	movlw	low(0Dh)
  3672  000F82  6EAD               	movwf	((c:4013)),c	;volatile
  3673                           	line	15
  3674                           ;uart.c: 15: while( !TXSTA1bits.TRMT ) ;
  3675  000F84  EFC4  F007         	goto	l971
  3676                           	
  3677  000F88                     l971:		; BSR set to: ?
  3678                           
  3679                           	
  3680  000F88  A2AC               	btfss	((c:4012)),c,1	;volatile
  3681  000F8A  EFC9  F007         	goto	u2651
  3682  000F8E  EFCB  F007         	goto	u2650
  3683  000F92                     u2651:
  3684  000F92  EFC4  F007         	goto	l971
  3685  000F96                     u2650:
  3686                           	
  3687  000F96                     l973:		; BSR set to: ?
  3688                           
  3689                           	line	16
  3690                           	
  3691  000F96                     l970:		; BSR set to: ?
  3692                           
  3693                           	line	17
  3694  000F96  50D9               	movf	(0+fsr2l),c,w
  3695  000F98  6EE9               	movwf	fsr0l
  3696  000F9A  6AEA               	clrf	fsr0h
  3697  000F9C  50EF               	movf	indf0,w
  3698  000F9E  6EAD               	movwf	((c:4013)),c	;volatile
  3699                           ;uart.c: 16: }
  3700                           ;uart.c: 17: TXREG1 = *buffer++ ;
  3701  000FA0  2AD9               	incf	(0+fsr2l),c
  3702                           	line	18
  3703                           	
  3704  000FA2                     l964:		; BSR set to: ?
  3705                           
  3706                           	line	9
  3707  000FA2  50D9               	movf	(0+fsr2l),c,w
  3708  000FA4  6EE9               	movwf	fsr0l
  3709  000FA6  6AEA               	clrf	fsr0h
  3710  000FA8  50EF               	movf	indf0,w
  3711  000FAA  A4D8               	btfss	status,2
  3712  000FAC  EFDA  F007         	goto	u2661
  3713  000FB0  EFDC  F007         	goto	u2660
  3714  000FB4                     u2661:
  3715  000FB4  EFAC  F007         	goto	l965
  3716  000FB8                     u2660:
  3717                           	
  3718  000FB8                     l966:		; BSR set to: ?
  3719                           
  3720                           	line	19
  3721                           ;uart.c: 18: }
  3722                           ;uart.c: 19: }
  3723  000FB8                     l963:
  3724                           			; BSR set to: ?
  3725                           
  3726  000FB8  0012               	return
  3727                           	opt stack 0
  3728                           GLOBAL __end_of_Print_UART
  3729  000FBA                     	__end_of_Print_UART:
  3730                           	FNSIZE	_Print_UART,0,0
  3731                           ; =============== function _Print_UART ends ====
                                 ========
  3732                           
  3733                           	signat	_Print_UART,4216
  3734                           	global	_SPI_Rx_Tx
  3735                           	global	??_SPI_Rx_Tx
  3736                           	global	?_SPI_Rx_Tx
  3737                           
  3738                           ; *************** function _SPI_Rx_Tx **********
                                 *******
  3739                           ; Defined at:
  3740                           ;		line 7 in file "C:\Users\deepesh\Desktop\Fina
                                 l codes\spi.c"
  3741                           ; Parameters:
  3742                           ;		txbyte         size:   1reg:   wre	type: unsi
                                 gned char 
  3743                           ; Auto variables:
  3744                           ;		mask        	       	type: unsigned char 
  3745                           ;		bitcount    	       	type: unsigned char 
  3746                           ;		rxbyte      	       	type: unsigned char 
  3747                           ; Return value:
  3748                           ;		type: unsigned char 
  3749                           ;		size: 1
  3750                           ; Registers used:
  3751                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
                                 , prodl, prodh
  3752                           ; Tracked objects:
  3753                           ;		On entry : 0/1
  3754                           ;		On exit  : 0/0
  3755                           ;		Unchanged: FFFFFFF0/0
  3756                           ; Data sizes:
  3757                           ;		Autos:    0
  3758                           ;		Params:   0
  3759                           ;		Temp:     0
  3760                           ;		Total:    0
  3761                           ; This function calls:
  3762                           ;		Nothing
  3763                           ; This function is called by:
  3764                           ;		_ADC_Init
  3765                           ;		_Read_adc
  3766                           ; This function uses a non-reentrant model
  3767                           ; 
  3768                                   psect   text19,class=CODE,space=0,reloc=
                                 2
  3769                           
  3770                           	opt pm
  3771                           	file	"C:\Users\deepesh\Desktop\Final codes\spi.
                                 c"
  3772                           	line	7
  3773  000000                     	__size_of_SPI_Rx_Tx	equ	__end_of_SPI_Rx_Tx-_SPI
                                 _Rx_Tx
  3774                           ;spi.c: 6: unsigned char SPI_Rx_Tx(unsigned char
                                  txbyte)
  3775                           ;spi.c: 7: {
  3776                           	
  3777  001088                     _SPI_Rx_Tx:		; BSR set to: ?
  3778                           
  3779                           	opt stack 28
  3780                           ; SPI_Rx_Tx@txbyte loaded to prodl
  3781                           	line	8
  3782  001088  CFE8 FFF3          	movff	0+wreg,prodl
  3783  00108C  6AD9               	clrf	(0+fsr2l),c
  3784                           ; SPI_Rx_Tx@bitcount allocated to prodh
  3785  00108E  6AF4               	clrf	(0+prodh),c
  3786                           	line	9
  3787                           ;spi.c: 9: unsigned char mask = 0x80;
  3788  001090  0E80               	movlw	low(080h)
  3789  001092  6EE1               	movwf	(0+fsr1l),c
  3790                           ; SPI_Rx_Tx@bitcount allocated to fsr0l
  3791                           	line	10
  3792                           ;spi.c: 10: for ( bitcount = 0; bitcount < 8; bi
                                 tcount++ )
  3793  001094  6AE9               	clrf	(0+fsr0l),c
  3794  001096  EF4D  F008         	goto	l1939
  3795                           	line	11
  3796                           	
  3797  00109A                     l1939:		; BSR set to: ?
  3798                           
  3799                           	line	12
  3800                           ;spi.c: 11: {
  3801                           ;spi.c: 12: if(txbyte & mask)
  3802  00109A  50F3               	movf	(0+prodl),c,w
  3803  00109C  14E1               	andwf	(0+fsr1l),c,w
  3804  00109E  0900               	iorlw	0
  3805  0010A0  B4D8               	btfsc	status,2
  3806  0010A2  EF55  F008         	goto	u2681
  3807  0010A6  EF57  F008         	goto	u2680
  3808  0010AA                     u2681:
  3809  0010AA  EF5A  F008         	goto	l1942
  3810  0010AE                     u2680:
  3811                           	line	13
  3812                           ;spi.c: 13: PORTAbits.RA3 = 1;
  3813  0010AE  8680               	bsf	((c:3968)),c,3	;volatile
  3814  0010B0  EF5B  F008         	goto	l1943
  3815                           	line	14
  3816                           	
  3817  0010B4                     l1942:		; BSR set to: ?
  3818                           
  3819                           	line	15
  3820                           ;spi.c: 14: else
  3821                           ;spi.c: 15: PORTAbits.RA3 = 0;
  3822  0010B4  9680               	bcf	((c:3968)),c,3	;volatile
  3823                           	
  3824  0010B6                     l1943:		; BSR set to: ?
  3825                           
  3826                           	line	16
  3827                           ;spi.c: 16: PORTAbits.RA0 = 1;
  3828  0010B6  8080               	bsf	((c:3968)),c,0	;volatile
  3829                           	line	17
  3830                           ;spi.c: 17: rxbyte <<= 1;
  3831  0010B8  90D8               	bcf status,0
  3832  0010BA  36D9               	rlcf	(0+fsr2l),c
  3833                           
  3834                           	line	18
  3835                           ;spi.c: 18: if ( PORTAbits.RA2 ) rxbyte |= 1;
  3836                           	
  3837  0010BC  A480               	btfss	((c:3968)),c,2	;volatile
  3838  0010BE  EF63  F008         	goto	u2691
  3839  0010C2  EF65  F008         	goto	u2690
  3840  0010C6                     u2691:
  3841  0010C6  EF66  F008         	goto	l1944
  3842  0010CA                     u2690:
  3843  0010CA  80D9               	bsf	(0+(0/8)+0+fsr2l),c,(0)&7
  3844                           	
  3845  0010CC                     l1944:		; BSR set to: ?
  3846                           
  3847                           	line	19
  3848                           ;spi.c: 19: PORTAbits.RA0 = 0;
  3849  0010CC  9080               	bcf	((c:3968)),c,0	;volatile
  3850                           	line	20
  3851                           ;spi.c: 20: mask >>= 1;
  3852  0010CE  90D8               	bcf status,0
  3853  0010D0  32E1               	rrcf	(0+fsr1l),c
  3854                           
  3855                           	line	10
  3856  0010D2  2AE9               	incf	(0+fsr0l),c
  3857  0010D4  0E07               	movlw	(08h-1)
  3858  0010D6  64E9               	cpfsgt	(0+fsr0l),c
  3859  0010D8  EF70  F008         	goto	u2701
  3860  0010DC  EF72  F008         	goto	u2700
  3861  0010E0                     u2701:
  3862  0010E0  EF4D  F008         	goto	l1939
  3863  0010E4                     u2700:
  3864                           	
  3865  0010E4                     l1940:		; BSR set to: ?
  3866                           
  3867                           	line	23
  3868                           ;spi.c: 22: }
  3869                           ;spi.c: 23: return rxbyte;
  3870  0010E4  50D9               	movf	(0+fsr2l),c,w
  3871  0010E6  EF75  F008         	goto	l1938
  3872                           	line	24
  3873                           ;spi.c: 24: }
  3874  0010EA                     l1938:
  3875                           			; BSR set to: ?
  3876                           
  3877  0010EA  0012               	return
  3878                           	opt stack 0
  3879                           GLOBAL __end_of_SPI_Rx_Tx
  3880  0010EC                     	__end_of_SPI_Rx_Tx:
  3881                           	FNSIZE	_SPI_Rx_Tx,0,0
  3882                           ; =============== function _SPI_Rx_Tx ends =====
                                 =======
  3883                           
  3884                           	signat	_SPI_Rx_Tx,4217
  3885                           	global	_DelayMs
  3886                           	global	??_DelayMs
  3887                           	global	?_DelayMs
  3888                           
  3889                           ; *************** function _DelayMs ************
                                 *****
  3890                           ; Defined at:
  3891                           ;		line 44 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\def.c"
  3892                           ; Parameters:
  3893                           ;		time           size:   2offs:   0	type: unsig
                                 ned short 
  3894                           ; Auto variables:
  3895                           ;		i           	       	type: unsigned short 
  3896                           ;		j           	       	type: unsigned short 
  3897                           ; Return value:
  3898                           ;		type: void 
  3899                           ;		size: 0
  3900                           ; Registers used:
  3901                           ;		wreg, status,2, status,0, prodl, prodh
  3902                           ; Tracked objects:
  3903                           ;		On entry : F/1
  3904                           ;		On exit  : F/1
  3905                           ;		Unchanged: FFFFFFF0/0
  3906                           ; Data sizes:
  3907                           ;		Autos:    2
  3908                           ;		Params:   2
  3909                           ;		Temp:     0
  3910                           ;		Total:    4
  3911                           ; This function calls:
  3912                           ;		Nothing
  3913                           ; This function is called by:
  3914                           ;		_main
  3915                           ;		_ADC_Init
  3916                           ; This function uses a non-reentrant model
  3917                           ; 
  3918                                   psect   text20,class=CODE,space=0,reloc=
                                 2
  3919                           
  3920                           	opt pm
  3921                           	file	"C:\Users\deepesh\Desktop\Final codes\def.
                                 c"
  3922                           	line	44
  3923  000000                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  3924                           ;def.c: 43: void DelayMs(unsigned short int time
                                 )
  3925                           ;def.c: 44: {
  3926                           	
  3927  0011CA                     _DelayMs:		; BSR set to: 1
  3928                           
  3929                           	opt stack 28
  3930                           	line	46
  3931  0011CA  6AF3               	clrf	(0+prodl),c
  3932  0011CC  6AF4               	clrf	(1+prodl),c
  3933  0011CE  EFFC  F008         	goto	l981
  3934                           	line	47
  3935                           	
  3936  0011D2                     l978:		; BSR set to: 1
  3937                           
  3938                           	line	48
  3939                           ;def.c: 47: {
  3940                           ;def.c: 48: for(j=0;j<93;j++)
  3941  0011D2  6B07               	clrf	((DelayMs@j))&0ffh
  3942  0011D4  6B08               	clrf	((DelayMs@j+1))&0ffh
  3943  0011D6  EFED  F008         	goto	l982
  3944                           	line	49
  3945                           	
  3946  0011DA                     l982:		; BSR set to: 1
  3947                           
  3948                           	line	48
  3949                           ;def.c: 49: {
  3950  0011DA  4B07               	infsnz	((DelayMs@j))&0ffh
  3951  0011DC  2B08               	incf	((DelayMs@j+1))&0ffh
  3952  0011DE  0E5D               	movlw	05Dh
  3953  0011E0  5D07               	subwf	((DelayMs@j))&0ffh,w
  3954  0011E2  0E00               	movlw	0
  3955  0011E4  5908               	subwfb	((DelayMs@j+1))&0ffh,w
  3956  0011E6  A0D8               	btfss	status,0
  3957  0011E8  EFF8  F008         	goto	u2721
  3958  0011EC  EFFA  F008         	goto	u2720
  3959  0011F0                     u2721:
  3960  0011F0  EFED  F008         	goto	l982
  3961  0011F4                     u2720:
  3962                           	
  3963  0011F4                     l983:		; BSR set to: 1
  3964                           
  3965                           	line	46
  3966  0011F4  4AF3               	infsnz	(0+prodl),c
  3967  0011F6  2AF4               	incf	(1+prodl),c
  3968                           	
  3969  0011F8                     l981:		; BSR set to: 1
  3970                           
  3971  0011F8  5105               	movf	((DelayMs@time))&0ffh,w
  3972  0011FA  5CF3               	subwf	(0+prodl),c,w
  3973  0011FC  5106               	movf	((DelayMs@time+1))&0ffh,w
  3974  0011FE  58F4               	subwfb	(1+prodl),c,w
  3975  001200  A0D8               	btfss	status,0
  3976  001202  EF05  F009         	goto	u2731
  3977  001206  EF07  F009         	goto	u2730
  3978  00120A                     u2731:
  3979  00120A  EFE9  F008         	goto	l978
  3980  00120E                     u2730:
  3981                           	
  3982  00120E                     l979:		; BSR set to: 1
  3983                           
  3984                           	line	52
  3985                           ;def.c: 50: }
  3986                           ;def.c: 51: }
  3987                           ;def.c: 52: }
  3988  00120E                     l977:
  3989                           			; BSR set to: 1
  3990                           
  3991  00120E  0012               	return
  3992                           	opt stack 0
  3993                           GLOBAL __end_of_DelayMs
  3994  001210                     	__end_of_DelayMs:
  3995                           	FNSIZE	_DelayMs,2,2
  3996                           ; =============== function _DelayMs ends =======
                                 =====
  3997                           
  3998                           	signat	_DelayMs,4216
  3999                           	global	___lmul
  4000                           	global	??___lmul
  4001                           	global	?___lmul
  4002                           
  4003                           ; *************** function ___lmul *************
                                 ****
  4004                           ; Defined at:
  4005                           ;		line 3 in file "C:\Program Files (x86)\HI-TEC
                                 H Software\PICC-18\PRO\9.66\sources\lmul.c"
  4006                           ; Parameters:
  4007                           ;		multiplier     size:   4offs:   0	type: unsig
                                 ned long 
  4008                           ;		multiplicand   size:   4offs:   4	type: unsig
                                 ned long 
  4009                           ; Auto variables:
  4010                           ;		product     	       	type: unsigned long 
  4011                           ; Return value:
  4012                           ;		type: unsigned long 
  4013                           ;		size: 4
  4014                           ; Registers used:
  4015                           ;		wreg, status,2, status,0
  4016                           ; Tracked objects:
  4017                           ;		On entry : F/1
  4018                           ;		On exit  : F/1
  4019                           ;		Unchanged: FFFFFFF0/0
  4020                           ; Data sizes:
  4021                           ;		Autos:    4
  4022                           ;		Params:   8
  4023                           ;		Temp:     0
  4024                           ;		Total:   12
  4025                           ; This function calls:
  4026                           ;		Nothing
  4027                           ; This function is called by:
  4028                           ;		_Scale
  4029                           ; This function uses a non-reentrant model
  4030                           ; 
  4031                                   psect   text21,class=CODE,space=0,reloc=
                                 2
  4032                           
  4033                           	opt pm
  4034                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\sources\lmul.c"
  4035                           	line	3
  4036  000000                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  4037                           	
  4038  001022                     ___lmul:		; BSR set to: 1
  4039                           
  4040                           	opt stack 27
  4041                           	line	4
  4042  001022  6B2B               	clrf	((___lmul@product))&0ffh
  4043  001024  6B2C               	clrf	((___lmul@product+1))&0ffh
  4044  001026  6B2D               	clrf	((___lmul@product+2))&0ffh
  4045  001028  6B2E               	clrf	((___lmul@product+3))&0ffh
  4046                           
  4047                           	line	6
  4048                           	
  4049  00102A                     l5714:		; BSR set to: 1
  4050                           
  4051                           	line	7
  4052                           	
  4053  00102A  A123               	btfss	((___lmul@multiplier))&0ffh,(0)&7
  4054  00102C  EF1A  F008         	goto	u2741
  4055  001030  EF1C  F008         	goto	u2740
  4056  001034                     u2741:
  4057  001034  EF24  F008         	goto	l5715
  4058  001038                     u2740:
  4059                           	line	8
  4060  001038  5127               	movf	((___lmul@multiplicand))&0ffh,w
  4061  00103A  272B               	addwf	((___lmul@product))&0ffh
  4062  00103C  5128               	movf	((___lmul@multiplicand+1))&0ffh,w
  4063  00103E  232C               	addwfc	((___lmul@product+1))&0ffh
  4064  001040  5129               	movf	((___lmul@multiplicand+2))&0ffh,w
  4065  001042  232D               	addwfc	((___lmul@product+2))&0ffh
  4066  001044  512A               	movf	((___lmul@multiplicand+3))&0ffh,w
  4067  001046  232E               	addwfc	((___lmul@product+3))&0ffh
  4068                           	
  4069  001048                     l5715:		; BSR set to: 1
  4070                           
  4071                           	line	9
  4072  001048  90D8               	bcf	status,0
  4073  00104A  3727               	rlcf	((___lmul@multiplicand))&0ffh
  4074  00104C  3728               	rlcf	((___lmul@multiplicand+1))&0ffh
  4075  00104E  3729               	rlcf	((___lmul@multiplicand+2))&0ffh
  4076  001050  372A               	rlcf	((___lmul@multiplicand+3))&0ffh
  4077                           	line	10
  4078  001052  90D8               	bcf	status,0
  4079  001054  3326               	rrcf	((___lmul@multiplier+3))&0ffh
  4080  001056  3325               	rrcf	((___lmul@multiplier+2))&0ffh
  4081  001058  3324               	rrcf	((___lmul@multiplier+1))&0ffh
  4082  00105A  3323               	rrcf	((___lmul@multiplier))&0ffh
  4083                           	line	11
  4084  00105C  5126               	movf	((___lmul@multiplier+3))&0ffh,w
  4085  00105E  1123               	iorwf ((___lmul@multiplier))&0ffh,w
  4086  001060  1124               	iorwf ((___lmul@multiplier+1))&0ffh,w
  4087  001062  1125               	iorwf ((___lmul@multiplier+2))&0ffh,w
  4088                           
  4089  001064  A4D8               	btfss	status,2
  4090  001066  EF37  F008         	goto	u2751
  4091  00106A  EF39  F008         	goto	u2750
  4092  00106E                     u2751:
  4093  00106E  EF15  F008         	goto	l5714
  4094  001072                     u2750:
  4095                           	
  4096  001072                     l5713:		; BSR set to: 1
  4097                           
  4098                           	line	12
  4099  001072  C12B  F123         	movff	(___lmul@product),(?___lmul)
  4100  001076  C12C  F124         	movff	(___lmul@product+1),(?___lmul+1)
  4101  00107A  C12D  F125         	movff	(___lmul@product+2),(?___lmul+2)
  4102  00107E  C12E  F126         	movff	(___lmul@product+3),(?___lmul+3)
  4103  001082  EF43  F008         	goto	l5711
  4104                           	line	13
  4105  001086                     l5711:
  4106                           			; BSR set to: 1
  4107                           
  4108  001086  0012               	return
  4109                           	opt stack 0
  4110                           GLOBAL __end_of___lmul
  4111  001088                     	__end_of___lmul:
  4112                           	FNSIZE	___lmul,4,8
  4113                           ; =============== function ___lmul ends ========
                                 ====
  4114                           
  4115                           	signat	___lmul,8316
  4116                           	global	___lwmod
  4117                           	global	??___lwmod
  4118                           	global	?___lwmod
  4119                           
  4120                           ; *************** function ___lwmod ************
                                 *****
  4121                           ; Defined at:
  4122                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
                                 H Software\PICC-18\PRO\9.66\sources\lwmod.c"
  4123                           ; Parameters:
  4124                           ;		dividend       size:   2offs:   0	type: unsig
                                 ned int 
  4125                           ;		divisor        size:   2offs:   2	type: unsig
                                 ned int 
  4126                           ; Auto variables:
  4127                           ;		counter     	       	type: unsigned char 
  4128                           ; Return value:
  4129                           ;		type: unsigned int 
  4130                           ;		size: 2
  4131                           ; Registers used:
  4132                           ;		wreg, fsr2l, status,2, status,0
  4133                           ; Tracked objects:
  4134                           ;		On entry : F/1
  4135                           ;		On exit  : F/1
  4136                           ;		Unchanged: FFFFFFF0/0
  4137                           ; Data sizes:
  4138                           ;		Autos:    0
  4139                           ;		Params:   4
  4140                           ;		Temp:     0
  4141                           ;		Total:    4
  4142                           ; This function calls:
  4143                           ; This function is called by:
  4144                           ;		_sprintf
  4145                           ; This function uses a non-reentrant model
  4146                           ; 
  4147                                   psect   text22,class=CODE,space=0,reloc=
                                 2
  4148                           
  4149                           	opt pm
  4150                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\sources\lwmod.c"
  4151                           	line	5
  4152  000000                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4153                           	
  4154  000FBA                     ___lwmod:		; BSR set to: 1
  4155                           
  4156                           	opt stack 27
  4157                           	line	8
  4158  000FBA  5121               	movf	((___lwmod@divisor+1))&0ffh,w
  4159  000FBC  1120               	iorwf ((___lwmod@divisor))&0ffh,w
  4160                           
  4161  000FBE  B4D8               	btfsc	status,2
  4162  000FC0  EFE4  F007         	goto	u2761
  4163  000FC4  EFE6  F007         	goto	u2760
  4164  000FC8                     u2761:
  4165  000FC8  EF0A  F008         	goto	l5727
  4166  000FCC                     u2760:
  4167                           	line	9
  4168  000FCC  0E01               	movlw	low(01h)
  4169  000FCE  6ED9               	movwf	(0+fsr2l),c
  4170                           	line	10
  4171  000FD0  EFEE  F007         	goto	l5728
  4172                           	
  4173  000FD4                     l5729:		; BSR set to: 1
  4174                           
  4175                           	line	11
  4176  000FD4  90D8               	bcf	status,0
  4177  000FD6  3720               	rlcf	((___lwmod@divisor))&0ffh
  4178  000FD8  3721               	rlcf	((___lwmod@divisor+1))&0ffh
  4179                           	line	12
  4180  000FDA  2AD9               	incf	(0+fsr2l),c
  4181                           	line	13
  4182                           	
  4183  000FDC                     l5728:		; BSR set to: 1
  4184                           
  4185                           	line	10
  4186                           	
  4187  000FDC  AF21               	btfss	((___lwmod@divisor+1))&0ffh,(15)&7
  4188  000FDE  EFF3  F007         	goto	u2771
  4189  000FE2  EFF5  F007         	goto	u2770
  4190  000FE6                     u2771:
  4191  000FE6  EFEA  F007         	goto	l5729
  4192  000FEA                     u2770:
  4193                           	
  4194  000FEA                     l5730:		; BSR set to: 1
  4195                           
  4196                           	line	14
  4197                           	
  4198  000FEA                     l5733:		; BSR set to: 1
  4199                           
  4200                           	line	15
  4201  000FEA  5120               	movf	((___lwmod@divisor))&0ffh,w
  4202  000FEC  5D1E               	subwf	((___lwmod@dividend))&0ffh,w
  4203  000FEE  5121               	movf	((___lwmod@divisor+1))&0ffh,w
  4204  000FF0  591F               	subwfb	((___lwmod@dividend+1))&0ffh,w
  4205  000FF2  A0D8               	btfss	status,0
  4206  000FF4  EFFE  F007         	goto	u2781
  4207  000FF8  EF00  F008         	goto	u2780
  4208  000FFC                     u2781:
  4209  000FFC  EF04  F008         	goto	l5734
  4210  001000                     u2780:
  4211                           	line	16
  4212  001000  5120               	movf	((___lwmod@divisor))&0ffh,w
  4213  001002  5F1E               	subwf	((___lwmod@dividend))&0ffh
  4214  001004  5121               	movf	((___lwmod@divisor+1))&0ffh,w
  4215  001006  5B1F               	subwfb	((___lwmod@dividend+1))&0ffh
  4216                           
  4217                           	
  4218  001008                     l5734:		; BSR set to: 1
  4219                           
  4220                           	line	17
  4221  001008  90D8               	bcf	status,0
  4222  00100A  3321               	rrcf	((___lwmod@divisor+1))&0ffh
  4223  00100C  3320               	rrcf	((___lwmod@divisor))&0ffh
  4224                           	line	18
  4225  00100E  2ED9               	decfsz	(0+fsr2l),c
  4226                           	
  4227  001010  EFF5  F007         	goto	l5733
  4228                           	
  4229  001014                     l5732:		; BSR set to: 1
  4230                           
  4231                           	line	19
  4232                           	
  4233  001014                     l5727:		; BSR set to: 1
  4234                           
  4235                           	line	20
  4236  001014  C11E  F11E         	movff	(___lwmod@dividend),(?___lwmod)
  4237  001018  C11F  F11F         	movff	(___lwmod@dividend+1),(?___lwmod+1)
  4238  00101C  EF10  F008         	goto	l5726
  4239                           	line	21
  4240  001020                     l5726:
  4241                           			; BSR set to: 1
  4242                           
  4243  001020  0012               	return
  4244                           	opt stack 0
  4245                           GLOBAL __end_of___lwmod
  4246  001022                     	__end_of___lwmod:
  4247                           	FNSIZE	___lwmod,0,4
  4248                           ; =============== function ___lwmod ends =======
                                 =====
  4249                           
  4250                           	signat	___lwmod,8314
  4251                           	global	___lwdiv
  4252                           	global	??___lwdiv
  4253                           	global	?___lwdiv
  4254                           
  4255                           ; *************** function ___lwdiv ************
                                 *****
  4256                           ; Defined at:
  4257                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
                                 H Software\PICC-18\PRO\9.66\sources\lwdiv.c"
  4258                           ; Parameters:
  4259                           ;		dividend       size:   2offs:   0	type: unsig
                                 ned int 
  4260                           ;		divisor        size:   2offs:   2	type: unsig
                                 ned int 
  4261                           ; Auto variables:
  4262                           ;		counter     	       	type: unsigned char 
  4263                           ;		quotient    	       	type: unsigned int 
  4264                           ; Return value:
  4265                           ;		type: unsigned int 
  4266                           ;		size: 2
  4267                           ; Registers used:
  4268                           ;		wreg, fsr2l, status,2, status,0, prodl, prodh
  4269                           ; Tracked objects:
  4270                           ;		On entry : F/1
  4271                           ;		On exit  : F/1
  4272                           ;		Unchanged: FFFFFFF0/0
  4273                           ; Data sizes:
  4274                           ;		Autos:    0
  4275                           ;		Params:   4
  4276                           ;		Temp:     0
  4277                           ;		Total:    4
  4278                           ; This function calls:
  4279                           ;		Nothing
  4280                           ; This function is called by:
  4281                           ;		_sprintf
  4282                           ;		_CalcRoomT
  4283                           ; This function uses a non-reentrant model
  4284                           ; 
  4285                                   psect   text23,class=CODE,space=0,reloc=
                                 2
  4286                           
  4287                           	opt pm
  4288                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\sources\lwdiv.c"
  4289                           	line	5
  4290  000000                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4291                           	
  4292  000EDC                     ___lwdiv:		; BSR set to: 1
  4293                           
  4294                           	opt stack 27
  4295                           	line	9
  4296  000EDC  6AF3               	clrf	(0+prodl),c
  4297  000EDE  6AF4               	clrf	(1+prodl),c
  4298                           	line	10
  4299  000EE0  5121               	movf	((___lwdiv@divisor+1))&0ffh,w
  4300  000EE2  1120               	iorwf ((___lwdiv@divisor))&0ffh,w
  4301                           
  4302  000EE4  B4D8               	btfsc	status,2
  4303  000EE6  EF77  F007         	goto	u2791
  4304  000EEA  EF79  F007         	goto	u2790
  4305  000EEE                     u2791:
  4306  000EEE  EFA1  F007         	goto	l5718
  4307  000EF2                     u2790:
  4308                           	line	11
  4309  000EF2  0E01               	movlw	low(01h)
  4310  000EF4  6ED9               	movwf	(0+fsr2l),c
  4311                           	line	12
  4312  000EF6  EF81  F007         	goto	l5719
  4313                           	
  4314  000EFA                     l5720:		; BSR set to: 1
  4315                           
  4316                           	line	13
  4317  000EFA  90D8               	bcf	status,0
  4318  000EFC  3720               	rlcf	((___lwdiv@divisor))&0ffh
  4319  000EFE  3721               	rlcf	((___lwdiv@divisor+1))&0ffh
  4320                           	line	14
  4321  000F00  2AD9               	incf	(0+fsr2l),c
  4322                           	line	15
  4323                           	
  4324  000F02                     l5719:		; BSR set to: 1
  4325                           
  4326                           	line	12
  4327                           	
  4328  000F02  AF21               	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
  4329  000F04  EF86  F007         	goto	u2801
  4330  000F08  EF88  F007         	goto	u2800
  4331  000F0C                     u2801:
  4332  000F0C  EF7D  F007         	goto	l5720
  4333  000F10                     u2800:
  4334                           	
  4335  000F10                     l5721:		; BSR set to: 1
  4336                           
  4337                           	line	16
  4338                           	
  4339  000F10                     l5724:		; BSR set to: 1
  4340                           
  4341                           	line	17
  4342  000F10  90D8               	bcf	status,0
  4343  000F12  36F3               	rlcf	(0+prodl),c
  4344  000F14  36F4               	rlcf	(1+prodl),c
  4345                           	line	18
  4346  000F16  5120               	movf	((___lwdiv@divisor))&0ffh,w
  4347  000F18  5D1E               	subwf	((___lwdiv@dividend))&0ffh,w
  4348  000F1A  5121               	movf	((___lwdiv@divisor+1))&0ffh,w
  4349  000F1C  591F               	subwfb	((___lwdiv@dividend+1))&0ffh,w
  4350  000F1E  A0D8               	btfss	status,0
  4351  000F20  EF94  F007         	goto	u2811
  4352  000F24  EF96  F007         	goto	u2810
  4353  000F28                     u2811:
  4354  000F28  EF9B  F007         	goto	l5725
  4355  000F2C                     u2810:
  4356                           	line	19
  4357  000F2C  5120               	movf	((___lwdiv@divisor))&0ffh,w
  4358  000F2E  5F1E               	subwf	((___lwdiv@dividend))&0ffh
  4359  000F30  5121               	movf	((___lwdiv@divisor+1))&0ffh,w
  4360  000F32  5B1F               	subwfb	((___lwdiv@dividend+1))&0ffh
  4361                           
  4362                           	line	20
  4363  000F34  80F3               	bsf	(0+(0/8)+0+prodl),c,(0)&7
  4364                           	line	21
  4365                           	
  4366  000F36                     l5725:		; BSR set to: 1
  4367                           
  4368                           	line	22
  4369  000F36  90D8               	bcf	status,0
  4370  000F38  3321               	rrcf	((___lwdiv@divisor+1))&0ffh
  4371  000F3A  3320               	rrcf	((___lwdiv@divisor))&0ffh
  4372                           	line	23
  4373  000F3C  2ED9               	decfsz	(0+fsr2l),c
  4374                           	
  4375  000F3E  EF88  F007         	goto	l5724
  4376                           	
  4377  000F42                     l5723:		; BSR set to: 1
  4378                           
  4379                           	line	24
  4380                           	
  4381  000F42                     l5718:		; BSR set to: 1
  4382                           
  4383                           	line	25
  4384  000F42  CFF3 F11E          	movff	0+prodl,(?___lwdiv)
  4385  000F46  CFF4 F11F          	movff	1+prodl,(?___lwdiv+1)
  4386  000F4A  EFA7  F007         	goto	l5717
  4387                           	line	26
  4388  000F4E                     l5717:
  4389                           			; BSR set to: 1
  4390                           
  4391  000F4E  0012               	return
  4392                           	opt stack 0
  4393                           GLOBAL __end_of___lwdiv
  4394  000F50                     	__end_of___lwdiv:
  4395                           	FNSIZE	___lwdiv,0,4
  4396                           ; =============== function ___lwdiv ends =======
                                 =====
  4397                           
  4398                           	signat	___lwdiv,8314
  4399                           	global	___aldiv
  4400                           	global	??___aldiv
  4401                           	global	?___aldiv
  4402                           
  4403                           ; *************** function ___aldiv ************
                                 *****
  4404                           ; Defined at:
  4405                           ;		line 5 in file "C:\Program Files (x86)\HI-TEC
                                 H Software\PICC-18\PRO\9.66\sources\aldiv.c"
  4406                           ; Parameters:
  4407                           ;		dividend       size:   4offs:   0	type: long 
  4408                           ;		divisor        size:   4offs:   4	type: long 
  4409                           ; Auto variables:
  4410                           ;		counter     	       	type: unsigned char 
  4411                           ;		sign        	       	type: unsigned char 
  4412                           ;		quotient    	       	type: long 
  4413                           ; Return value:
  4414                           ;		type: long 
  4415                           ;		size: 4
  4416                           ; Registers used:
  4417                           ;		wreg, fsr1l, fsr2l, status,2, status,0
  4418                           ; Tracked objects:
  4419                           ;		On entry : F/1
  4420                           ;		On exit  : F/1
  4421                           ;		Unchanged: FFFFFFF0/0
  4422                           ; Data sizes:
  4423                           ;		Autos:    4
  4424                           ;		Params:   8
  4425                           ;		Temp:     0
  4426                           ;		Total:   12
  4427                           ; This function calls:
  4428                           ; This function is called by:
  4429                           ;		_Scale
  4430                           ; This function uses a non-reentrant model
  4431                           ; 
  4432                                   psect   text24,class=CODE,space=0,reloc=
                                 2
  4433                           
  4434                           	opt pm
  4435                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\sources\aldiv.c"
  4436                           	line	5
  4437  000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  4438                           	
  4439  000A6A                     ___aldiv:		; BSR set to: 1
  4440                           
  4441                           	opt stack 27
  4442                           	line	9
  4443  000A6A  6AE1               	clrf	(0+fsr1l),c
  4444                           	line	10
  4445  000A6C  AF2A               	btfss	((___aldiv@divisor+3))&0ffh,7
  4446  000A6E  EF3B  F005         	goto	u2821
  4447  000A72  EF3D  F005         	goto	u2820
  4448  000A76                     u2821:
  4449  000A76  EF47  F005         	goto	l5432
  4450  000A7A                     u2820:
  4451                           	line	11
  4452  000A7A  1F2A               	comf	((___aldiv@divisor+3))&0ffh
  4453  000A7C  1F29               	comf	((___aldiv@divisor+2))&0ffh
  4454  000A7E  1F28               	comf	((___aldiv@divisor+1))&0ffh
  4455  000A80  6D27               	negf	((___aldiv@divisor))&0ffh
  4456  000A82  0E00               	movlw	0
  4457  000A84  2328               	addwfc	((___aldiv@divisor+1))&0ffh
  4458  000A86  2329               	addwfc	((___aldiv@divisor+2))&0ffh
  4459  000A88  232A               	addwfc	((___aldiv@divisor+3))&0ffh
  4460                           	line	12
  4461  000A8A  0E01               	movlw	low(01h)
  4462  000A8C  6EE1               	movwf	(0+fsr1l),c
  4463                           	line	13
  4464                           	
  4465  000A8E                     l5432:		; BSR set to: 1
  4466                           
  4467                           	line	14
  4468  000A8E  AF26               	btfss	((___aldiv@dividend+3))&0ffh,7
  4469  000A90  EF4C  F005         	goto	u2831
  4470  000A94  EF4E  F005         	goto	u2830
  4471  000A98                     u2831:
  4472  000A98  EF58  F005         	goto	l5433
  4473  000A9C                     u2830:
  4474                           	line	15
  4475  000A9C  1F26               	comf	((___aldiv@dividend+3))&0ffh
  4476  000A9E  1F25               	comf	((___aldiv@dividend+2))&0ffh
  4477  000AA0  1F24               	comf	((___aldiv@dividend+1))&0ffh
  4478  000AA2  6D23               	negf	((___aldiv@dividend))&0ffh
  4479  000AA4  0E00               	movlw	0
  4480  000AA6  2324               	addwfc	((___aldiv@dividend+1))&0ffh
  4481  000AA8  2325               	addwfc	((___aldiv@dividend+2))&0ffh
  4482  000AAA  2326               	addwfc	((___aldiv@dividend+3))&0ffh
  4483                           	line	16
  4484  000AAC  0E01               	movlw	(01h)&0ffh
  4485  000AAE  1AE1               	xorwf	(0+fsr1l),c
  4486                           	line	17
  4487                           	
  4488  000AB0                     l5433:		; BSR set to: 1
  4489                           
  4490                           	line	18
  4491  000AB0  6B2B               	clrf	((___aldiv@quotient))&0ffh
  4492  000AB2  6B2C               	clrf	((___aldiv@quotient+1))&0ffh
  4493  000AB4  6B2D               	clrf	((___aldiv@quotient+2))&0ffh
  4494  000AB6  6B2E               	clrf	((___aldiv@quotient+3))&0ffh
  4495                           
  4496                           	line	19
  4497  000AB8  512A               	movf	((___aldiv@divisor+3))&0ffh,w
  4498  000ABA  1127               	iorwf ((___aldiv@divisor))&0ffh,w
  4499  000ABC  1128               	iorwf ((___aldiv@divisor+1))&0ffh,w
  4500  000ABE  1129               	iorwf ((___aldiv@divisor+2))&0ffh,w
  4501                           
  4502  000AC0  B4D8               	btfsc	status,2
  4503  000AC2  EF65  F005         	goto	u2841
  4504  000AC6  EF67  F005         	goto	u2840
  4505  000ACA                     u2841:
  4506  000ACA  EF9D  F005         	goto	l5434
  4507  000ACE                     u2840:
  4508                           	line	20
  4509  000ACE  0E01               	movlw	low(01h)
  4510  000AD0  6ED9               	movwf	(0+fsr2l),c
  4511                           	line	21
  4512  000AD2  EF71  F005         	goto	l5435
  4513                           	
  4514  000AD6                     l5436:		; BSR set to: 1
  4515                           
  4516                           	line	22
  4517  000AD6  90D8               	bcf	status,0
  4518  000AD8  3727               	rlcf	((___aldiv@divisor))&0ffh
  4519  000ADA  3728               	rlcf	((___aldiv@divisor+1))&0ffh
  4520  000ADC  3729               	rlcf	((___aldiv@divisor+2))&0ffh
  4521  000ADE  372A               	rlcf	((___aldiv@divisor+3))&0ffh
  4522                           	line	23
  4523  000AE0  2AD9               	incf	(0+fsr2l),c
  4524                           	line	24
  4525                           	
  4526  000AE2                     l5435:		; BSR set to: 1
  4527                           
  4528                           	line	21
  4529                           	
  4530  000AE2  AF2A               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
  4531  000AE4  EF76  F005         	goto	u2851
  4532  000AE8  EF78  F005         	goto	u2850
  4533  000AEC                     u2851:
  4534  000AEC  EF6B  F005         	goto	l5436
  4535  000AF0                     u2850:
  4536                           	
  4537  000AF0                     l5437:		; BSR set to: 1
  4538                           
  4539                           	line	25
  4540                           	
  4541  000AF0                     l5440:		; BSR set to: 1
  4542                           
  4543                           	line	26
  4544  000AF0  90D8               	bcf	status,0
  4545  000AF2  372B               	rlcf	((___aldiv@quotient))&0ffh
  4546  000AF4  372C               	rlcf	((___aldiv@quotient+1))&0ffh
  4547  000AF6  372D               	rlcf	((___aldiv@quotient+2))&0ffh
  4548  000AF8  372E               	rlcf	((___aldiv@quotient+3))&0ffh
  4549                           	line	27
  4550  000AFA  5127               	movf	((___aldiv@divisor))&0ffh,w
  4551  000AFC  5D23               	subwf	((___aldiv@dividend))&0ffh,w
  4552  000AFE  5128               	movf	((___aldiv@divisor+1))&0ffh,w
  4553  000B00  5924               	subwfb	((___aldiv@dividend+1))&0ffh,w
  4554  000B02  5129               	movf	((___aldiv@divisor+2))&0ffh,w
  4555  000B04  5925               	subwfb	((___aldiv@dividend+2))&0ffh,w
  4556  000B06  512A               	movf	((___aldiv@divisor+3))&0ffh,w
  4557  000B08  5926               	subwfb	((___aldiv@dividend+3))&0ffh,w
  4558  000B0A  A0D8               	btfss	status,0
  4559  000B0C  EF8A  F005         	goto	u2861
  4560  000B10  EF8C  F005         	goto	u2860
  4561  000B14                     u2861:
  4562  000B14  EF95  F005         	goto	l5441
  4563  000B18                     u2860:
  4564                           	line	28
  4565  000B18  5127               	movf	((___aldiv@divisor))&0ffh,w
  4566  000B1A  5F23               	subwf	((___aldiv@dividend))&0ffh
  4567  000B1C  5128               	movf	((___aldiv@divisor+1))&0ffh,w
  4568  000B1E  5B24               	subwfb	((___aldiv@dividend+1))&0ffh
  4569  000B20  5129               	movf	((___aldiv@divisor+2))&0ffh,w
  4570  000B22  5B25               	subwfb	((___aldiv@dividend+2))&0ffh
  4571  000B24  512A               	movf	((___aldiv@divisor+3))&0ffh,w
  4572  000B26  5B26               	subwfb	((___aldiv@dividend+3))&0ffh
  4573                           	line	29
  4574  000B28  812B               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
  4575                           	line	30
  4576                           	
  4577  000B2A                     l5441:		; BSR set to: 1
  4578                           
  4579                           	line	31
  4580  000B2A  90D8               	bcf	status,0
  4581  000B2C  332A               	rrcf	((___aldiv@divisor+3))&0ffh
  4582  000B2E  3329               	rrcf	((___aldiv@divisor+2))&0ffh
  4583  000B30  3328               	rrcf	((___aldiv@divisor+1))&0ffh
  4584  000B32  3327               	rrcf	((___aldiv@divisor))&0ffh
  4585                           	line	32
  4586  000B34  2ED9               	decfsz	(0+fsr2l),c
  4587                           	
  4588  000B36  EF78  F005         	goto	l5440
  4589                           	
  4590  000B3A                     l5439:		; BSR set to: 1
  4591                           
  4592                           	line	33
  4593                           	
  4594  000B3A                     l5434:		; BSR set to: 1
  4595                           
  4596                           	line	34
  4597  000B3A  50E1               	movf	(0+fsr1l),c,w
  4598  000B3C  B4D8               	btfsc	status,2
  4599  000B3E  EFA3  F005         	goto	u2871
  4600  000B42  EFA5  F005         	goto	u2870
  4601  000B46                     u2871:
  4602  000B46  EFAD  F005         	goto	l5442
  4603  000B4A                     u2870:
  4604                           	line	35
  4605  000B4A  1F2E               	comf	((___aldiv@quotient+3))&0ffh
  4606  000B4C  1F2D               	comf	((___aldiv@quotient+2))&0ffh
  4607  000B4E  1F2C               	comf	((___aldiv@quotient+1))&0ffh
  4608  000B50  6D2B               	negf	((___aldiv@quotient))&0ffh
  4609  000B52  0E00               	movlw	0
  4610  000B54  232C               	addwfc	((___aldiv@quotient+1))&0ffh
  4611  000B56  232D               	addwfc	((___aldiv@quotient+2))&0ffh
  4612  000B58  232E               	addwfc	((___aldiv@quotient+3))&0ffh
  4613                           	
  4614  000B5A                     l5442:		; BSR set to: 1
  4615                           
  4616                           	line	36
  4617  000B5A  C12B  F123         	movff	(___aldiv@quotient),(?___aldiv)
  4618  000B5E  C12C  F124         	movff	(___aldiv@quotient+1),(?___aldiv+1)
  4619  000B62  C12D  F125         	movff	(___aldiv@quotient+2),(?___aldiv+2)
  4620  000B66  C12E  F126         	movff	(___aldiv@quotient+3),(?___aldiv+3)
  4621  000B6A  EFB7  F005         	goto	l5431
  4622                           	line	37
  4623  000B6E                     l5431:
  4624                           			; BSR set to: 1
  4625                           
  4626  000B6E  0012               	return
  4627                           	opt stack 0
  4628                           GLOBAL __end_of___aldiv
  4629  000B70                     	__end_of___aldiv:
  4630                           	FNSIZE	___aldiv,4,8
  4631                           ; =============== function ___aldiv ends =======
                                 =====
  4632                           
  4633                           	signat	___aldiv,8316
  4634                           	global	_I2C_ISR
  4635                           	global	??_I2C_ISR
  4636                           	global	?_I2C_ISR
  4637                           
  4638                           ; *************** function _I2C_ISR ************
                                 *****
  4639                           ; Defined at:
  4640                           ;		line 32 in file "C:\Users\deepesh\Desktop\Fin
                                 al codes\I2CISR.c"
  4641                           ; Parameters:
  4642                           ;		None
  4643                           ; Auto variables:
  4644                           ;		None
  4645                           ; Return value:
  4646                           ;		type: void 
  4647                           ;		size: 0
  4648                           ; Registers used:
  4649                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  4650                           ; Tracked objects:
  4651                           ;		On entry : 0/0
  4652                           ;		On exit  : 0/0
  4653                           ;		Unchanged: FFFFFFF0/0
  4654                           ; Data sizes:
  4655                           ;		Autos:    0
  4656                           ;		Params:   0
  4657                           ;		Temp:     2
  4658                           ;		Total:    2
  4659                           ; This function calls:
  4660                           ;		Nothing
  4661                           ; This function is called by:
  4662                           ;		Interrupt level 2
  4663                           ; This function uses a non-reentrant model
  4664                           ; 
  4665                                   psect   text25,class=CODE,space=0,reloc=
                                 2
  4666                           
  4667                           	opt pm
  4668                           	file	"C:\Users\deepesh\Desktop\Final codes\I2CI
                                 SR.c"
  4669                           	line	32
  4670  000000                     	__size_of_I2C_ISR	equ	__end_of_I2C_ISR-_I2C_ISR
  4671                           ;I2CISR.c: 31: void interrupt I2C_ISR(void)
  4672                           ;I2CISR.c: 32: {
  4673                           	
  4674  0003F4                     _I2C_ISR:		; BSR set to: ?
  4675                           
  4676                           	opt stack 31
  4677                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  4678                           	global	int_func
  4679  000008                     int_func:
  4680                                   psect   intcode
  4681  000008  CFE9 F173          	movff	fsr0l+0,??_I2C_ISR+0
  4682  00000C  CFEA F174          	movff	fsr0h+0,??_I2C_ISR+1
  4683  000010  EFFA  F001         	goto	_I2C_ISR
  4684                                   psect   text25
  4685                           	line	33
  4686                           	
  4687  0003F4  AAA0               	btfss	((c:4000)),c,5	;volatile
  4688  0003F6  EFFF  F001         	goto	i2u2901
  4689  0003FA  EF01  F002         	goto	i2u2900
  4690  0003FE                     i2u2901:
  4691  0003FE  EFE1  F002         	goto	i2l4383
  4692  000402                     i2u2900:
  4693                           	
  4694  000402  AAA1               	btfss	((c:4001)),c,5	;volatile
  4695  000404  EF06  F002         	goto	i2u2911
  4696  000408  EF08  F002         	goto	i2u2910
  4697  00040C                     i2u2911:
  4698  00040C  EFE1  F002         	goto	i2l4383
  4699  000410                     i2u2910:
  4700                           	line	35
  4701                           ;I2CISR.c: 34: {
  4702                           ;I2CISR.c: 35: PIR2bits.SSP2IF=0;
  4703  000410  9AA1               	bcf	((c:4001)),c,5	;volatile
  4704                           	line	36
  4705                           ;I2CISR.c: 36: switch( I2C_state)
  4706  000412  EFCF  F002         	goto	i2l4385
  4707                           	line	38
  4708                           ;I2CISR.c: 37: {
  4709                           ;I2CISR.c: 38: case 0:
  4710                           	
  4711  000416                     i2l4386:		; BSR set to: 0
  4712                           
  4713                           	line	41
  4714                           ;I2CISR.c: 39: {
  4715                           ;I2CISR.c: 41: while( !TXSTA1bits.TRMT ) ;
  4716  000416  EF0D  F002         	goto	i2l4387
  4717                           	
  4718  00041A                     i2l4387:		; BSR set to: 0
  4719                           
  4720                           	
  4721  00041A  A2AC               	btfss	((c:4012)),c,1	;volatile
  4722  00041C  EF12  F002         	goto	i2u2921
  4723  000420  EF14  F002         	goto	i2u2920
  4724  000424                     i2u2921:
  4725  000424  EF0D  F002         	goto	i2l4387
  4726  000428                     i2u2920:
  4727                           	
  4728  000428                     i2l4389:		; BSR set to: 0
  4729                           
  4730                           	line	42
  4731                           ;I2CISR.c: 42: if(SSP2CON2bits.SEN==0)
  4732  000428  010E               	movlb	14	; () banked
  4733                           	
  4734  00042A  B1FE               	btfsc	((3838))&0ffh,0	;volatile
  4735  00042C  EF1A  F002         	goto	i2u2931
  4736  000430  EF1C  F002         	goto	i2u2930
  4737  000434                     i2u2931:
  4738  000434  EF25  F002         	goto	i2l4390
  4739  000438                     i2u2930:
  4740                           	line	44
  4741                           ;I2CISR.c: 43: {
  4742                           ;I2CISR.c: 44: SSP2BUF=arr[0] & 0xFE;
  4743  000438  5040               	movf	((c:64)),c,w
  4744  00043A  0BFE               	andlw	low(0FEh)
  4745  00043C  010F               	movlb	15	; () banked
  4746  00043E  6F02               	movwf	((3842))&0ffh	;volatile
  4747                           	line	46
  4748                           ;I2CISR.c: 45: {
  4749                           ;I2CISR.c: 46: I2C_state=1;
  4750  000440  0E01               	movlw	low(01h)
  4751  000442  0100               	movlb	0	; () banked
  4752  000444  6F6D               	movwf	((109))&0ffh
  4753                           	line	47
  4754                           ;I2CISR.c: 47: idx=1;
  4755  000446  0E01               	movlw	low(01h)
  4756  000448  6F68               	movwf	((104))&0ffh
  4757                           	line	51
  4758                           	
  4759  00044A                     i2l4390:		; BSR set to: ?
  4760                           
  4761                           	line	53
  4762                           ;I2CISR.c: 49: }
  4763                           ;I2CISR.c: 51: }
  4764                           ;I2CISR.c: 52: }
  4765                           ;I2CISR.c: 53: break;
  4766  00044A  EFE1  F002         	goto	i2l4383
  4767                           	line	54
  4768                           ;I2CISR.c: 54: case 1:
  4769                           	
  4770  00044E                     i2l4391:		; BSR set to: 0
  4771                           
  4772                           	line	57
  4773                           ;I2CISR.c: 55: {
  4774                           ;I2CISR.c: 57: while( !TXSTA1bits.TRMT ) ;
  4775  00044E  EF29  F002         	goto	i2l4392
  4776                           	
  4777  000452                     i2l4392:		; BSR set to: 0
  4778                           
  4779                           	
  4780  000452  A2AC               	btfss	((c:4012)),c,1	;volatile
  4781  000454  EF2E  F002         	goto	i2u2941
  4782  000458  EF30  F002         	goto	i2u2940
  4783  00045C                     i2u2941:
  4784  00045C  EF29  F002         	goto	i2l4392
  4785  000460                     i2u2940:
  4786                           	
  4787  000460                     i2l4394:		; BSR set to: 0
  4788                           
  4789                           	line	58
  4790                           ;I2CISR.c: 58: if(SSP2CON2bits.ACKSTAT==1)
  4791  000460  010E               	movlb	14	; () banked
  4792                           	
  4793  000462  ADFE               	btfss	((3838))&0ffh,6	;volatile
  4794  000464  EF36  F002         	goto	i2u2951
  4795  000468  EF38  F002         	goto	i2u2950
  4796  00046C                     i2u2951:
  4797  00046C  EF41  F002         	goto	i2l4395
  4798  000470                     i2u2950:
  4799                           	line	60
  4800                           ;I2CISR.c: 59: {
  4801                           ;I2CISR.c: 60: SSP2CON2bits.PEN=1;
  4802  000470  010E               	movlb	14	; () banked
  4803  000472  85FE               	bsf	((3838))&0ffh,2	;volatile
  4804                           	line	61
  4805                           ;I2CISR.c: 61: I2C_state=2;
  4806  000474  0E02               	movlw	low(02h)
  4807  000476  0100               	movlb	0	; () banked
  4808  000478  6F6D               	movwf	((109))&0ffh
  4809                           	line	62
  4810                           ;I2CISR.c: 62: I2Cerror=1;
  4811  00047A  0E01               	movlw	low(01h)
  4812  00047C  6F6F               	movwf	((111))&0ffh
  4813                           	line	63
  4814                           ;I2CISR.c: 63: }
  4815  00047E  EF25  F002         	goto	i2l4390
  4816                           	line	64
  4817                           	
  4818  000482                     i2l4395:		; BSR set to: 14
  4819                           
  4820                           ;I2CISR.c: 64: else if (idx<=I2Ctxlen)
  4821  000482  0100               	movlb	0	; () banked
  4822  000484  5168               	movf	((104))&0ffh,w
  4823  000486  5D6C               	subwf	((108))&0ffh,w
  4824  000488  A0D8               	btfss	status,0
  4825  00048A  EF49  F002         	goto	i2u2961
  4826  00048E  EF4B  F002         	goto	i2u2960
  4827  000492                     i2u2961:
  4828  000492  EF56  F002         	goto	i2l4397
  4829  000496                     i2u2960:
  4830                           	line	66
  4831  000496  5168               	movf	((104))&0ffh,w
  4832  000498  0F40               	addlw	low((c:64))
  4833  00049A  6EE9               	movwf	fsr0l
  4834  00049C  6AEA               	clrf	fsr0h
  4835  00049E  50EF               	movf	indf0,w
  4836  0004A0  010F               	movlb	15	; () banked
  4837  0004A2  6F02               	movwf	((3842))&0ffh	;volatile
  4838                           ;I2CISR.c: 65: {
  4839                           ;I2CISR.c: 66: SSP2BUF=arr[idx++];
  4840  0004A4  0100               	movlb	0	; () banked
  4841  0004A6  2B68               	incf	((104))&0ffh
  4842                           	line	67
  4843                           ;I2CISR.c: 67: }
  4844  0004A8  EF6B  F002         	goto	i2l4396
  4845                           	line	68
  4846                           	
  4847  0004AC                     i2l4397:		; BSR set to: 0
  4848                           
  4849                           ;I2CISR.c: 68: else if(arr[0] & 0x01)
  4850                           	
  4851  0004AC  A040               	btfss	((c:64)),c,(0)&7
  4852  0004AE  EF5B  F002         	goto	i2u2971
  4853  0004B2  EF5D  F002         	goto	i2u2970
  4854  0004B6                     i2u2971:
  4855  0004B6  EF64  F002         	goto	i2l4399
  4856  0004BA                     i2u2970:
  4857                           	line	72
  4858                           ;I2CISR.c: 69: {
  4859                           ;I2CISR.c: 72: SSP2CON2bits.RSEN=1;
  4860  0004BA  010E               	movlb	14	; () banked
  4861  0004BC  83FE               	bsf	((3838))&0ffh,1	;volatile
  4862                           	line	73
  4863                           ;I2CISR.c: 73: I2C_state= 3;
  4864  0004BE  0E03               	movlw	low(03h)
  4865  0004C0  0100               	movlb	0	; () banked
  4866  0004C2  6F6D               	movwf	((109))&0ffh
  4867                           	line	76
  4868                           ;I2CISR.c: 76: }
  4869  0004C4  EF6B  F002         	goto	i2l4396
  4870                           	line	77
  4871                           	
  4872  0004C8                     i2l4399:		; BSR set to: 0
  4873                           
  4874                           	line	79
  4875                           ;I2CISR.c: 77: else
  4876                           ;I2CISR.c: 78: {
  4877                           ;I2CISR.c: 79: SSP2CON2bits.PEN=1;
  4878  0004C8  010E               	movlb	14	; () banked
  4879  0004CA  85FE               	bsf	((3838))&0ffh,2	;volatile
  4880                           	line	80
  4881                           ;I2CISR.c: 80: I2C_state=2;
  4882  0004CC  0E02               	movlw	low(02h)
  4883  0004CE  0100               	movlb	0	; () banked
  4884  0004D0  6F6D               	movwf	((109))&0ffh
  4885                           	line	81
  4886                           ;I2CISR.c: 81: I2Cerror=1;
  4887  0004D2  0E01               	movlw	low(01h)
  4888  0004D4  6F6F               	movwf	((111))&0ffh
  4889                           	line	82
  4890                           	
  4891  0004D6                     i2l4400:		; BSR set to: 0
  4892                           
  4893                           	
  4894  0004D6                     i2l4398:		; BSR set to: 0
  4895                           
  4896                           	
  4897  0004D6                     i2l4396:		; BSR set to: 0
  4898                           
  4899                           	line	85
  4900                           ;I2CISR.c: 82: }
  4901                           ;I2CISR.c: 84: }
  4902                           ;I2CISR.c: 85: break;
  4903  0004D6  EFE1  F002         	goto	i2l4383
  4904                           	line	87
  4905                           ;I2CISR.c: 87: case 2:
  4906                           	
  4907  0004DA                     i2l4401:		; BSR set to: 0
  4908                           
  4909                           	line	90
  4910                           ;I2CISR.c: 88: {
  4911                           ;I2CISR.c: 90: while( !TXSTA1bits.TRMT ) ;
  4912  0004DA  EF6F  F002         	goto	i2l4402
  4913                           	
  4914  0004DE                     i2l4402:		; BSR set to: 0
  4915                           
  4916                           	
  4917  0004DE  A2AC               	btfss	((c:4012)),c,1	;volatile
  4918  0004E0  EF74  F002         	goto	i2u2981
  4919  0004E4  EF76  F002         	goto	i2u2980
  4920  0004E8                     i2u2981:
  4921  0004E8  EF6F  F002         	goto	i2l4402
  4922  0004EC                     i2u2980:
  4923                           	
  4924  0004EC                     i2l4404:		; BSR set to: 0
  4925                           
  4926                           	line	91
  4927                           ;I2CISR.c: 91: I2C_state=0;
  4928  0004EC  6B6D               	clrf	((109))&0ffh
  4929                           	line	93
  4930                           ;I2CISR.c: 92: }
  4931                           ;I2CISR.c: 93: break;
  4932  0004EE  EFE1  F002         	goto	i2l4383
  4933                           	line	94
  4934                           ;I2CISR.c: 94: case 3:
  4935                           	
  4936  0004F2                     i2l4405:		; BSR set to: 0
  4937                           
  4938                           	line	97
  4939                           ;I2CISR.c: 95: {
  4940                           ;I2CISR.c: 97: while( !TXSTA1bits.TRMT ) ;
  4941  0004F2  EF7B  F002         	goto	i2l4406
  4942                           	
  4943  0004F6                     i2l4406:		; BSR set to: 0
  4944                           
  4945                           	
  4946  0004F6  A2AC               	btfss	((c:4012)),c,1	;volatile
  4947  0004F8  EF80  F002         	goto	i2u2991
  4948  0004FC  EF82  F002         	goto	i2u2990
  4949  000500                     i2u2991:
  4950  000500  EF7B  F002         	goto	i2l4406
  4951  000504                     i2u2990:
  4952                           	
  4953  000504                     i2l4408:		; BSR set to: 0
  4954                           
  4955                           	line	98
  4956                           ;I2CISR.c: 98: SSP2BUF=arr[0];
  4957  000504  C040 FF02          	movff	(c:64),(3842)	;volatile
  4958                           	line	99
  4959                           ;I2CISR.c: 99: I2C_state=4 ;
  4960  000508  0E04               	movlw	low(04h)
  4961  00050A  6F6D               	movwf	((109))&0ffh
  4962                           	line	101
  4963                           ;I2CISR.c: 100: }
  4964                           ;I2CISR.c: 101: break;
  4965  00050C  EFE1  F002         	goto	i2l4383
  4966                           	line	102
  4967                           ;I2CISR.c: 102: case 4:
  4968                           	
  4969  000510                     i2l4409:		; BSR set to: 0
  4970                           
  4971                           	line	105
  4972                           ;I2CISR.c: 103: {
  4973                           ;I2CISR.c: 105: while( !TXSTA1bits.TRMT ) ;
  4974  000510  EF8A  F002         	goto	i2l4410
  4975                           	
  4976  000514                     i2l4410:		; BSR set to: 0
  4977                           
  4978                           	
  4979  000514  A2AC               	btfss	((c:4012)),c,1	;volatile
  4980  000516  EF8F  F002         	goto	i2u3001
  4981  00051A  EF91  F002         	goto	i2u3000
  4982  00051E                     i2u3001:
  4983  00051E  EF8A  F002         	goto	i2l4410
  4984  000522                     i2u3000:
  4985                           	
  4986  000522                     i2l4412:		; BSR set to: 0
  4987                           
  4988                           	line	106
  4989                           ;I2CISR.c: 106: if(SSP2CON2bits.ACKSTAT==1)
  4990  000522  010E               	movlb	14	; () banked
  4991                           	
  4992  000524  ADFE               	btfss	((3838))&0ffh,6	;volatile
  4993  000526  EF97  F002         	goto	i2u3011
  4994  00052A  EF99  F002         	goto	i2u3010
  4995  00052E                     i2u3011:
  4996  00052E  EFA2  F002         	goto	i2l4413
  4997  000532                     i2u3010:
  4998                           	line	108
  4999                           ;I2CISR.c: 107: {
  5000                           ;I2CISR.c: 108: SSP2CON2bits.PEN=1;
  5001  000532  010E               	movlb	14	; () banked
  5002  000534  85FE               	bsf	((3838))&0ffh,2	;volatile
  5003                           	line	109
  5004                           ;I2CISR.c: 109: I2C_state=2;
  5005  000536  0E02               	movlw	low(02h)
  5006  000538  0100               	movlb	0	; () banked
  5007  00053A  6F6D               	movwf	((109))&0ffh
  5008                           	line	110
  5009                           ;I2CISR.c: 110: I2Cerror=1;
  5010  00053C  0E01               	movlw	low(01h)
  5011  00053E  6F6F               	movwf	((111))&0ffh
  5012                           	line	111
  5013                           ;I2CISR.c: 111: }
  5014  000540  EF25  F002         	goto	i2l4390
  5015                           	line	112
  5016                           	
  5017  000544                     i2l4413:		; BSR set to: 14
  5018                           
  5019                           	line	114
  5020                           ;I2CISR.c: 112: else
  5021                           ;I2CISR.c: 113: {
  5022                           ;I2CISR.c: 114: SSP2CON2bits.RCEN=1;
  5023  000544  010E               	movlb	14	; () banked
  5024  000546  87FE               	bsf	((3838))&0ffh,3	;volatile
  5025                           	line	115
  5026                           ;I2CISR.c: 115: SSP2CON2bits.ACKDT=1;
  5027  000548  010E               	movlb	14	; () banked
  5028  00054A  8BFE               	bsf	((3838))&0ffh,5	;volatile
  5029                           	line	116
  5030                           ;I2CISR.c: 116: I2C_state=5;
  5031  00054C  0E05               	movlw	low(05h)
  5032  00054E  0100               	movlb	0	; () banked
  5033  000550  6F6D               	movwf	((109))&0ffh
  5034                           	line	117
  5035                           ;I2CISR.c: 117: idx=0;
  5036  000552  6B68               	clrf	((104))&0ffh
  5037                           	line	118
  5038                           	
  5039  000554                     i2l4414:		; BSR set to: 0
  5040                           
  5041                           	line	122
  5042                           ;I2CISR.c: 118: }
  5043                           ;I2CISR.c: 121: }
  5044                           ;I2CISR.c: 122: break;
  5045  000554  EFE1  F002         	goto	i2l4383
  5046                           	line	123
  5047                           ;I2CISR.c: 123: case 5:
  5048                           	
  5049  000558                     i2l4415:		; BSR set to: 0
  5050                           
  5051                           	line	126
  5052                           ;I2CISR.c: 124: {
  5053                           ;I2CISR.c: 126: while( !TXSTA1bits.TRMT ) ;
  5054  000558  EFAE  F002         	goto	i2l4416
  5055                           	
  5056  00055C                     i2l4416:		; BSR set to: 0
  5057                           
  5058                           	
  5059  00055C  A2AC               	btfss	((c:4012)),c,1	;volatile
  5060  00055E  EFB3  F002         	goto	i2u3021
  5061  000562  EFB5  F002         	goto	i2u3020
  5062  000566                     i2u3021:
  5063  000566  EFAE  F002         	goto	i2l4416
  5064  00056A                     i2u3020:
  5065                           	
  5066  00056A                     i2l4418:		; BSR set to: 0
  5067                           
  5068                           	line	130
  5069                           ;I2CISR.c: 128: {
  5070                           ;I2CISR.c: 130: arr[idx+3]=SSP2BUF;
  5071  00056A  5168               	movf	((104))&0ffh,w
  5072  00056C  0F43               	addlw	low((c:64)+03h)
  5073  00056E  6EE9               	movwf	fsr0l
  5074  000570  6AEA               	clrf	fsr0h
  5075  000572  010F               	movlb	15	; () banked
  5076  000574  CF02 FFEF          	movff	(3842),indf0	;volatile
  5077                           
  5078                           	line	131
  5079                           ;I2CISR.c: 131: idx++;
  5080  000578  0100               	movlb	0	; () banked
  5081  00057A  2B68               	incf	((104))&0ffh
  5082                           	line	132
  5083                           ;I2CISR.c: 132: if(idx==I2Crxlen)
  5084  00057C  516B               	movf	((107))&0ffh,w
  5085  00057E  6368               	cpfseq	((104))&0ffh
  5086  000580  EFC4  F002         	goto	i2u3031
  5087  000584  EFC6  F002         	goto	i2u3030
  5088  000588                     i2u3031:
  5089  000588  EF25  F002         	goto	i2l4390
  5090  00058C                     i2u3030:
  5091                           	line	134
  5092                           ;I2CISR.c: 133: {
  5093                           ;I2CISR.c: 134: SSP2CON2bits.PEN=1;
  5094  00058C  010E               	movlb	14	; () banked
  5095  00058E  85FE               	bsf	((3838))&0ffh,2	;volatile
  5096                           	line	135
  5097                           ;I2CISR.c: 135: I2C_state=2;
  5098  000590  0E02               	movlw	low(02h)
  5099  000592  0100               	movlb	0	; () banked
  5100  000594  6F6D               	movwf	((109))&0ffh
  5101                           	line	136
  5102                           ;I2CISR.c: 136: I2CRx=1;
  5103  000596  0E01               	movlw	low(01h)
  5104  000598  6F6E               	movwf	((110))&0ffh
  5105                           	line	137
  5106                           	
  5107  00059A                     i2l4419:		; BSR set to: 0
  5108                           
  5109                           	line	154
  5110                           ;I2CISR.c: 137: }
  5111                           ;I2CISR.c: 138: }
  5112                           ;I2CISR.c: 153: }
  5113                           ;I2CISR.c: 154: break;
  5114  00059A  EFE1  F002         	goto	i2l4383
  5115                           	line	36
  5116                           	
  5117  00059E                     i2l4385:		; BSR set to: ?
  5118                           
  5119  00059E  0100               	movlb	0	; () banked
  5120  0005A0  516D               	movf	((109))&0ffh,w
  5121  0005A2  0A00               	xorlw	0 ^ 0
  5122  0005A4  E101 D737          	bz	i2l4386
  5123  0005A8  0A01               	xorlw	1 ^ 0
  5124  0005AA  E101 D750          	bz	i2l4391
  5125  0005AE  0A03               	xorlw	2 ^ 1
  5126  0005B0  E094               	bz	i2l4401
  5127  0005B2  0A01               	xorlw	3 ^ 2
  5128  0005B4  E09E               	bz	i2l4405
  5129  0005B6  0A07               	xorlw	4 ^ 3
  5130  0005B8  E0AB               	bz	i2l4409
  5131  0005BA  0A01               	xorlw	5 ^ 4
  5132  0005BC  E0CD               	bz	i2l4415
  5133  0005BE  EFE1  F002         	goto	i2l4383
  5134                           
  5135                           	line	156
  5136                           	
  5137  0005C2                     i2l4383:		; BSR set to: ?
  5138                           
  5139                           	line	157
  5140                           ;I2CISR.c: 156: }
  5141                           ;I2CISR.c: 157: }
  5142  0005C2                     i2l4382:
  5143                           			; BSR set to: ?
  5144                           
  5145  0005C2  C174  FFEA         	movff	??_I2C_ISR+1,fsr0h+0
  5146  0005C6  C173  FFE9         	movff	??_I2C_ISR+0,fsr0l+0
  5147  0005CA  0011               	retfie f
  5148                           	opt stack 0
  5149                           GLOBAL __end_of_I2C_ISR
  5150  0005CC                     	__end_of_I2C_ISR:
  5151                           	FNSIZE	_I2C_ISR,2,0
  5152                           ; =============== function _I2C_ISR ends =======
                                 =====
  5153                           
  5154                           	signat	_I2C_ISR,88
  5155                           	FNCALL	_main,_UART_Init
  5156                           	FNCALL	_main,_ADC_Init
  5157                           	FNCALL	_main,_sprintf
  5158                           	FNCALL	_main,_Print_UART
  5159                           	FNCALL	_main,_LCD_Init
  5160                           	FNCALL	_main,_I2C_Init
  5161                           	FNCALL	_main,_UART2_Init
  5162                           	FNCALL	_main,_Print_Str_LCD
  5163                           	FNCALL	_main,_Read_adc
  5164                           	FNCALL	_main,_Temp_Calc
  5165                           	FNCALL	_main,_Write_IO
  5166                           	FNCALL	_main,_DelayMs
  5167                           	FNCALL	_main,_Print_Num_LCD
  5168                           	FNCALL	_main,_Uart2_Temp
  5169                           	FNCALL	_main,_Clr_LCD
  5170                           	FNCALL	_Print_Str_LCD,_Update_LCD
  5171                           	FNCALL	_Read_adc,_SPI_Rx_Tx
  5172                           	FNCALL	_UART2_Init,___lldiv
  5173                           	FNCALL	_UART2_Init,_sprintf
  5174                           	FNCALL	_UART2_Init,_Print_UART
  5175                           	FNCALL	_Temp_Calc,_Scale
  5176                           	FNCALL	_Uart2_Temp,_Uart2_Write
  5177                           	FNCALL	_Print_Num_LCD,_Update_LCD
  5178                           	FNCALL	_ADC_Init,_DelayMs
  5179                           	FNCALL	_ADC_Init,_SPI_Rx_Tx
  5180                           	FNCALL	_ADC_Init,_sprintf
  5181                           	FNCALL	_ADC_Init,_Print_UART
  5182                           	FNCALL	_UART_Init,___lldiv
  5183                           	FNCALL	_UART_Init,_sprintf
  5184                           	FNCALL	_UART_Init,_Print_UART
  5185                           	FNCALL	_sprintf,___lwdiv
  5186                           	FNCALL	_sprintf,___lwmod
  5187                           	FNCALL	_Scale,___lmul
  5188                           	FNCALL	_Scale,___aldiv
  5189                           	FNROOT	_main
  5190                           	FNCALL	intlevel2,_I2C_ISR
  5191                           	global	intlevel2
  5192                           	FNROOT	intlevel2
  5193                           ;	FNARG	___lwmod,___lwdiv
  5194                           ;	FNARG	___aldiv,___lmul
  5195                           	global	F5583
  5196                                   psect   text26,class=CODE,space=0,reloc=
                                 2
  5197  000000                     F5583  equ     112
  5198                           
  5199                           	opt pm
  5200                           
  5201                           	DABS	1,112,102	;F5583
  5202                           	global	_SCnt
  5203                           	global	_SCnt
  5204  000000                     _SCnt  equ     214
  5205                           
  5206                           	DABS	1,214,2	;_SCnt
  5207                           	global	_ZCnt
  5208                           	global	_ZCnt
  5209  000000                     _ZCnt  equ     216
  5210                           
  5211                           	DABS	1,216,2	;_ZCnt
  5212                                   psect   idata,class=CODE,space=0
  5213                           	file	"C:\Users\deepesh\Desktop\Final codes\lcd.
                                 c"
  5214                           	line	37
  5215                           
  5216                           ;initializer for F5583
  5217  000050  003F               	dw	(03Fh)&0ffffh
  5218  000052  0006               	dw	(06h)&0ffffh
  5219  000054  005B               	dw	(05Bh)&0ffffh
  5220  000056  004F               	dw	(04Fh)&0ffffh
  5221  000058  0066               	dw	(066h)&0ffffh
  5222  00005A  006D               	dw	(06Dh)&0ffffh
  5223  00005C  007D               	dw	(07Dh)&0ffffh
  5224  00005E  0007               	dw	(07h)&0ffffh
  5225  000060  007F               	dw	(07Fh)&0ffffh
  5226  000062  006F               	dw	(06Fh)&0ffffh
  5227  000064  0077               	dw	(077h)&0ffffh
  5228  000066  007C               	dw	(07Ch)&0ffffh
  5229  000068  0039               	dw	(039h)&0ffffh
  5230  00006A  005E               	dw	(05Eh)&0ffffh
  5231  00006C  0079               	dw	(079h)&0ffffh
  5232  00006E  0071               	dw	(071h)&0ffffh
  5233  000070  0000               	dw	(0)&0ffffh
  5234  000072  0000               	dw	(0)&0ffffh
  5235  000074  0000               	dw	(0)&0ffffh
  5236  000076  0000               	dw	(0)&0ffffh
  5237  000078  0000               	dw	(0)&0ffffh
  5238  00007A  0000               	dw	(0)&0ffffh
  5239  00007C  0000               	dw	(0)&0ffffh
  5240  00007E  006F               	dw	(06Fh)&0ffffh
  5241  000080  0076               	dw	(076h)&0ffffh
  5242  000082  0030               	dw	(030h)&0ffffh
  5243  000084  000E               	dw	(0Eh)&0ffffh
  5244  000086  0070               	dw	(070h)&0ffffh
  5245  000088  0038               	dw	(038h)&0ffffh
  5246  00008A  001D               	dw	(01Dh)&0ffffh
  5247  00008C  001C               	dw	(01Ch)&0ffffh
  5248  00008E  005C               	dw	(05Ch)&0ffffh
  5249  000090  0073               	dw	(073h)&0ffffh
  5250  000092  0063               	dw	(063h)&0ffffh
  5251  000094  0050               	dw	(050h)&0ffffh
  5252  000096  006D               	dw	(06Dh)&0ffffh
  5253  000098  0078               	dw	(078h)&0ffffh
  5254  00009A  003E               	dw	(03Eh)&0ffffh
  5255  00009C  001C               	dw	(01Ch)&0ffffh
  5256  00009E  0055               	dw	(055h)&0ffffh
  5257  0000A0  0076               	dw	(076h)&0ffffh
  5258  0000A2  006E               	dw	(06Eh)&0ffffh
  5259  0000A4  005B               	dw	(05Bh)&0ffffh
  5260  0000A6  00                 	db   0
  5261  0000A7  00                 	db   0
  5262  0000A8  00                 	db   0
  5263  0000A9  00                 	db   0
  5264  0000AA  00                 	db   0
  5265  0000AB  00                 	db   0
  5266  0000AC  00                 	db   0
  5267  0000AD  00                 	db   0
  5268  0000AE  00                 	db   0
  5269  0000AF  00                 	db   0
  5270  0000B0  00                 	db   0
  5271  0000B1  00                 	db   0
  5272  0000B2  00                 	db   0
  5273  0000B3  00                 	db   0
  5274  0000B4  00                 	db   0
  5275  0000B5  00                 	db   0
  5276                           	file	"C:\Users\deepesh\Desktop\Final codes\def.
                                 c"
  5277                           	line	8
  5278                           
  5279                           ;initializer for _SCnt
  5280  0000B6  4B4C               	dw	(04B4Ch)&0ffffh
  5281                           
  5282                           ;initializer for _ZCnt
  5283  0000B8  0002               	dw	(02h)&0ffffh
  5284                                   psect   mediumconst,class=MEDIUMCONST,sp
                                 ace=0,reloc=2
  5285                           	global	_RType
  5286                           	file	"C:\Users\deepesh\Desktop\Final codes\temp
                                 .c"
  5287                           	line	13
  5288  007764                     _RType:
  5289  007764  1C40               	dw	(01C40h)&0ffffh
  5290  007766  1C4C               	dw	(01C4Ch)&0ffffh
  5291  007768  1C58               	dw	(01C58h)&0ffffh
  5292  00776A  1C64               	dw	(01C64h)&0ffffh
  5293  00776C  1C70               	dw	(01C70h)&0ffffh
  5294  00776E  1C7C               	dw	(01C7Ch)&0ffffh
  5295  007770  1C88               	dw	(01C88h)&0ffffh
  5296  007772  1C94               	dw	(01C94h)&0ffffh
  5297  007774  1CA0               	dw	(01CA0h)&0ffffh
  5298  007776  1CAC               	dw	(01CACh)&0ffffh
  5299  007778  1CB8               	dw	(01CB8h)&0ffffh
  5300  00777A  1CC4               	dw	(01CC4h)&0ffffh
  5301  00777C  1CD0               	dw	(01CD0h)&0ffffh
  5302  00777E  1CDD               	dw	(01CDDh)&0ffffh
  5303  007780  1CE9               	dw	(01CE9h)&0ffffh
  5304  007782  1CF5               	dw	(01CF5h)&0ffffh
  5305  007784  1D01               	dw	(01D01h)&0ffffh
  5306  007786  1D0D               	dw	(01D0Dh)&0ffffh
  5307  007788  1D19               	dw	(01D19h)&0ffffh
  5308  00778A  1D25               	dw	(01D25h)&0ffffh
  5309  00778C  1D31               	dw	(01D31h)&0ffffh
  5310  00778E  1D3D               	dw	(01D3Dh)&0ffffh
  5311  007790  1D4A               	dw	(01D4Ah)&0ffffh
  5312  007792  1D56               	dw	(01D56h)&0ffffh
  5313  007794  1D62               	dw	(01D62h)&0ffffh
  5314  007796  1D6E               	dw	(01D6Eh)&0ffffh
  5315  007798  1D7A               	dw	(01D7Ah)&0ffffh
  5316  00779A  1D86               	dw	(01D86h)&0ffffh
  5317  00779C  1D92               	dw	(01D92h)&0ffffh
  5318  00779E  1D9F               	dw	(01D9Fh)&0ffffh
  5319  0077A0  1DAB               	dw	(01DABh)&0ffffh
  5320  0077A2  1DB7               	dw	(01DB7h)&0ffffh
  5321  0077A4  1DC3               	dw	(01DC3h)&0ffffh
  5322  0077A6  1DCF               	dw	(01DCFh)&0ffffh
  5323  0077A8  1DDC               	dw	(01DDCh)&0ffffh
  5324  0077AA  1DE8               	dw	(01DE8h)&0ffffh
  5325  0077AC  1DF4               	dw	(01DF4h)&0ffffh
  5326  0077AE  1E00               	dw	(01E00h)&0ffffh
  5327  0077B0  1E0C               	dw	(01E0Ch)&0ffffh
  5328  0077B2  1E19               	dw	(01E19h)&0ffffh
  5329  0077B4  1E25               	dw	(01E25h)&0ffffh
  5330  0077B6  1E31               	dw	(01E31h)&0ffffh
  5331  0077B8  1E3D               	dw	(01E3Dh)&0ffffh
  5332  0077BA  1E49               	dw	(01E49h)&0ffffh
  5333  0077BC  1E56               	dw	(01E56h)&0ffffh
  5334  0077BE  1E62               	dw	(01E62h)&0ffffh
  5335  0077C0  1E6E               	dw	(01E6Eh)&0ffffh
  5336  0077C2  1E7A               	dw	(01E7Ah)&0ffffh
  5337  0077C4  1E87               	dw	(01E87h)&0ffffh
  5338  0077C6  1E93               	dw	(01E93h)&0ffffh
  5339  0077C8  1E9F               	dw	(01E9Fh)&0ffffh
  5340  0077CA  1EAB               	dw	(01EABh)&0ffffh
  5341  0077CC  1EB8               	dw	(01EB8h)&0ffffh
  5342  0077CE  1EC4               	dw	(01EC4h)&0ffffh
  5343  0077D0  1ED0               	dw	(01ED0h)&0ffffh
  5344  0077D2  1EDD               	dw	(01EDDh)&0ffffh
  5345  0077D4  1EE9               	dw	(01EE9h)&0ffffh
  5346  0077D6  1EF5               	dw	(01EF5h)&0ffffh
  5347  0077D8  1F02               	dw	(01F02h)&0ffffh
  5348  0077DA  1F0E               	dw	(01F0Eh)&0ffffh
  5349  0077DC  1F1A               	dw	(01F1Ah)&0ffffh
  5350  0077DE  1F26               	dw	(01F26h)&0ffffh
  5351  0077E0  1F33               	dw	(01F33h)&0ffffh
  5352  0077E2  1F3F               	dw	(01F3Fh)&0ffffh
  5353  0077E4  1F4B               	dw	(01F4Bh)&0ffffh
  5354  0077E6  1F58               	dw	(01F58h)&0ffffh
  5355  0077E8  1F64               	dw	(01F64h)&0ffffh
  5356  0077EA  1F70               	dw	(01F70h)&0ffffh
  5357  0077EC  1F7D               	dw	(01F7Dh)&0ffffh
  5358  0077EE  1F89               	dw	(01F89h)&0ffffh
  5359  0077F0  1F96               	dw	(01F96h)&0ffffh
  5360  0077F2  1FA2               	dw	(01FA2h)&0ffffh
  5361  0077F4  1FAE               	dw	(01FAEh)&0ffffh
  5362  0077F6  1FBB               	dw	(01FBBh)&0ffffh
  5363  0077F8  1FC7               	dw	(01FC7h)&0ffffh
  5364  0077FA  1FD3               	dw	(01FD3h)&0ffffh
  5365  0077FC  1FE0               	dw	(01FE0h)&0ffffh
  5366  0077FE  1FEC               	dw	(01FECh)&0ffffh
  5367  007800  1FF9               	dw	(01FF9h)&0ffffh
  5368  007802  2005               	dw	(02005h)&0ffffh
  5369  007804  2011               	dw	(02011h)&0ffffh
  5370  007806  201E               	dw	(0201Eh)&0ffffh
  5371  007808  202A               	dw	(0202Ah)&0ffffh
  5372  00780A  2037               	dw	(02037h)&0ffffh
  5373  00780C  2043               	dw	(02043h)&0ffffh
  5374  00780E  2050               	dw	(02050h)&0ffffh
  5375  007810  205C               	dw	(0205Ch)&0ffffh
  5376  007812  2068               	dw	(02068h)&0ffffh
  5377  007814  2075               	dw	(02075h)&0ffffh
  5378  007816  2081               	dw	(02081h)&0ffffh
  5379  007818  208E               	dw	(0208Eh)&0ffffh
  5380  00781A  209A               	dw	(0209Ah)&0ffffh
  5381  00781C  20A7               	dw	(020A7h)&0ffffh
  5382  00781E  20B3               	dw	(020B3h)&0ffffh
  5383  007820  20C0               	dw	(020C0h)&0ffffh
  5384  007822  20CC               	dw	(020CCh)&0ffffh
  5385  007824  20D9               	dw	(020D9h)&0ffffh
  5386  007826  20E5               	dw	(020E5h)&0ffffh
  5387  007828  20F2               	dw	(020F2h)&0ffffh
  5388  00782A  20FE               	dw	(020FEh)&0ffffh
  5389  00782C  210B               	dw	(0210Bh)&0ffffh
  5390  00782E  2117               	dw	(02117h)&0ffffh
  5391  007830  2124               	dw	(02124h)&0ffffh
  5392  007832  2130               	dw	(02130h)&0ffffh
  5393  007834  213D               	dw	(0213Dh)&0ffffh
  5394  007836  2149               	dw	(02149h)&0ffffh
  5395  007838  2156               	dw	(02156h)&0ffffh
  5396  00783A  2162               	dw	(02162h)&0ffffh
  5397  00783C  216F               	dw	(0216Fh)&0ffffh
  5398  00783E  217B               	dw	(0217Bh)&0ffffh
  5399  007840  2188               	dw	(02188h)&0ffffh
  5400  007842  2195               	dw	(02195h)&0ffffh
  5401  007844  21A1               	dw	(021A1h)&0ffffh
  5402  007846  21AE               	dw	(021AEh)&0ffffh
  5403  007848  21BA               	dw	(021BAh)&0ffffh
  5404  00784A  21C7               	dw	(021C7h)&0ffffh
  5405  00784C  21D3               	dw	(021D3h)&0ffffh
  5406  00784E  21E0               	dw	(021E0h)&0ffffh
  5407  007850  21ED               	dw	(021EDh)&0ffffh
  5408  007852  21F9               	dw	(021F9h)&0ffffh
  5409  007854  2206               	dw	(02206h)&0ffffh
  5410  007856  2212               	dw	(02212h)&0ffffh
  5411  007858  221F               	dw	(0221Fh)&0ffffh
  5412  00785A  222C               	dw	(0222Ch)&0ffffh
  5413  00785C  2238               	dw	(02238h)&0ffffh
  5414  00785E  2245               	dw	(02245h)&0ffffh
  5415  007860  2251               	dw	(02251h)&0ffffh
  5416  007862  225E               	dw	(0225Eh)&0ffffh
  5417  007864  226B               	dw	(0226Bh)&0ffffh
  5418  007866  2277               	dw	(02277h)&0ffffh
  5419  007868  2284               	dw	(02284h)&0ffffh
  5420  00786A  2291               	dw	(02291h)&0ffffh
  5421  00786C  229D               	dw	(0229Dh)&0ffffh
  5422  00786E  22AA               	dw	(022AAh)&0ffffh
  5423  007870  22B7               	dw	(022B7h)&0ffffh
  5424  007872  22C3               	dw	(022C3h)&0ffffh
  5425  007874  22D0               	dw	(022D0h)&0ffffh
  5426  007876  22DD               	dw	(022DDh)&0ffffh
  5427  007878  22E9               	dw	(022E9h)&0ffffh
  5428  00787A  22F6               	dw	(022F6h)&0ffffh
  5429  00787C  2303               	dw	(02303h)&0ffffh
  5430  00787E  230F               	dw	(0230Fh)&0ffffh
  5431  007880  231C               	dw	(0231Ch)&0ffffh
  5432  007882  2329               	dw	(02329h)&0ffffh
  5433  007884  2336               	dw	(02336h)&0ffffh
  5434  007886  2342               	dw	(02342h)&0ffffh
  5435  007888  234F               	dw	(0234Fh)&0ffffh
  5436  00788A  235C               	dw	(0235Ch)&0ffffh
  5437  00788C  2369               	dw	(02369h)&0ffffh
  5438  00788E  2375               	dw	(02375h)&0ffffh
  5439  007890  2382               	dw	(02382h)&0ffffh
  5440  007892  238F               	dw	(0238Fh)&0ffffh
  5441  007894  239B               	dw	(0239Bh)&0ffffh
  5442  007896  23A8               	dw	(023A8h)&0ffffh
  5443  007898  23B5               	dw	(023B5h)&0ffffh
  5444  00789A  23C2               	dw	(023C2h)&0ffffh
  5445  00789C  23CF               	dw	(023CFh)&0ffffh
  5446  00789E  23DB               	dw	(023DBh)&0ffffh
  5447  0078A0  23E8               	dw	(023E8h)&0ffffh
  5448  0078A2  23F5               	dw	(023F5h)&0ffffh
  5449  0078A4  2402               	dw	(02402h)&0ffffh
  5450  0078A6  240E               	dw	(0240Eh)&0ffffh
  5451  0078A8  241B               	dw	(0241Bh)&0ffffh
  5452  0078AA  2428               	dw	(02428h)&0ffffh
  5453  0078AC  2435               	dw	(02435h)&0ffffh
  5454  0078AE  2442               	dw	(02442h)&0ffffh
  5455  0078B0  244E               	dw	(0244Eh)&0ffffh
  5456  0078B2  245B               	dw	(0245Bh)&0ffffh
  5457  0078B4  2468               	dw	(02468h)&0ffffh
  5458  0078B6  2475               	dw	(02475h)&0ffffh
  5459  0078B8  2482               	dw	(02482h)&0ffffh
  5460  0078BA  248F               	dw	(0248Fh)&0ffffh
  5461  0078BC  249B               	dw	(0249Bh)&0ffffh
  5462  0078BE  24A8               	dw	(024A8h)&0ffffh
  5463  0078C0  24B5               	dw	(024B5h)&0ffffh
  5464  0078C2  24C2               	dw	(024C2h)&0ffffh
  5465  0078C4  24CF               	dw	(024CFh)&0ffffh
  5466  0078C6  24DC               	dw	(024DCh)&0ffffh
  5467  0078C8  24E9               	dw	(024E9h)&0ffffh
  5468  0078CA  24F5               	dw	(024F5h)&0ffffh
  5469  0078CC  2502               	dw	(02502h)&0ffffh
  5470  0078CE  250F               	dw	(0250Fh)&0ffffh
  5471  0078D0  251C               	dw	(0251Ch)&0ffffh
  5472  0078D2  2529               	dw	(02529h)&0ffffh
  5473  0078D4  2536               	dw	(02536h)&0ffffh
  5474  0078D6  2543               	dw	(02543h)&0ffffh
  5475  0078D8  2550               	dw	(02550h)&0ffffh
  5476  0078DA  255D               	dw	(0255Dh)&0ffffh
  5477  0078DC  256A               	dw	(0256Ah)&0ffffh
  5478  0078DE  2576               	dw	(02576h)&0ffffh
  5479  0078E0  2583               	dw	(02583h)&0ffffh
  5480  0078E2  2590               	dw	(02590h)&0ffffh
  5481  0078E4  259D               	dw	(0259Dh)&0ffffh
  5482  0078E6  25AA               	dw	(025AAh)&0ffffh
  5483  0078E8  25B7               	dw	(025B7h)&0ffffh
  5484  0078EA  25C4               	dw	(025C4h)&0ffffh
  5485  0078EC  25D1               	dw	(025D1h)&0ffffh
  5486  0078EE  25DE               	dw	(025DEh)&0ffffh
  5487  0078F0  25EB               	dw	(025EBh)&0ffffh
  5488  0078F2  25F8               	dw	(025F8h)&0ffffh
  5489  0078F4  2605               	dw	(02605h)&0ffffh
  5490  0078F6  2612               	dw	(02612h)&0ffffh
  5491  0078F8  261F               	dw	(0261Fh)&0ffffh
  5492  0078FA  262C               	dw	(0262Ch)&0ffffh
  5493  0078FC  2639               	dw	(02639h)&0ffffh
  5494  0078FE  2646               	dw	(02646h)&0ffffh
  5495  007900  2653               	dw	(02653h)&0ffffh
  5496  007902  2660               	dw	(02660h)&0ffffh
  5497  007904  266D               	dw	(0266Dh)&0ffffh
  5498  007906  267A               	dw	(0267Ah)&0ffffh
  5499  007908  2687               	dw	(02687h)&0ffffh
  5500  00790A  2694               	dw	(02694h)&0ffffh
  5501  00790C  26A1               	dw	(026A1h)&0ffffh
  5502  00790E  26AE               	dw	(026AEh)&0ffffh
  5503  007910  26BB               	dw	(026BBh)&0ffffh
  5504  007912  26C8               	dw	(026C8h)&0ffffh
  5505  007914  26D5               	dw	(026D5h)&0ffffh
  5506  007916  26E2               	dw	(026E2h)&0ffffh
  5507  007918  26EF               	dw	(026EFh)&0ffffh
  5508  00791A  26FC               	dw	(026FCh)&0ffffh
  5509  00791C  2709               	dw	(02709h)&0ffffh
  5510  00791E  2716               	dw	(02716h)&0ffffh
  5511  007920  2723               	dw	(02723h)&0ffffh
  5512  007922  2730               	dw	(02730h)&0ffffh
  5513  007924  273E               	dw	(0273Eh)&0ffffh
  5514  007926  274B               	dw	(0274Bh)&0ffffh
  5515  007928  2758               	dw	(02758h)&0ffffh
  5516  00792A  2765               	dw	(02765h)&0ffffh
  5517  00792C  2772               	dw	(02772h)&0ffffh
  5518  00792E  277F               	dw	(0277Fh)&0ffffh
  5519  007930  278C               	dw	(0278Ch)&0ffffh
  5520  007932  2799               	dw	(02799h)&0ffffh
  5521  007934  27A6               	dw	(027A6h)&0ffffh
  5522  007936  27B3               	dw	(027B3h)&0ffffh
  5523  007938  27C1               	dw	(027C1h)&0ffffh
  5524  00793A  27CE               	dw	(027CEh)&0ffffh
  5525  00793C  27DB               	dw	(027DBh)&0ffffh
  5526  00793E  27E8               	dw	(027E8h)&0ffffh
  5527  007940  27F5               	dw	(027F5h)&0ffffh
  5528  007942  2802               	dw	(02802h)&0ffffh
  5529  007944  280F               	dw	(0280Fh)&0ffffh
  5530  007946  281C               	dw	(0281Ch)&0ffffh
  5531  007948  282A               	dw	(0282Ah)&0ffffh
  5532  00794A  2837               	dw	(02837h)&0ffffh
  5533  00794C  2844               	dw	(02844h)&0ffffh
  5534  00794E  2851               	dw	(02851h)&0ffffh
  5535  007950  285E               	dw	(0285Eh)&0ffffh
  5536  007952  286B               	dw	(0286Bh)&0ffffh
  5537  007954  2879               	dw	(02879h)&0ffffh
  5538  007956  2886               	dw	(02886h)&0ffffh
  5539  007958  2893               	dw	(02893h)&0ffffh
  5540  00795A  28A0               	dw	(028A0h)&0ffffh
  5541  00795C  28AD               	dw	(028ADh)&0ffffh
  5542  00795E  28BB               	dw	(028BBh)&0ffffh
  5543  007960  28C8               	dw	(028C8h)&0ffffh
  5544  007962  28D5               	dw	(028D5h)&0ffffh
  5545  007964  28E2               	dw	(028E2h)&0ffffh
  5546  007966  28F0               	dw	(028F0h)&0ffffh
  5547  007968  28FD               	dw	(028FDh)&0ffffh
  5548  00796A  290A               	dw	(0290Ah)&0ffffh
  5549  00796C  2917               	dw	(02917h)&0ffffh
  5550  00796E  2924               	dw	(02924h)&0ffffh
  5551  007970  2932               	dw	(02932h)&0ffffh
  5552  007972  293F               	dw	(0293Fh)&0ffffh
  5553  007974  294C               	dw	(0294Ch)&0ffffh
  5554  007976  2959               	dw	(02959h)&0ffffh
  5555  007978  2967               	dw	(02967h)&0ffffh
  5556  00797A  2974               	dw	(02974h)&0ffffh
  5557  00797C  2981               	dw	(02981h)&0ffffh
  5558  00797E  298E               	dw	(0298Eh)&0ffffh
  5559  007980  299C               	dw	(0299Ch)&0ffffh
  5560  007982  29A9               	dw	(029A9h)&0ffffh
  5561  007984  29B6               	dw	(029B6h)&0ffffh
  5562  007986  29C4               	dw	(029C4h)&0ffffh
  5563  007988  29D1               	dw	(029D1h)&0ffffh
  5564  00798A  29DE               	dw	(029DEh)&0ffffh
  5565  00798C  29EB               	dw	(029EBh)&0ffffh
  5566  00798E  29F9               	dw	(029F9h)&0ffffh
  5567  007990  2A06               	dw	(02A06h)&0ffffh
  5568  007992  2A13               	dw	(02A13h)&0ffffh
  5569  007994  2A21               	dw	(02A21h)&0ffffh
  5570  007996  2A2E               	dw	(02A2Eh)&0ffffh
  5571  007998  2A3B               	dw	(02A3Bh)&0ffffh
  5572  00799A  2A49               	dw	(02A49h)&0ffffh
  5573  00799C  2A56               	dw	(02A56h)&0ffffh
  5574  00799E  2A63               	dw	(02A63h)&0ffffh
  5575  0079A0  2A71               	dw	(02A71h)&0ffffh
  5576  0079A2  2A7E               	dw	(02A7Eh)&0ffffh
  5577  0079A4  2A8B               	dw	(02A8Bh)&0ffffh
  5578  0079A6  2A99               	dw	(02A99h)&0ffffh
  5579  0079A8  2AA6               	dw	(02AA6h)&0ffffh
  5580  0079AA  2AB4               	dw	(02AB4h)&0ffffh
  5581  0079AC  2AC1               	dw	(02AC1h)&0ffffh
  5582  0079AE  2ACE               	dw	(02ACEh)&0ffffh
  5583  0079B0  2ADC               	dw	(02ADCh)&0ffffh
  5584  0079B2  2AE9               	dw	(02AE9h)&0ffffh
  5585  0079B4  2AF6               	dw	(02AF6h)&0ffffh
  5586  0079B6  2B04               	dw	(02B04h)&0ffffh
  5587  0079B8  2B11               	dw	(02B11h)&0ffffh
  5588  0079BA  2B1F               	dw	(02B1Fh)&0ffffh
  5589  0079BC  2B2C               	dw	(02B2Ch)&0ffffh
  5590  0079BE  2B39               	dw	(02B39h)&0ffffh
  5591  0079C0  2B47               	dw	(02B47h)&0ffffh
  5592  0079C2  2B54               	dw	(02B54h)&0ffffh
  5593  0079C4  2B62               	dw	(02B62h)&0ffffh
  5594  0079C6  2B6F               	dw	(02B6Fh)&0ffffh
  5595  0079C8  2B7C               	dw	(02B7Ch)&0ffffh
  5596  0079CA  2B8A               	dw	(02B8Ah)&0ffffh
  5597  0079CC  2B97               	dw	(02B97h)&0ffffh
  5598  0079CE  2BA5               	dw	(02BA5h)&0ffffh
  5599  0079D0  2BB2               	dw	(02BB2h)&0ffffh
  5600  0079D2  2BC0               	dw	(02BC0h)&0ffffh
  5601  0079D4  2BCD               	dw	(02BCDh)&0ffffh
  5602  0079D6  2BDB               	dw	(02BDBh)&0ffffh
  5603  0079D8  2BE8               	dw	(02BE8h)&0ffffh
  5604  0079DA  2BF5               	dw	(02BF5h)&0ffffh
  5605  0079DC  2C03               	dw	(02C03h)&0ffffh
  5606  0079DE  2C10               	dw	(02C10h)&0ffffh
  5607  0079E0  2C1E               	dw	(02C1Eh)&0ffffh
  5608  0079E2  2C2B               	dw	(02C2Bh)&0ffffh
  5609  0079E4  2C39               	dw	(02C39h)&0ffffh
  5610  0079E6  2C46               	dw	(02C46h)&0ffffh
  5611  0079E8  2C54               	dw	(02C54h)&0ffffh
  5612  0079EA  2C61               	dw	(02C61h)&0ffffh
  5613  0079EC  2C6F               	dw	(02C6Fh)&0ffffh
  5614  0079EE  2C7C               	dw	(02C7Ch)&0ffffh
  5615  0079F0  2C8A               	dw	(02C8Ah)&0ffffh
  5616  0079F2  2C97               	dw	(02C97h)&0ffffh
  5617  0079F4  2CA5               	dw	(02CA5h)&0ffffh
  5618  0079F6  2CB2               	dw	(02CB2h)&0ffffh
  5619  0079F8  2CC0               	dw	(02CC0h)&0ffffh
  5620  0079FA  2CCD               	dw	(02CCDh)&0ffffh
  5621  0079FC  2CDB               	dw	(02CDBh)&0ffffh
  5622  0079FE  2CE8               	dw	(02CE8h)&0ffffh
  5623  007A00  2CF6               	dw	(02CF6h)&0ffffh
  5624  007A02  2D04               	dw	(02D04h)&0ffffh
  5625  007A04  2D11               	dw	(02D11h)&0ffffh
  5626  007A06  2D1F               	dw	(02D1Fh)&0ffffh
  5627  007A08  2D2C               	dw	(02D2Ch)&0ffffh
  5628  007A0A  2D3A               	dw	(02D3Ah)&0ffffh
  5629  007A0C  2D47               	dw	(02D47h)&0ffffh
  5630  007A0E  2D55               	dw	(02D55h)&0ffffh
  5631  007A10  2D62               	dw	(02D62h)&0ffffh
  5632  007A12  2D70               	dw	(02D70h)&0ffffh
  5633  007A14  2D7E               	dw	(02D7Eh)&0ffffh
  5634  007A16  2D8B               	dw	(02D8Bh)&0ffffh
  5635  007A18  2D99               	dw	(02D99h)&0ffffh
  5636  007A1A  2DA6               	dw	(02DA6h)&0ffffh
  5637  007A1C  2DB4               	dw	(02DB4h)&0ffffh
  5638  007A1E  2DC2               	dw	(02DC2h)&0ffffh
  5639  007A20  2DCF               	dw	(02DCFh)&0ffffh
  5640  007A22  2DDD               	dw	(02DDDh)&0ffffh
  5641  007A24  2DEA               	dw	(02DEAh)&0ffffh
  5642  007A26  2DF8               	dw	(02DF8h)&0ffffh
  5643  007A28  2E06               	dw	(02E06h)&0ffffh
  5644  007A2A  2E13               	dw	(02E13h)&0ffffh
  5645  007A2C  2E21               	dw	(02E21h)&0ffffh
  5646  007A2E  2E2E               	dw	(02E2Eh)&0ffffh
  5647  007A30  2E3C               	dw	(02E3Ch)&0ffffh
  5648  007A32  2E4A               	dw	(02E4Ah)&0ffffh
  5649  007A34  2E57               	dw	(02E57h)&0ffffh
  5650  007A36  2E65               	dw	(02E65h)&0ffffh
  5651  007A38  2E73               	dw	(02E73h)&0ffffh
  5652  007A3A  2E80               	dw	(02E80h)&0ffffh
  5653  007A3C  2E8E               	dw	(02E8Eh)&0ffffh
  5654  007A3E  2E9B               	dw	(02E9Bh)&0ffffh
  5655  007A40  2EA9               	dw	(02EA9h)&0ffffh
  5656  007A42  2EB7               	dw	(02EB7h)&0ffffh
  5657  007A44  2EC4               	dw	(02EC4h)&0ffffh
  5658  007A46  2ED2               	dw	(02ED2h)&0ffffh
  5659  007A48  2EE0               	dw	(02EE0h)&0ffffh
  5660  007A4A  2EED               	dw	(02EEDh)&0ffffh
  5661  007A4C  2EFB               	dw	(02EFBh)&0ffffh
  5662  007A4E  2F09               	dw	(02F09h)&0ffffh
  5663  007A50  2F16               	dw	(02F16h)&0ffffh
  5664  007A52  2F24               	dw	(02F24h)&0ffffh
  5665  007A54  2F32               	dw	(02F32h)&0ffffh
  5666  007A56  2F40               	dw	(02F40h)&0ffffh
  5667  007A58  2F4D               	dw	(02F4Dh)&0ffffh
  5668  007A5A  2F5B               	dw	(02F5Bh)&0ffffh
  5669  007A5C  2F69               	dw	(02F69h)&0ffffh
  5670  007A5E  2F76               	dw	(02F76h)&0ffffh
  5671  007A60  2F84               	dw	(02F84h)&0ffffh
  5672  007A62  2F92               	dw	(02F92h)&0ffffh
  5673  007A64  2F9F               	dw	(02F9Fh)&0ffffh
  5674  007A66  2FAD               	dw	(02FADh)&0ffffh
  5675  007A68  2FBB               	dw	(02FBBh)&0ffffh
  5676  007A6A  2FC9               	dw	(02FC9h)&0ffffh
  5677  007A6C  2FD6               	dw	(02FD6h)&0ffffh
  5678  007A6E  2FE4               	dw	(02FE4h)&0ffffh
  5679  007A70  2FF2               	dw	(02FF2h)&0ffffh
  5680  007A72  3000               	dw	(03000h)&0ffffh
  5681  007A74  300D               	dw	(0300Dh)&0ffffh
  5682  007A76  301B               	dw	(0301Bh)&0ffffh
  5683  007A78  3029               	dw	(03029h)&0ffffh
  5684  007A7A  3036               	dw	(03036h)&0ffffh
  5685  007A7C  3044               	dw	(03044h)&0ffffh
  5686  007A7E  3052               	dw	(03052h)&0ffffh
  5687  007A80  3060               	dw	(03060h)&0ffffh
  5688  007A82  306D               	dw	(0306Dh)&0ffffh
  5689  007A84  307B               	dw	(0307Bh)&0ffffh
  5690  007A86  3089               	dw	(03089h)&0ffffh
  5691  007A88  3097               	dw	(03097h)&0ffffh
  5692  007A8A  30A5               	dw	(030A5h)&0ffffh
  5693  007A8C  30B2               	dw	(030B2h)&0ffffh
  5694  007A8E  30C0               	dw	(030C0h)&0ffffh
  5695  007A90  30CE               	dw	(030CEh)&0ffffh
  5696  007A92  30DC               	dw	(030DCh)&0ffffh
  5697  007A94  30E9               	dw	(030E9h)&0ffffh
  5698  007A96  30F7               	dw	(030F7h)&0ffffh
  5699  007A98  3105               	dw	(03105h)&0ffffh
  5700  007A9A  3113               	dw	(03113h)&0ffffh
  5701  007A9C  3121               	dw	(03121h)&0ffffh
  5702  007A9E  312E               	dw	(0312Eh)&0ffffh
  5703  007AA0  313C               	dw	(0313Ch)&0ffffh
  5704  007AA2  314A               	dw	(0314Ah)&0ffffh
  5705  007AA4  3158               	dw	(03158h)&0ffffh
  5706  007AA6  3166               	dw	(03166h)&0ffffh
  5707  007AA8  3173               	dw	(03173h)&0ffffh
  5708  007AAA  3181               	dw	(03181h)&0ffffh
  5709  007AAC  318F               	dw	(0318Fh)&0ffffh
  5710  007AAE  319D               	dw	(0319Dh)&0ffffh
  5711  007AB0  31AB               	dw	(031ABh)&0ffffh
  5712  007AB2  31B9               	dw	(031B9h)&0ffffh
  5713  007AB4  31C6               	dw	(031C6h)&0ffffh
  5714  007AB6  31D4               	dw	(031D4h)&0ffffh
  5715  007AB8  31E2               	dw	(031E2h)&0ffffh
  5716  007ABA  31F0               	dw	(031F0h)&0ffffh
  5717  007ABC  31FE               	dw	(031FEh)&0ffffh
  5718  007ABE  320C               	dw	(0320Ch)&0ffffh
  5719  007AC0  3219               	dw	(03219h)&0ffffh
  5720  007AC2  3227               	dw	(03227h)&0ffffh
  5721  007AC4  3235               	dw	(03235h)&0ffffh
  5722  007AC6  3243               	dw	(03243h)&0ffffh
  5723  007AC8  3251               	dw	(03251h)&0ffffh
  5724  007ACA  325F               	dw	(0325Fh)&0ffffh
  5725  007ACC  326D               	dw	(0326Dh)&0ffffh
  5726  007ACE  327A               	dw	(0327Ah)&0ffffh
  5727  007AD0  3288               	dw	(03288h)&0ffffh
  5728  007AD2  3296               	dw	(03296h)&0ffffh
  5729  007AD4  32A4               	dw	(032A4h)&0ffffh
  5730  007AD6  32B2               	dw	(032B2h)&0ffffh
  5731  007AD8  32C0               	dw	(032C0h)&0ffffh
  5732  007ADA  32CE               	dw	(032CEh)&0ffffh
  5733  007ADC  32DB               	dw	(032DBh)&0ffffh
  5734  007ADE  32E9               	dw	(032E9h)&0ffffh
  5735  007AE0  32F7               	dw	(032F7h)&0ffffh
  5736  007AE2  3305               	dw	(03305h)&0ffffh
  5737  007AE4  3313               	dw	(03313h)&0ffffh
  5738  007AE6  3321               	dw	(03321h)&0ffffh
  5739  007AE8  332F               	dw	(0332Fh)&0ffffh
  5740  007AEA  333D               	dw	(0333Dh)&0ffffh
  5741  007AEC  334B               	dw	(0334Bh)&0ffffh
  5742  007AEE  3359               	dw	(03359h)&0ffffh
  5743  007AF0  3366               	dw	(03366h)&0ffffh
  5744  007AF2  3374               	dw	(03374h)&0ffffh
  5745  007AF4  3382               	dw	(03382h)&0ffffh
  5746  007AF6  3390               	dw	(03390h)&0ffffh
  5747  007AF8  339E               	dw	(0339Eh)&0ffffh
  5748  007AFA  33AC               	dw	(033ACh)&0ffffh
  5749  007AFC  33BA               	dw	(033BAh)&0ffffh
  5750  007AFE  33C8               	dw	(033C8h)&0ffffh
  5751  007B00  33D6               	dw	(033D6h)&0ffffh
  5752  007B02  33E4               	dw	(033E4h)&0ffffh
  5753  007B04  33F2               	dw	(033F2h)&0ffffh
  5754  007B06  33FF               	dw	(033FFh)&0ffffh
  5755  007B08  340D               	dw	(0340Dh)&0ffffh
  5756  007B0A  341B               	dw	(0341Bh)&0ffffh
  5757  007B0C  3429               	dw	(03429h)&0ffffh
  5758  007B0E  3437               	dw	(03437h)&0ffffh
  5759  007B10  3445               	dw	(03445h)&0ffffh
  5760  007B12  3453               	dw	(03453h)&0ffffh
  5761  007B14  3461               	dw	(03461h)&0ffffh
  5762  007B16  346F               	dw	(0346Fh)&0ffffh
  5763  007B18  347D               	dw	(0347Dh)&0ffffh
  5764  007B1A  348B               	dw	(0348Bh)&0ffffh
  5765  007B1C  3499               	dw	(03499h)&0ffffh
  5766  007B1E  34A7               	dw	(034A7h)&0ffffh
  5767  007B20  34B5               	dw	(034B5h)&0ffffh
  5768  007B22  34C3               	dw	(034C3h)&0ffffh
  5769  007B24  34D1               	dw	(034D1h)&0ffffh
  5770  007B26  34DF               	dw	(034DFh)&0ffffh
  5771  007B28  34ED               	dw	(034EDh)&0ffffh
  5772  007B2A  34FB               	dw	(034FBh)&0ffffh
  5773  007B2C  3509               	dw	(03509h)&0ffffh
  5774  007B2E  3516               	dw	(03516h)&0ffffh
  5775  007B30  3524               	dw	(03524h)&0ffffh
  5776  007B32  3532               	dw	(03532h)&0ffffh
  5777  007B34  3540               	dw	(03540h)&0ffffh
  5778  007B36  354E               	dw	(0354Eh)&0ffffh
  5779  007B38  355C               	dw	(0355Ch)&0ffffh
  5780  007B3A  356A               	dw	(0356Ah)&0ffffh
  5781  007B3C  3578               	dw	(03578h)&0ffffh
  5782  007B3E  3586               	dw	(03586h)&0ffffh
  5783  007B40  3594               	dw	(03594h)&0ffffh
  5784  007B42  35A2               	dw	(035A2h)&0ffffh
  5785  007B44  35B0               	dw	(035B0h)&0ffffh
  5786  007B46  35BE               	dw	(035BEh)&0ffffh
  5787  007B48  35CC               	dw	(035CCh)&0ffffh
  5788  007B4A  35DA               	dw	(035DAh)&0ffffh
  5789  007B4C  35E8               	dw	(035E8h)&0ffffh
  5790  007B4E  35F6               	dw	(035F6h)&0ffffh
  5791  007B50  3604               	dw	(03604h)&0ffffh
  5792  007B52  3612               	dw	(03612h)&0ffffh
  5793  007B54  3620               	dw	(03620h)&0ffffh
  5794  007B56  362E               	dw	(0362Eh)&0ffffh
  5795  007B58  363C               	dw	(0363Ch)&0ffffh
  5796  007B5A  364A               	dw	(0364Ah)&0ffffh
  5797  007B5C  3658               	dw	(03658h)&0ffffh
  5798  007B5E  3666               	dw	(03666h)&0ffffh
  5799  007B60  3674               	dw	(03674h)&0ffffh
  5800  007B62  3682               	dw	(03682h)&0ffffh
  5801  007B64  3690               	dw	(03690h)&0ffffh
  5802  007B66  369E               	dw	(0369Eh)&0ffffh
  5803  007B68  36AC               	dw	(036ACh)&0ffffh
  5804  007B6A  36BA               	dw	(036BAh)&0ffffh
  5805  007B6C  36C8               	dw	(036C8h)&0ffffh
  5806  007B6E  36D6               	dw	(036D6h)&0ffffh
  5807  007B70  36E4               	dw	(036E4h)&0ffffh
  5808  007B72  36F2               	dw	(036F2h)&0ffffh
  5809  007B74  3701               	dw	(03701h)&0ffffh
  5810  007B76  370F               	dw	(0370Fh)&0ffffh
  5811  007B78  371D               	dw	(0371Dh)&0ffffh
  5812  007B7A  372B               	dw	(0372Bh)&0ffffh
  5813  007B7C  3739               	dw	(03739h)&0ffffh
  5814  007B7E  3747               	dw	(03747h)&0ffffh
  5815  007B80  3755               	dw	(03755h)&0ffffh
  5816  007B82  3763               	dw	(03763h)&0ffffh
  5817  007B84  3771               	dw	(03771h)&0ffffh
  5818  007B86  377F               	dw	(0377Fh)&0ffffh
  5819  007B88  378D               	dw	(0378Dh)&0ffffh
  5820  007B8A  379B               	dw	(0379Bh)&0ffffh
  5821  007B8C  37A9               	dw	(037A9h)&0ffffh
  5822  007B8E  37B7               	dw	(037B7h)&0ffffh
  5823  007B90  37C5               	dw	(037C5h)&0ffffh
  5824  007B92  37D3               	dw	(037D3h)&0ffffh
  5825  007B94  37E1               	dw	(037E1h)&0ffffh
  5826  007B96  37EF               	dw	(037EFh)&0ffffh
  5827  007B98  37FD               	dw	(037FDh)&0ffffh
  5828  007B9A  380B               	dw	(0380Bh)&0ffffh
  5829  007B9C  3819               	dw	(03819h)&0ffffh
  5830  007B9E  3827               	dw	(03827h)&0ffffh
  5831  007BA0  3836               	dw	(03836h)&0ffffh
  5832  007BA2  3844               	dw	(03844h)&0ffffh
  5833  007BA4  3852               	dw	(03852h)&0ffffh
  5834  007BA6  3860               	dw	(03860h)&0ffffh
  5835  007BA8  386E               	dw	(0386Eh)&0ffffh
  5836  007BAA  387C               	dw	(0387Ch)&0ffffh
  5837  007BAC  388A               	dw	(0388Ah)&0ffffh
  5838  007BAE  3898               	dw	(03898h)&0ffffh
  5839  007BB0  38A6               	dw	(038A6h)&0ffffh
  5840  007BB2  38B4               	dw	(038B4h)&0ffffh
  5841  007BB4  38C2               	dw	(038C2h)&0ffffh
  5842  007BB6  38D0               	dw	(038D0h)&0ffffh
  5843  007BB8  38DE               	dw	(038DEh)&0ffffh
  5844  007BBA  38EC               	dw	(038ECh)&0ffffh
  5845  007BBC  38FA               	dw	(038FAh)&0ffffh
  5846  007BBE  3909               	dw	(03909h)&0ffffh
  5847  007BC0  3917               	dw	(03917h)&0ffffh
  5848  007BC2  3925               	dw	(03925h)&0ffffh
  5849  007BC4  3933               	dw	(03933h)&0ffffh
  5850  007BC6  3941               	dw	(03941h)&0ffffh
  5851  007BC8  394F               	dw	(0394Fh)&0ffffh
  5852  007BCA  395D               	dw	(0395Dh)&0ffffh
  5853  007BCC  396B               	dw	(0396Bh)&0ffffh
  5854  007BCE  3979               	dw	(03979h)&0ffffh
  5855  007BD0  3987               	dw	(03987h)&0ffffh
  5856  007BD2  3995               	dw	(03995h)&0ffffh
  5857  007BD4  39A3               	dw	(039A3h)&0ffffh
  5858  007BD6  39B2               	dw	(039B2h)&0ffffh
  5859  007BD8  39C0               	dw	(039C0h)&0ffffh
  5860  007BDA  39CE               	dw	(039CEh)&0ffffh
  5861  007BDC  39DC               	dw	(039DCh)&0ffffh
  5862  007BDE  39EA               	dw	(039EAh)&0ffffh
  5863  007BE0  39F8               	dw	(039F8h)&0ffffh
  5864  007BE2  3A06               	dw	(03A06h)&0ffffh
  5865  007BE4  3A14               	dw	(03A14h)&0ffffh
  5866  007BE6  3A22               	dw	(03A22h)&0ffffh
  5867  007BE8  3A30               	dw	(03A30h)&0ffffh
  5868  007BEA  3A3F               	dw	(03A3Fh)&0ffffh
  5869  007BEC  3A4D               	dw	(03A4Dh)&0ffffh
  5870  007BEE  3A5B               	dw	(03A5Bh)&0ffffh
  5871  007BF0  3A69               	dw	(03A69h)&0ffffh
  5872  007BF2  3A77               	dw	(03A77h)&0ffffh
  5873  007BF4  3A85               	dw	(03A85h)&0ffffh
  5874  007BF6  3A93               	dw	(03A93h)&0ffffh
  5875  007BF8  3AA1               	dw	(03AA1h)&0ffffh
  5876  007BFA  3AAF               	dw	(03AAFh)&0ffffh
  5877  007BFC  3ABD               	dw	(03ABDh)&0ffffh
  5878  007BFE  3ACC               	dw	(03ACCh)&0ffffh
  5879  007C00  3ADA               	dw	(03ADAh)&0ffffh
  5880  007C02  3AE8               	dw	(03AE8h)&0ffffh
  5881  007C04  3AF6               	dw	(03AF6h)&0ffffh
  5882  007C06  3B04               	dw	(03B04h)&0ffffh
  5883  007C08  3B12               	dw	(03B12h)&0ffffh
  5884  007C0A  3B20               	dw	(03B20h)&0ffffh
  5885  007C0C  3B2E               	dw	(03B2Eh)&0ffffh
  5886  007C0E  3B3C               	dw	(03B3Ch)&0ffffh
  5887  007C10  3B4B               	dw	(03B4Bh)&0ffffh
  5888  007C12  3B59               	dw	(03B59h)&0ffffh
  5889  007C14  3B67               	dw	(03B67h)&0ffffh
  5890  007C16  3B75               	dw	(03B75h)&0ffffh
  5891  007C18  3B83               	dw	(03B83h)&0ffffh
  5892  007C1A  3B91               	dw	(03B91h)&0ffffh
  5893  007C1C  3B9F               	dw	(03B9Fh)&0ffffh
  5894  007C1E  3BAD               	dw	(03BADh)&0ffffh
  5895  007C20  3BBB               	dw	(03BBBh)&0ffffh
  5896  007C22  3BCA               	dw	(03BCAh)&0ffffh
  5897  007C24  3BD8               	dw	(03BD8h)&0ffffh
  5898  007C26  3BE6               	dw	(03BE6h)&0ffffh
  5899  007C28  3BF4               	dw	(03BF4h)&0ffffh
  5900  007C2A  3C02               	dw	(03C02h)&0ffffh
  5901  007C2C  3C10               	dw	(03C10h)&0ffffh
  5902  007C2E  3C1E               	dw	(03C1Eh)&0ffffh
  5903  007C30  3C2C               	dw	(03C2Ch)&0ffffh
  5904  007C32  3C3B               	dw	(03C3Bh)&0ffffh
  5905  007C34  3C49               	dw	(03C49h)&0ffffh
  5906  007C36  3C57               	dw	(03C57h)&0ffffh
  5907  007C38  3C65               	dw	(03C65h)&0ffffh
  5908  007C3A  3C73               	dw	(03C73h)&0ffffh
  5909  007C3C  3C81               	dw	(03C81h)&0ffffh
  5910  007C3E  3C8F               	dw	(03C8Fh)&0ffffh
  5911  007C40  3C9D               	dw	(03C9Dh)&0ffffh
  5912  007C42  3CAB               	dw	(03CABh)&0ffffh
  5913  007C44  3CBA               	dw	(03CBAh)&0ffffh
  5914  007C46  3CC8               	dw	(03CC8h)&0ffffh
  5915  007C48  3CD6               	dw	(03CD6h)&0ffffh
  5916  007C4A  3CE4               	dw	(03CE4h)&0ffffh
  5917  007C4C  3CF2               	dw	(03CF2h)&0ffffh
  5918  007C4E  3D00               	dw	(03D00h)&0ffffh
  5919  007C50  3D0E               	dw	(03D0Eh)&0ffffh
  5920  007C52  3D1D               	dw	(03D1Dh)&0ffffh
  5921  007C54  3D2B               	dw	(03D2Bh)&0ffffh
  5922  007C56  3D39               	dw	(03D39h)&0ffffh
  5923  007C58  3D47               	dw	(03D47h)&0ffffh
  5924  007C5A  3D55               	dw	(03D55h)&0ffffh
  5925  007C5C  3D63               	dw	(03D63h)&0ffffh
  5926  007C5E  3D71               	dw	(03D71h)&0ffffh
  5927  007C60  3D7F               	dw	(03D7Fh)&0ffffh
  5928  007C62  3D8E               	dw	(03D8Eh)&0ffffh
  5929  007C64  3D9C               	dw	(03D9Ch)&0ffffh
  5930  007C66  3DAA               	dw	(03DAAh)&0ffffh
  5931  007C68  3DB8               	dw	(03DB8h)&0ffffh
  5932  007C6A  3DC6               	dw	(03DC6h)&0ffffh
  5933  007C6C  3DD4               	dw	(03DD4h)&0ffffh
  5934  007C6E  3DE2               	dw	(03DE2h)&0ffffh
  5935  007C70  3DF0               	dw	(03DF0h)&0ffffh
  5936  007C72  3DFF               	dw	(03DFFh)&0ffffh
  5937  007C74  3E0D               	dw	(03E0Dh)&0ffffh
  5938  007C76  3E1B               	dw	(03E1Bh)&0ffffh
  5939  007C78  3E29               	dw	(03E29h)&0ffffh
  5940  007C7A  3E37               	dw	(03E37h)&0ffffh
  5941  007C7C  3E45               	dw	(03E45h)&0ffffh
  5942  007C7E  3E53               	dw	(03E53h)&0ffffh
  5943  007C80  3E61               	dw	(03E61h)&0ffffh
  5944  007C82  3E70               	dw	(03E70h)&0ffffh
  5945  007C84  3E7E               	dw	(03E7Eh)&0ffffh
  5946  007C86  3E8C               	dw	(03E8Ch)&0ffffh
  5947  007C88  3E9A               	dw	(03E9Ah)&0ffffh
  5948  007C8A  3EA8               	dw	(03EA8h)&0ffffh
  5949  007C8C  3EB6               	dw	(03EB6h)&0ffffh
  5950  007C8E  3EC4               	dw	(03EC4h)&0ffffh
  5951  007C90  3ED2               	dw	(03ED2h)&0ffffh
  5952  007C92  3EE1               	dw	(03EE1h)&0ffffh
  5953  007C94  3EEF               	dw	(03EEFh)&0ffffh
  5954  007C96  3EFD               	dw	(03EFDh)&0ffffh
  5955  007C98  3F0B               	dw	(03F0Bh)&0ffffh
  5956  007C9A  3F19               	dw	(03F19h)&0ffffh
  5957  007C9C  3F27               	dw	(03F27h)&0ffffh
  5958  007C9E  3F35               	dw	(03F35h)&0ffffh
  5959  007CA0  3F44               	dw	(03F44h)&0ffffh
  5960  007CA2  3F52               	dw	(03F52h)&0ffffh
  5961  007CA4  3F60               	dw	(03F60h)&0ffffh
  5962  007CA6  3F6E               	dw	(03F6Eh)&0ffffh
  5963  007CA8  3F7C               	dw	(03F7Ch)&0ffffh
  5964  007CAA  3F8A               	dw	(03F8Ah)&0ffffh
  5965  007CAC  3F98               	dw	(03F98h)&0ffffh
  5966  007CAE  3FA6               	dw	(03FA6h)&0ffffh
  5967  007CB0  3FB5               	dw	(03FB5h)&0ffffh
  5968  007CB2  3FC3               	dw	(03FC3h)&0ffffh
  5969  007CB4  3FD1               	dw	(03FD1h)&0ffffh
  5970  007CB6  3FDF               	dw	(03FDFh)&0ffffh
  5971  007CB8  3FED               	dw	(03FEDh)&0ffffh
  5972  007CBA  3FFB               	dw	(03FFBh)&0ffffh
  5973  007CBC  4009               	dw	(04009h)&0ffffh
  5974  007CBE  4017               	dw	(04017h)&0ffffh
  5975  007CC0  4026               	dw	(04026h)&0ffffh
  5976  007CC2  4034               	dw	(04034h)&0ffffh
  5977  007CC4  4042               	dw	(04042h)&0ffffh
  5978  007CC6  4050               	dw	(04050h)&0ffffh
  5979  007CC8  405E               	dw	(0405Eh)&0ffffh
  5980  007CCA  406C               	dw	(0406Ch)&0ffffh
  5981  007CCC  407A               	dw	(0407Ah)&0ffffh
  5982  007CCE  4088               	dw	(04088h)&0ffffh
  5983  007CD0  4096               	dw	(04096h)&0ffffh
  5984  007CD2  40A5               	dw	(040A5h)&0ffffh
  5985  007CD4  40B3               	dw	(040B3h)&0ffffh
  5986+ 007CD6  40C1               	dw	(040C1h)&0ffffh
  5987+ 007CD8  40CF               	dw	(040CFh)&0ffffh
  5988+ 007CDA  40DD               	dw	(040DDh)&0ffffh
  5989+ 007CDC  40EB               	dw	(040EBh)&0ffffh
  5990+ 007CDE  40F9               	dw	(040F9h)&0ffffh
  5991+ 007CE0  4107               	dw	(04107h)&0ffffh
  5992+ 007CE2  4116               	dw	(04116h)&0ffffh
  5993+ 007CE4  4124               	dw	(04124h)&0ffffh
  5994+ 007CE6  4132               	dw	(04132h)&0ffffh
  5995+ 007CE8  4140               	dw	(04140h)&0ffffh
  5996+ 007CEA  414E               	dw	(0414Eh)&0ffffh
  5997+ 007CEC  415C               	dw	(0415Ch)&0ffffh
  5998+ 007CEE  416A               	dw	(0416Ah)&0ffffh
  5999+ 007CF0  4178               	dw	(04178h)&0ffffh
  6000+ 007CF2  4186               	dw	(04186h)&0ffffh
  6001+ 007CF4  4195               	dw	(04195h)&0ffffh
  6002+ 007CF6  41A3               	dw	(041A3h)&0ffffh
  6003+ 007CF8  41B1               	dw	(041B1h)&0ffffh
  6004+ 007CFA  41BF               	dw	(041BFh)&0ffffh
  6005+ 007CFC  41CD               	dw	(041CDh)&0ffffh
  6006+ 007CFE  41DB               	dw	(041DBh)&0ffffh
  6007+ 007D00  41E9               	dw	(041E9h)&0ffffh
  6008+ 007D02  41F7               	dw	(041F7h)&0ffffh
  6009+ 007D04  4205               	dw	(04205h)&0ffffh
  6010+ 007D06  4213               	dw	(04213h)&0ffffh
  6011+ 007D08  4222               	dw	(04222h)&0ffffh
  6012+ 007D0A  4230               	dw	(04230h)&0ffffh
  6013+ 007D0C  423E               	dw	(0423Eh)&0ffffh
  6014+ 007D0E  424C               	dw	(0424Ch)&0ffffh
  6015+ 007D10  425A               	dw	(0425Ah)&0ffffh
  6016+ 007D12  4268               	dw	(04268h)&0ffffh
  6017+ 007D14  4276               	dw	(04276h)&0ffffh
  6018+ 007D16  4284               	dw	(04284h)&0ffffh
  6019+ 007D18  4292               	dw	(04292h)&0ffffh
  6020+ 007D1A  42A0               	dw	(042A0h)&0ffffh
  6021+ 007D1C  42AF               	dw	(042AFh)&0ffffh
  6022+ 007D1E  42BD               	dw	(042BDh)&0ffffh
  6023+ 007D20  42CB               	dw	(042CBh)&0ffffh
  6024+ 007D22  42D9               	dw	(042D9h)&0ffffh
  6025+ 007D24  42E7               	dw	(042E7h)&0ffffh
  6026+ 007D26  42F5               	dw	(042F5h)&0ffffh
  6027+ 007D28  4303               	dw	(04303h)&0ffffh
  6028+ 007D2A  4311               	dw	(04311h)&0ffffh
  6029+ 007D2C  431F               	dw	(0431Fh)&0ffffh
  6030+ 007D2E  432D               	dw	(0432Dh)&0ffffh
  6031+ 007D30  433B               	dw	(0433Bh)&0ffffh
  6032+ 007D32  4349               	dw	(04349h)&0ffffh
  6033+ 007D34  4358               	dw	(04358h)&0ffffh
  6034+ 007D36  4366               	dw	(04366h)&0ffffh
  6035+ 007D38  4374               	dw	(04374h)&0ffffh
  6036+ 007D3A  4382               	dw	(04382h)&0ffffh
  6037+ 007D3C  4390               	dw	(04390h)&0ffffh
  6038+ 007D3E  439E               	dw	(0439Eh)&0ffffh
  6039+ 007D40  43AC               	dw	(043ACh)&0ffffh
  6040+ 007D42  43BA               	dw	(043BAh)&0ffffh
  6041+ 007D44  43C8               	dw	(043C8h)&0ffffh
  6042+ 007D46  43D6               	dw	(043D6h)&0ffffh
  6043+ 007D48  43E4               	dw	(043E4h)&0ffffh
  6044+ 007D4A  43F2               	dw	(043F2h)&0ffffh
  6045+ 007D4C  4400               	dw	(04400h)&0ffffh
  6046+ 007D4E  440F               	dw	(0440Fh)&0ffffh
  6047+ 007D50  441D               	dw	(0441Dh)&0ffffh
  6048+ 007D52  442B               	dw	(0442Bh)&0ffffh
  6049+ 007D54  4439               	dw	(04439h)&0ffffh
  6050+ 007D56  4447               	dw	(04447h)&0ffffh
  6051+ 007D58  4455               	dw	(04455h)&0ffffh
  6052+ 007D5A  4463               	dw	(04463h)&0ffffh
  6053+ 007D5C  4471               	dw	(04471h)&0ffffh
  6054+ 007D5E  447F               	dw	(0447Fh)&0ffffh
  6055+ 007D60  448D               	dw	(0448Dh)&0ffffh
  6056+ 007D62  449B               	dw	(0449Bh)&0ffffh
  6057+ 007D64  44A9               	dw	(044A9h)&0ffffh
  6058+ 007D66  44B7               	dw	(044B7h)&0ffffh
  6059+ 007D68  44C5               	dw	(044C5h)&0ffffh
  6060+ 007D6A  44D3               	dw	(044D3h)&0ffffh
  6061+ 007D6C  44E1               	dw	(044E1h)&0ffffh
  6062+ 007D6E  44EF               	dw	(044EFh)&0ffffh
  6063+ 007D70  44FD               	dw	(044FDh)&0ffffh
  6064+ 007D72  450C               	dw	(0450Ch)&0ffffh
  6065+ 007D74  451A               	dw	(0451Ah)&0ffffh
  6066+ 007D76  4528               	dw	(04528h)&0ffffh
  6067+ 007D78  4536               	dw	(04536h)&0ffffh
  6068+ 007D7A  4544               	dw	(04544h)&0ffffh
  6069+ 007D7C  4552               	dw	(04552h)&0ffffh
  6070+ 007D7E  4560               	dw	(04560h)&0ffffh
  6071+ 007D80  456E               	dw	(0456Eh)&0ffffh
  6072+ 007D82  457C               	dw	(0457Ch)&0ffffh
  6073+ 007D84  458A               	dw	(0458Ah)&0ffffh
  6074+ 007D86  4598               	dw	(04598h)&0ffffh
  6075+ 007D88  45A6               	dw	(045A6h)&0ffffh
  6076+ 007D8A  45B4               	dw	(045B4h)&0ffffh
  6077+ 007D8C  45C2               	dw	(045C2h)&0ffffh
  6078+ 007D8E  45D0               	dw	(045D0h)&0ffffh
  6079+ 007D90  45DE               	dw	(045DEh)&0ffffh
  6080+ 007D92  45EC               	dw	(045ECh)&0ffffh
  6081+ 007D94  45FA               	dw	(045FAh)&0ffffh
  6082+ 007D96  4608               	dw	(04608h)&0ffffh
  6083+ 007D98  4616               	dw	(04616h)&0ffffh
  6084+ 007D9A  4624               	dw	(04624h)&0ffffh
  6085+ 007D9C  4632               	dw	(04632h)&0ffffh
  6086+ 007D9E  4640               	dw	(04640h)&0ffffh
  6087+ 007DA0  464E               	dw	(0464Eh)&0ffffh
  6088+ 007DA2  465C               	dw	(0465Ch)&0ffffh
  6089+ 007DA4  466A               	dw	(0466Ah)&0ffffh
  6090+ 007DA6  4678               	dw	(04678h)&0ffffh
  6091+ 007DA8  4686               	dw	(04686h)&0ffffh
  6092+ 007DAA  4694               	dw	(04694h)&0ffffh
  6093+ 007DAC  46A2               	dw	(046A2h)&0ffffh
  6094+ 007DAE  46B0               	dw	(046B0h)&0ffffh
  6095+ 007DB0  46BE               	dw	(046BEh)&0ffffh
  6096+ 007DB2  46CC               	dw	(046CCh)&0ffffh
  6097+ 007DB4  46DA               	dw	(046DAh)&0ffffh
  6098+ 007DB6  46E8               	dw	(046E8h)&0ffffh
  6099+ 007DB8  46F6               	dw	(046F6h)&0ffffh
  6100+ 007DBA  4704               	dw	(04704h)&0ffffh
  6101+ 007DBC  4712               	dw	(04712h)&0ffffh
  6102+ 007DBE  4720               	dw	(04720h)&0ffffh
  6103+ 007DC0  472E               	dw	(0472Eh)&0ffffh
  6104+ 007DC2  473C               	dw	(0473Ch)&0ffffh
  6105+ 007DC4  474A               	dw	(0474Ah)&0ffffh
  6106+ 007DC6  4758               	dw	(04758h)&0ffffh
  6107+ 007DC8  4766               	dw	(04766h)&0ffffh
  6108+ 007DCA  4774               	dw	(04774h)&0ffffh
  6109+ 007DCC  4782               	dw	(04782h)&0ffffh
  6110+ 007DCE  4790               	dw	(04790h)&0ffffh
  6111+ 007DD0  479E               	dw	(0479Eh)&0ffffh
  6112+ 007DD2  47AC               	dw	(047ACh)&0ffffh
  6113+ 007DD4  47BA               	dw	(047BAh)&0ffffh
  6114+ 007DD6  47C8               	dw	(047C8h)&0ffffh
  6115+ 007DD8  47D6               	dw	(047D6h)&0ffffh
  6116+ 007DDA  47E4               	dw	(047E4h)&0ffffh
  6117+ 007DDC  47F1               	dw	(047F1h)&0ffffh
  6118+ 007DDE  47FF               	dw	(047FFh)&0ffffh
  6119+ 007DE0  480D               	dw	(0480Dh)&0ffffh
  6120+ 007DE2  481B               	dw	(0481Bh)&0ffffh
  6121+ 007DE4  4829               	dw	(04829h)&0ffffh
  6122+ 007DE6  4837               	dw	(04837h)&0ffffh
  6123+ 007DE8  4845               	dw	(04845h)&0ffffh
  6124+ 007DEA  4853               	dw	(04853h)&0ffffh
  6125+ 007DEC  4861               	dw	(04861h)&0ffffh
  6126+ 007DEE  486F               	dw	(0486Fh)&0ffffh
  6127+ 007DF0  487D               	dw	(0487Dh)&0ffffh
  6128+ 007DF2  488B               	dw	(0488Bh)&0ffffh
  6129+ 007DF4  4899               	dw	(04899h)&0ffffh
  6130+ 007DF6  48A7               	dw	(048A7h)&0ffffh
  6131+ 007DF8  48B5               	dw	(048B5h)&0ffffh
  6132+ 007DFA  48C3               	dw	(048C3h)&0ffffh
  6133+ 007DFC  48D0               	dw	(048D0h)&0ffffh
  6134+ 007DFE  48DE               	dw	(048DEh)&0ffffh
  6135+ 007E00  48EC               	dw	(048ECh)&0ffffh
  6136+ 007E02  48FA               	dw	(048FAh)&0ffffh
  6137+ 007E04  4908               	dw	(04908h)&0ffffh
  6138+ 007E06  4916               	dw	(04916h)&0ffffh
  6139+ 007E08  4924               	dw	(04924h)&0ffffh
  6140+ 007E0A  4932               	dw	(04932h)&0ffffh
  6141+ 007E0C  4940               	dw	(04940h)&0ffffh
  6142+ 007E0E  494E               	dw	(0494Eh)&0ffffh
  6143+ 007E10  495B               	dw	(0495Bh)&0ffffh
  6144+ 007E12  4969               	dw	(04969h)&0ffffh
  6145+ 007E14  4977               	dw	(04977h)&0ffffh
  6146+ 007E16  4985               	dw	(04985h)&0ffffh
  6147+ 007E18  4993               	dw	(04993h)&0ffffh
  6148+ 007E1A  49A1               	dw	(049A1h)&0ffffh
  6149+ 007E1C  49AF               	dw	(049AFh)&0ffffh
  6150+ 007E1E  49BD               	dw	(049BDh)&0ffffh
  6151+ 007E20  49CB               	dw	(049CBh)&0ffffh
  6152+ 007E22  49D8               	dw	(049D8h)&0ffffh
  6153+ 007E24  49E6               	dw	(049E6h)&0ffffh
  6154+ 007E26  49F4               	dw	(049F4h)&0ffffh
  6155+ 007E28  4A02               	dw	(04A02h)&0ffffh
  6156+ 007E2A  4A10               	dw	(04A10h)&0ffffh
  6157+ 007E2C  4A1E               	dw	(04A1Eh)&0ffffh
  6158+ 007E2E  4A2C               	dw	(04A2Ch)&0ffffh
  6159+ 007E30  4A3A               	dw	(04A3Ah)&0ffffh
  6160+ 007E32  4A47               	dw	(04A47h)&0ffffh
  6161+ 007E34  4A55               	dw	(04A55h)&0ffffh
  6162+ 007E36  4A63               	dw	(04A63h)&0ffffh
  6163+ 007E38  4A71               	dw	(04A71h)&0ffffh
  6164+ 007E3A  4A7F               	dw	(04A7Fh)&0ffffh
  6165+ 007E3C  4A8D               	dw	(04A8Dh)&0ffffh
  6166+ 007E3E  4A9A               	dw	(04A9Ah)&0ffffh
  6167+ 007E40  4AA8               	dw	(04AA8h)&0ffffh
  6168+ 007E42  4AB6               	dw	(04AB6h)&0ffffh
  6169+ 007E44  4AC4               	dw	(04AC4h)&0ffffh
  6170+ 007E46  4AD2               	dw	(04AD2h)&0ffffh
  6171+ 007E48  4AE0               	dw	(04AE0h)&0ffffh
  6172+ 007E4A  4AED               	dw	(04AEDh)&0ffffh
  6173+ 007E4C  4AFB               	dw	(04AFBh)&0ffffh
  6174+ 007E4E  4B09               	dw	(04B09h)&0ffffh
  6175+ 007E50  4B17               	dw	(04B17h)&0ffffh
  6176+ 007E52  4B25               	dw	(04B25h)&0ffffh
  6177+ 007E54  4B32               	dw	(04B32h)&0ffffh
  6178+ 007E56  4B40               	dw	(04B40h)&0ffffh
  6179+ 007E58  4B4E               	dw	(04B4Eh)&0ffffh
  6180+ 007E5A  4B5C               	dw	(04B5Ch)&0ffffh
  6181+ 007E5C  4B6A               	dw	(04B6Ah)&0ffffh
  6182+ 007E5E  4B77               	dw	(04B77h)&0ffffh
  6183+ 007E60  4B85               	dw	(04B85h)&0ffffh
  6184+ 007E62  4B93               	dw	(04B93h)&0ffffh
  6185+ 007E64  4BA1               	dw	(04BA1h)&0ffffh
  6186+ 007E66  4BAF               	dw	(04BAFh)&0ffffh
  6187+ 007E68  4BBC               	dw	(04BBCh)&0ffffh
  6188+ 007E6A  4BCA               	dw	(04BCAh)&0ffffh
  6189+ 007E6C  4BD8               	dw	(04BD8h)&0ffffh
  6190+ 007E6E  4BE6               	dw	(04BE6h)&0ffffh
  6191+ 007E70  4BF4               	dw	(04BF4h)&0ffffh
  6192+ 007E72  4C01               	dw	(04C01h)&0ffffh
  6193+ 007E74  4C0F               	dw	(04C0Fh)&0ffffh
  6194+ 007E76  4C1D               	dw	(04C1Dh)&0ffffh
  6195+ 007E78  4C2B               	dw	(04C2Bh)&0ffffh
  6196+ 007E7A  4C38               	dw	(04C38h)&0ffffh
  6197+ 007E7C  4C46               	dw	(04C46h)&0ffffh
  6198+ 007E7E  4C54               	dw	(04C54h)&0ffffh
  6199+ 007E80  4C62               	dw	(04C62h)&0ffffh
  6200+ 007E82  4C6F               	dw	(04C6Fh)&0ffffh
  6201+ 007E84  4C7D               	dw	(04C7Dh)&0ffffh
  6202+ 007E86  4C8B               	dw	(04C8Bh)&0ffffh
  6203+ 007E88  4C99               	dw	(04C99h)&0ffffh
  6204+ 007E8A  4CA6               	dw	(04CA6h)&0ffffh
  6205+ 007E8C  4CB4               	dw	(04CB4h)&0ffffh
  6206+ 007E8E  4CC2               	dw	(04CC2h)&0ffffh
  6207+ 007E90  4CCF               	dw	(04CCFh)&0ffffh
  6208+ 007E92  4CDD               	dw	(04CDDh)&0ffffh
  6209+ 007E94  4CEB               	dw	(04CEBh)&0ffffh
  6210+ 007E96  4CF9               	dw	(04CF9h)&0ffffh
  6211+ 007E98  4D06               	dw	(04D06h)&0ffffh
  6212+ 007E9A  4D14               	dw	(04D14h)&0ffffh
  6213+ 007E9C  4D22               	dw	(04D22h)&0ffffh
  6214+ 007E9E  4D2F               	dw	(04D2Fh)&0ffffh
  6215+ 007EA0  4D3D               	dw	(04D3Dh)&0ffffh
  6216+ 007EA2  4D4B               	dw	(04D4Bh)&0ffffh
  6217+ 007EA4  4D58               	dw	(04D58h)&0ffffh
  6218+ 007EA6  4D66               	dw	(04D66h)&0ffffh
  6219+ 007EA8  4D74               	dw	(04D74h)&0ffffh
  6220+ 007EAA  4D81               	dw	(04D81h)&0ffffh
  6221+ 007EAC  4D8F               	dw	(04D8Fh)&0ffffh
  6222+ 007EAE  4D9D               	dw	(04D9Dh)&0ffffh
  6223+ 007EB0  4DAA               	dw	(04DAAh)&0ffffh
  6224+ 007EB2  4DB8               	dw	(04DB8h)&0ffffh
  6225+ 007EB4  4DC6               	dw	(04DC6h)&0ffffh
  6226+ 007EB6  4DD3               	dw	(04DD3h)&0ffffh
  6227+ 007EB8  4DE1               	dw	(04DE1h)&0ffffh
  6228+ 007EBA  4DEF               	dw	(04DEFh)&0ffffh
  6229+ 007EBC  4DFC               	dw	(04DFCh)&0ffffh
  6230+ 007EBE  4E0A               	dw	(04E0Ah)&0ffffh
  6231+ 007EC0  4E18               	dw	(04E18h)&0ffffh
  6232+ 007EC2  4E25               	dw	(04E25h)&0ffffh
  6233+ 007EC4  4E33               	dw	(04E33h)&0ffffh
  6234+ 007EC6  4E40               	dw	(04E40h)&0ffffh
  6235+ 007EC8  4E4E               	dw	(04E4Eh)&0ffffh
  6236+ 007ECA  4E5C               	dw	(04E5Ch)&0ffffh
  6237+ 007ECC  4E69               	dw	(04E69h)&0ffffh
  6238+ 007ECE  4E77               	dw	(04E77h)&0ffffh
  6239+ 007ED0  4E84               	dw	(04E84h)&0ffffh
  6240+ 007ED2  4E92               	dw	(04E92h)&0ffffh
  6241+ 007ED4  4E9F               	dw	(04E9Fh)&0ffffh
  6242+ 007ED6  4EAD               	dw	(04EADh)&0ffffh
  6243+ 007ED8  4EBA               	dw	(04EBAh)&0ffffh
  6244+ 007EDA  4EC8               	dw	(04EC8h)&0ffffh
  6245+ 007EDC  4ED5               	dw	(04ED5h)&0ffffh
  6246+ 007EDE  4EE3               	dw	(04EE3h)&0ffffh
  6247+ 007EE0  4EF0               	dw	(04EF0h)&0ffffh
  6248+ 007EE2  4EFE               	dw	(04EFEh)&0ffffh
  6249+ 007EE4  4F0B               	dw	(04F0Bh)&0ffffh
  6250+ 007EE6  4F19               	dw	(04F19h)&0ffffh
  6251+ 007EE8  4F26               	dw	(04F26h)&0ffffh
  6252+ 007EEA  4F33               	dw	(04F33h)&0ffffh
  6253+ 007EEC  4F41               	dw	(04F41h)&0ffffh
  6254+ 007EEE  4F4E               	dw	(04F4Eh)&0ffffh
  6255+ 007EF0  4F5C               	dw	(04F5Ch)&0ffffh
  6256+ 007EF2  4F69               	dw	(04F69h)&0ffffh
  6257+ 007EF4  4F76               	dw	(04F76h)&0ffffh
  6258+ 007EF6  4F84               	dw	(04F84h)&0ffffh
  6259+ 007EF8  4F91               	dw	(04F91h)&0ffffh
  6260+ 007EFA  4F9E               	dw	(04F9Eh)&0ffffh
  6261+ 007EFC  4FAC               	dw	(04FACh)&0ffffh
  6262+ 007EFE  4FB9               	dw	(04FB9h)&0ffffh
  6263+ 007F00  4FC6               	dw	(04FC6h)&0ffffh
  6264+ 007F02  4FD4               	dw	(04FD4h)&0ffffh
  6265+ 007F04  4FE1               	dw	(04FE1h)&0ffffh
  6266+ 007F06  4FEE               	dw	(04FEEh)&0ffffh
  6267+ 007F08  4FFB               	dw	(04FFBh)&0ffffh
  6268+ 007F0A  5008               	dw	(05008h)&0ffffh
  6269+ 007F0C  5016               	dw	(05016h)&0ffffh
  6270+ 007F0E  5023               	dw	(05023h)&0ffffh
  6271+ 007F10  5030               	dw	(05030h)&0ffffh
  6272+ 007F12  503D               	dw	(0503Dh)&0ffffh
  6273+ 007F14  504A               	dw	(0504Ah)&0ffffh
  6274+ 007F16  5057               	dw	(05057h)&0ffffh
  6275+ 007F18  5065               	dw	(05065h)&0ffffh
  6276+ 007F1A  5072               	dw	(05072h)&0ffffh
  6277+ 007F1C  507F               	dw	(0507Fh)&0ffffh
  6278+ 007F1E  508C               	dw	(0508Ch)&0ffffh
  6279+ 007F20  5099               	dw	(05099h)&0ffffh
  6280+ 007F22  50A6               	dw	(050A6h)&0ffffh
  6281+ 007F24  50B3               	dw	(050B3h)&0ffffh
  6282+ 007F26  50C0               	dw	(050C0h)&0ffffh
  6283+ 007F28  50CD               	dw	(050CDh)&0ffffh
  6284+ 007F2A  50DA               	dw	(050DAh)&0ffffh
  6285+ 007F2C  50E7               	dw	(050E7h)&0ffffh
  6286  007F2E  50F4               	dw	(050F4h)&0ffffh
  6287  007F30  5100               	dw	(05100h)&0ffffh
  6288  007F32  510D               	dw	(0510Dh)&0ffffh
  6289  007F34  511A               	dw	(0511Ah)&0ffffh
  6290  007F36  5127               	dw	(05127h)&0ffffh
  6291  007F38  5134               	dw	(05134h)&0ffffh
  6292  007F3A  5141               	dw	(05141h)&0ffffh
  6293  007F3C  514D               	dw	(0514Dh)&0ffffh
  6294  007F3E  515A               	dw	(0515Ah)&0ffffh
  6295  007F40  5167               	dw	(05167h)&0ffffh
  6296  007F42  5174               	dw	(05174h)&0ffffh
  6297  007F44  5180               	dw	(05180h)&0ffffh
  6298  007F46  518D               	dw	(0518Dh)&0ffffh
  6299  007F48  519A               	dw	(0519Ah)&0ffffh
  6300  007F4A  51A6               	dw	(051A6h)&0ffffh
  6301  007F4C  51B3               	dw	(051B3h)&0ffffh
  6302  007F4E  51C0               	dw	(051C0h)&0ffffh
  6303  007F50  51CC               	dw	(051CCh)&0ffffh
  6304  007F52  51D9               	dw	(051D9h)&0ffffh
  6305  007F54  51E5               	dw	(051E5h)&0ffffh
  6306  007F56  51F2               	dw	(051F2h)&0ffffh
  6307  007F58  51FE               	dw	(051FEh)&0ffffh
  6308  007F5A  520B               	dw	(0520Bh)&0ffffh
  6309  007F5C  5217               	dw	(05217h)&0ffffh
  6310  007F5E  5223               	dw	(05223h)&0ffffh
  6311  007F60  5230               	dw	(05230h)&0ffffh
  6312  007F62  523C               	dw	(0523Ch)&0ffffh
  6313                           	global	_dpowers
  6314                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.66\lib\doprnt.c"
  6315                           	line	354
  6316  007F64                     _dpowers:
  6317  007F64  0001               	dw	(01h)&0ffffh
  6318  007F66  000A               	dw	(0Ah)&0ffffh
  6319  007F68  0064               	dw	(064h)&0ffffh
  6320  007F6A  03E8               	dw	(03E8h)&0ffffh
  6321  007F6C  2710               	dw	(02710h)&0ffffh
  6322                           	global	_RType
  6323                           	global	_dpowers
  6324                           	global	_PrintStr
  6325                           	global	_PrintStr
  6326  000000                     _PrintStr  equ     0
  6327                           
  6328                           	DABS	1,0,64	;_PrintStr
  6329                           	global	_arr
  6330                           	global	_arr
  6331  000000                     _arr  equ     64
  6332                           
  6333                           	DABS	1,64,20	;_arr
  6334                           	global	_ScratchPad
  6335                           	global	_ScratchPad
  6336  000000                     _ScratchPad  equ     84
  6337                           
  6338                           	DABS	1,84,16	;_ScratchPad
  6339                           	global	_AdcCount
  6340                           	global	_AdcCount
  6341  000000                     _AdcCount  equ     102
  6342                           
  6343                           	DABS	1,102,2	;_AdcCount
  6344                           	global	_Temperature
  6345                           	global	_Temperature
  6346  000000                     _Temperature  equ     100
  6347                           
  6348                           	DABS	1,100,2	;_Temperature
  6349                           	global	_mV
  6350                           	global	_mV
  6351  000000                     _mV  equ     105
  6352                           
  6353                           	DABS	1,105,2	;_mV
  6354                           	global	_I2CRx
  6355                           	global	_I2CRx
  6356  000000                     _I2CRx  equ     110
  6357                           
  6358                           	DABS	1,110,1	;_I2CRx
  6359                           	global	_I2C_state
  6360                           	global	_I2C_state
  6361  000000                     _I2C_state  equ     109
  6362                           
  6363                           	DABS	1,109,1	;_I2C_state
  6364                           	global	_I2Cerror
  6365                           	global	_I2Cerror
  6366  000000                     _I2Cerror  equ     111
  6367                           
  6368                           	DABS	1,111,1	;_I2Cerror
  6369                           	global	_I2Crxlen
  6370                           	global	_I2Crxlen
  6371  000000                     _I2Crxlen  equ     107
  6372                           
  6373                           	DABS	1,107,1	;_I2Crxlen
  6374                           	global	_I2Ctxlen
  6375                           	global	_I2Ctxlen
  6376  000000                     _I2Ctxlen  equ     108
  6377                           
  6378                           	DABS	1,108,1	;_I2Ctxlen
  6379                           	global	_idx
  6380                           	global	_idx
  6381  000000                     _idx  equ     104
  6382                           
  6383                           	DABS	1,104,1	;_idx
  6384                           	global	_ANCON0
  6385  000000                     _ANCON0	equ	0xF25
  6386                           	global	_ANCON1
  6387  000000                     _ANCON1	equ	0xF24
  6388                           	global	_ANCON2
  6389  000000                     _ANCON2	equ	0xF23
  6390                           	global	_BAUDCON1bits
  6391  000000                     _BAUDCON1bits	equ	0xF65
  6392                           	global	_BAUDCON2bits
  6393  000000                     _BAUDCON2bits	equ	0xF20
  6394                           	global	_INTCONbits
  6395  000000                     _INTCONbits	equ	0xFF2
  6396                           	global	_LCDCONbits
  6397  000000                     _LCDCONbits	equ	0xEF4
  6398                           	global	_LCDDATA0
  6399  000000                     _LCDDATA0	equ	0xF66
  6400                           	global	_LCDDATA1
  6401  000000                     _LCDDATA1	equ	0xF67
  6402                           	global	_LCDDATA2
  6403  000000                     _LCDDATA2	equ	0xF68
  6404                           	global	_LCDDATA3
  6405  000000                     _LCDDATA3	equ	0xF69
  6406                           	global	_LCDDATA4
  6407  000000                     _LCDDATA4	equ	0xF6A
  6408                           	global	_LCDPSbits
  6409  000000                     _LCDPSbits	equ	0xEF5
  6410                           	global	_LCDREF
  6411  000000                     _LCDREF	equ	0xEFD
  6412                           	global	_LCDRL
  6413  000000                     _LCDRL	equ	0xEFC
  6414                           	global	_LCDSE0
  6415  000000                     _LCDSE0	equ	0xEF6
  6416                           	global	_LCDSE1
  6417  000000                     _LCDSE1	equ	0xEF7
  6418                           	global	_LCDSE2
  6419  000000                     _LCDSE2	equ	0xEF8
  6420                           	global	_LCDSE3
  6421  000000                     _LCDSE3	equ	0xEF9
  6422                           	global	_LCDSE4
  6423  000000                     _LCDSE4	equ	0xEFA
  6424                           	global	_PIE2bits
  6425  000000                     _PIE2bits	equ	0xFA0
  6426                           	global	_PIR2bits
  6427  000000                     _PIR2bits	equ	0xFA1
  6428                           	global	_PORTAbits
  6429  000000                     _PORTAbits	equ	0xF80
  6430                           	global	_PORTCbits
  6431  000000                     _PORTCbits	equ	0xF82
  6432                           	global	_PORTFbits
  6433  000000                     _PORTFbits	equ	0xF85
  6434                           	global	_PORTGbits
  6435  000000                     _PORTGbits	equ	0xF86
  6436                           	global	_RCSTA1bits
  6437  000000                     _RCSTA1bits	equ	0xFAB
  6438                           	global	_RCSTA2bits
  6439  000000                     _RCSTA2bits	equ	0xF22
  6440                           	global	_SPBRG1
  6441  000000                     _SPBRG1	equ	0xFAF
  6442                           	global	_SPBRG2
  6443  000000                     _SPBRG2	equ	0xF1E
  6444                           	global	_SSP2ADD
  6445  000000                     _SSP2ADD	equ	0xF01
  6446                           	global	_SSP2BUF
  6447  000000                     _SSP2BUF	equ	0xF02
  6448                           	global	_SSP2CON1
  6449  000000                     _SSP2CON1	equ	0xEFF
  6450                           	global	_SSP2CON1bits
  6451  000000                     _SSP2CON1bits	equ	0xEFF
  6452                           	global	_SSP2CON2bits
  6453  000000                     _SSP2CON2bits	equ	0xEFE
  6454                           	global	_SSP2STAT
  6455  000000                     _SSP2STAT	equ	0xF00
  6456                           	global	_T0CON
  6457  000000                     _T0CON	equ	0xFD5
  6458                           	global	_T0CONbits
  6459  000000                     _T0CONbits	equ	0xFD5
  6460                           	global	_TMR0H
  6461  000000                     _TMR0H	equ	0xFD7
  6462                           	global	_TMR0L
  6463  000000                     _TMR0L	equ	0xFD6
  6464                           	global	_TRISAbits
  6465  000000                     _TRISAbits	equ	0xF92
  6466                           	global	_TRISCbits
  6467  000000                     _TRISCbits	equ	0xF94
  6468                           	global	_TRISDbits
  6469  000000                     _TRISDbits	equ	0xF95
  6470                           	global	_TRISFbits
  6471  000000                     _TRISFbits	equ	0xF97
  6472                           	global	_TRISGbits
  6473  000000                     _TRISGbits	equ	0xF98
  6474                           	global	_TXREG1
  6475  000000                     _TXREG1	equ	0xFAD
  6476                           	global	_TXREG2
  6477  000000                     _TXREG2	equ	0xF1C
  6478                           	global	_TXSTA1bits
  6479  000000                     _TXSTA1bits	equ	0xFAC
  6480                           	global	_TXSTA2bits
  6481  000000                     _TXSTA2bits	equ	0xF21
  6482                           	
  6483  007F6E                     STR_19:		; BSR set to: ?
  6484                           
  6485  007F6E  0A                 	db	10
  6486  007F6F  54                 	db	84	;'T'
  6487  007F70  65                 	db	101	;'e'
  6488  007F71  6D                 	db	109	;'m'
  6489  007F72  70                 	db	112	;'p'
  6490  007F73  65                 	db	101	;'e'
  6491  007F74  72                 	db	114	;'r'
  6492  007F75  61                 	db	97	;'a'
  6493  007F76  74                 	db	116	;'t'
  6494  007F77  75                 	db	117	;'u'
  6495  007F78  72                 	db	114	;'r'
  6496  007F79  65                 	db	101	;'e'
  6497  007F7A  20                 	db	32
  6498  007F7B  69                 	db	105	;'i'
  6499  007F7C  73                 	db	115	;'s'
  6500  007F7D  00                 	db	0
  6501                           	
  6502  007F7E                     STR_17:		; BSR set to: ?
  6503                           
  6504  007F7E  0A                 	db	10
  6505  007F7F  46                 	db	70	;'F'
  6506  007F80  61                 	db	97	;'a'
  6507  007F81  6D                 	db	109	;'m'
  6508  007F82  69                 	db	105	;'i'
  6509  007F83  6C                 	db	108	;'l'
  6510  007F84  79                 	db	121	;'y'
  6511  007F85  20                 	db	32
  6512  007F86  43                 	db	67	;'C'
  6513  007F87  6F                 	db	111	;'o'
  6514  007F88  64                 	db	100	;'d'
  6515  007F89  65                 	db	101	;'e'
  6516  007F8A  00                 	db	0
  6517                           	
  6518  007F8B                     STR_21:		; BSR set to: ?
  6519                           
  6520  007F8B  0A                 	db	10
  6521  007F8C  55                 	db	85	;'U'
  6522  007F8D  41                 	db	65	;'A'
  6523  007F8E  52                 	db	82	;'R'
  6524  007F8F  54                 	db	84	;'T'
  6525  007F90  32                 	db	50	;'2'
  6526  007F91  20                 	db	32
  6527  007F92  49                 	db	73	;'I'
  6528  007F93  4E                 	db	78	;'N'
  6529  007F94  49                 	db	73	;'I'
  6530  007F95  54                 	db	84	;'T'
  6531  007F96  00                 	db	0
  6532                           	
  6533  007F97                     STR_5:		; BSR set to: ?
  6534                           
  6535  007F97  0A                 	db	10
  6536  007F98  20                 	db	32
  6537  007F99  41                 	db	65	;'A'
  6538  007F9A  64                 	db	100	;'d'
  6539  007F9B  63                 	db	99	;'c'
  6540  007F9C  43                 	db	67	;'C'
  6541  007F9D  6F                 	db	111	;'o'
  6542  007F9E  75                 	db	117	;'u'
  6543  007F9F  6E                 	db	110	;'n'
  6544  007FA0  74                 	db	116	;'t'
  6545  007FA1  00                 	db	0
  6546                           	
  6547  007FA2                     STR_2:		; BSR set to: ?
  6548                           
  6549  007FA2  0A                 	db	10
  6550  007FA3  4C                 	db	76	;'L'
  6551  007FA4  43                 	db	67	;'C'
  6552  007FA5  44                 	db	68	;'D'
  6553  007FA6  20                 	db	32
  6554  007FA7  49                 	db	73	;'I'
  6555  007FA8  4E                 	db	78	;'N'
  6556  007FA9  49                 	db	73	;'I'
  6557  007FAA  54                 	db	84	;'T'
  6558  007FAB  00                 	db	0
  6559                           	
  6560  007FAC                     STR_14:		; BSR set to: ?
  6561                           
  6562  007FAC  55                 	db	85	;'U'
  6563  007FAD  41                 	db	65	;'A'
  6564  007FAE  52                 	db	82	;'R'
  6565  007FAF  54                 	db	84	;'T'
  6566  007FB0  20                 	db	32
  6567  007FB1  49                 	db	73	;'I'
  6568  007FB2  4E                 	db	78	;'N'
  6569  007FB3  49                 	db	73	;'I'
  6570  007FB4  54                 	db	84	;'T'
  6571  007FB5  00                 	db	0
  6572                           	
  6573  007FB6                     STR_1:		; BSR set to: ?
  6574                           
  6575  007FB6  0A                 	db	10
  6576  007FB7  41                 	db	65	;'A'
  6577  007FB8  44                 	db	68	;'D'
  6578  007FB9  43                 	db	67	;'C'
  6579  007FBA  20                 	db	32
  6580  007FBB  49                 	db	73	;'I'
  6581  007FBC  4E                 	db	78	;'N'
  6582  007FBD  49                 	db	73	;'I'
  6583  007FBE  54                 	db	84	;'T'
  6584  007FBF  00                 	db	0
  6585                           	
  6586  007FC0                     STR_3:		; BSR set to: ?
  6587                           
  6588  007FC0  0A                 	db	10
  6589  007FC1  49                 	db	73	;'I'
  6590  007FC2  32                 	db	50	;'2'
  6591  007FC3  43                 	db	67	;'C'
  6592  007FC4  20                 	db	32
  6593  007FC5  49                 	db	73	;'I'
  6594  007FC6  4E                 	db	78	;'N'
  6595  007FC7  49                 	db	73	;'I'
  6596  007FC8  54                 	db	84	;'T'
  6597  007FC9  00                 	db	0
  6598                           	
  6599  007FCA                     STR_7:		; BSR set to: ?
  6600                           
  6601  007FCA  0A                 	db	10
  6602  007FCB  63                 	db	99	;'c'
  6603  007FCC  61                 	db	97	;'a'
  6604  007FCD  73                 	db	115	;'s'
  6605  007FCE  65                 	db	101	;'e'
  6606  007FCF  20                 	db	32
  6607  007FD0  30                 	db	48	;'0'
  6608  007FD1  00                 	db	0
  6609                           	
  6610  007FD2                     STR_10:		; BSR set to: ?
  6611                           
  6612  007FD2  0A                 	db	10
  6613  007FD3  63                 	db	99	;'c'
  6614  007FD4  61                 	db	97	;'a'
  6615  007FD5  73                 	db	115	;'s'
  6616  007FD6  65                 	db	101	;'e'
  6617  007FD7  20                 	db	32
  6618  007FD8  33                 	db	51	;'3'
  6619  007FD9  00                 	db	0
  6620                           	
  6621  007FDA                     STR_12:		; BSR set to: ?
  6622                           
  6623  007FDA  0A                 	db	10
  6624  007FDB  63                 	db	99	;'c'
  6625  007FDC  61                 	db	97	;'a'
  6626  007FDD  73                 	db	115	;'s'
  6627  007FDE  65                 	db	101	;'e'
  6628  007FDF  34                 	db	52	;'4'
  6629  007FE0  20                 	db	32
  6630  007FE1  00                 	db	0
  6631                           	
  6632  007FE2                     STR_8:		; BSR set to: ?
  6633                           
  6634  007FE2  0A                 	db	10
  6635  007FE3  63                 	db	99	;'c'
  6636  007FE4  61                 	db	97	;'a'
  6637  007FE5  73                 	db	115	;'s'
  6638  007FE6  65                 	db	101	;'e'
  6639  007FE7  20                 	db	32
  6640  007FE8  31                 	db	49	;'1'
  6641  007FE9  00                 	db	0
  6642                           	
  6643  007FEA                     STR_9:		; BSR set to: ?
  6644                           
  6645  007FEA  0A                 	db	10
  6646  007FEB  63                 	db	99	;'c'
  6647  007FEC  61                 	db	97	;'a'
  6648  007FED  73                 	db	115	;'s'
  6649  007FEE  65                 	db	101	;'e'
  6650  007FEF  20                 	db	32
  6651  007FF0  32                 	db	50	;'2'
  6652  007FF1  00                 	db	0
  6653                           	
  6654  007FF2                     STR_4:		; BSR set to: ?
  6655                           
  6656  007FF2  50                 	db	80	;'P'
  6657  007FF3  59                 	db	89	;'Y'
  6658  007FF4  52                 	db	82	;'R'
  6659  007FF5  00                 	db	0
  6660                           	
  6661  007FF6                     STR_15:		; BSR set to: ?
  6662                           
  6663  007FF6  0A                 	db	10
  6664  007FF7  25                 	db	37
  6665  007FF8  75                 	db	117	;'u'
  6666  007FF9  00                 	db	0
  6667                           	
  6668  007FFA                     STR_13:		; BSR set to: ?
  6669                           
  6670  007FFA  65                 	db	101	;'e'
  6671  007FFB  72                 	db	114	;'r'
  6672  007FFC  72                 	db	114	;'r'
  6673  007FFD  00                 	db	0
  6674  000000                     STR_16	equ	STR_15+0
  6675  000000                     STR_6	equ	STR_15+0
  6676  000000                     STR_11	equ	STR_15+1
  6677  000000                     STR_18	equ	STR_15+1
  6678  000000                     STR_20	equ	STR_15+1
  6679  007FFE  00                 	db 0	; dummy byte at the end
  6680                           	psect	intsave_regs,class=BIGRAM,space=1
  6681                           	PSECT	param1,class=BANK1,space=1
  6682                           	GLOBAL	__Lparam1
  6683                           	FNCONF	param1,??,?
  6684                           	GLOBAL	__Labsbss0
  6685  000000                     __Labsbss0	EQU	0
  6686                           	GLOBAL	__Habsbss0
  6687  000000                     __Habsbss0	EQU	112
  6688                           	GLOBAL	__Ldata0
  6689  000000                     __Ldata0	EQU	112
  6690                           	GLOBAL	__Hdata0
  6691  000000                     __Hdata0	EQU	218
  6692                           GLOBAL	__Lparam, __Hparam
  6693                           GLOBAL	__Lparam1, __Hparam1
  6694  000000                     __Lparam	EQU	__Lparam1
  6695  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.66 build 8870 
Symbol Table                                           Sat Jun 02 15:09:29 2018

                    _mV 000069                     l480 0220  
                   l472 03EC                     l481 0226  
                   l473 0156                     l490 037C  
                   l482 022A                     l491 0380  
                   l483 0254                     l492 03C8  
                   l484 02DE                     l476 03CC  
                   l477 019E                     l486 02BA  
                   l478 01DA                     l487 02A6  
                   l479 01DE                     l488 02CC  
                   l489 02F6                     l970 0F96  
                   l963 0FB8                     l971 0F88  
                   l964 0FA2                     l981 11F8  
                   l973 0F96                     l965 0F58  
                   l982 11DA                     l966 0FB8  
                   l974 0EDA                     l983 11F4  
                   l967 0F5C                     l977 120E  
                   l969 0F6A                     l978 11D2  
                   l979 120E         __end_of_I2C_ISR 05CC  
                   _arr 000040                     _idx 000068  
                   wreg 000FE8              _TXSTA1bits 000FAC  
            _TXSTA2bits 000F21                    F5583 000070  
                  l2420 05FC                    l2421 05FE  
                  l2430 06AE                    l2422 0614  
                  l2423 0616                    l2415 124C  
                  l2431 12BA                    l2416 0768  
                  l2424 0616                    l1464 0C5E  
                  l2432 1182                    l2417 0768  
                  l2425 064A                    l2433 114A  
                  l1465 11C8                    l2441 1120  
                  l2426 064C                    l2418 0736  
                  l2434 1182                    l1466 118A  
                  l2427 064C                    l2419 05E4  
                  l2428 066A                    l2436 116A  
                  l1468 1198                    l2429 06AE  
                  l2437 113C                    l2438 10FC  
                  l2439 113C                    l1940 10E4  
                  l1942 10B4                    l1943 10B6  
                  l1944 10CC                    l2912 0D0C  
                  l5400 0986                    l2913 0C90  
                  l5401 09D0                    l1938 10EA  
                  l2914 0902                    l1939 109A  
                  l5403 09BC                    l2915 07DE  
                  l5404 0A26                    l2916 0850  
                  l5405 09D8                    l5406 0A3A  
                  l2918 082E                    l5431 0B6E  
                  l5440 0AF0                    l5432 0A8E  
                  l3904 1274                    l5441 0B2A  
                  l5433 0AB0                    l3905 1252  
                  l5442 0B5A                    l5434 0B3A  
                  l5435 0AE2                    l3907 1260  
                  l5436 0AD6                    l5380 128C  
                  l5437 0AF0                    l5381 12C8  
                  l5390 0A3A                    l5439 0B3A  
                  l5711 1086                    l5391 0914  
                  l5720 0EFA                    l5392 0A5A  
                  l5376 0DAC                    l5721 0F10  
                  l5713 1072                    l5377 1290  
                  l5393 0936                    l5730 0FEA  
                  l5714 102A                    l5378 127E  
                  l5394 0966                    l5723 0F42  
                  l5715 1048                    l5395 0946  
                  l5724 0F10                    l5732 1014  
                  l5396 093A                    l5717 0F4E  
                  l5725 0F36                    l5733 0FEA  
                  l5389 0A68                    l5397 0A5A  
                  l3893 12AA                    l5718 0F42  
                  l5726 1020                    l5734 1008  
                  l5398 093E                    l5719 0F02  
                  l5727 1014                    l5399 0942  
                  l5728 0FDC                    l5729 0FD4  
                  l5690 0DEE                    l5692 0E38  
                  l5693 0DEE                    l5686 0E4C  
                  l5694 0E28                    l5687 0E38  
                  l5688 0DE0                    l5689 0DD4  
                  STR_1 7FB6                    STR_2 7FA2  
                  STR_3 7FC0                    STR_4 7FF2  
                  STR_5 7F97                    STR_6 7FF6  
                  STR_7 7FCA                    STR_8 7FE2  
                  STR_9 7FEA                    u2310 026C  
                  u2311 0268                    u2320 0282  
                  u2321 027E                    u2410 081C  
                  u2330 029E                    u2411 0818  
                  u2331 029A                    u2500 0A3A  
                  u2420 0850                    u2340 02DE  
                  u2501 0A36                    u2421 084C  
                  u2341 02DA                    u2510 0A5A  
                  u2430 1260                    u2350 0378  
                  u2511 0A56                    u2431 125C  
                  u2351 0374                    u2600 0644  
                  u2520 0C84                    u2440 1182  
                  u2360 03C0                    u2280 01D4  
                  u2601 0640                    u2521 0C80  
                  u2441 117E                    u2361 03BC  
                  u2281 01D0                    u2610 0664  
                  u2530 128C                    u2370 113C  
                  u2290 0216                    u2611 0660  
                  u2531 1288                    u2371 1138  
                  u2291 0212                    u2700 10E4  
                  u2540 0DCC                    u2460 0926  
                  u2380 1198                    u2701 10E0  
                  u2541 0DC8                    u2525 0C76  
                  u2461 0922                    u2381 1194  
                  u2630 0F6A                    u2550 0DEE  
                  u2631 0F66                    u2551 0DEA  
                  u2455 0E62                    u2800 0F10  
                  u2720 11F4                    u2640 0F80  
                  u2560 0E16                    u2480 09B8  
                  u2801 0F0C                    u2721 11F0  
                  u2641 0F7C                    u2625 06FA  
                  u2561 0E12                    u2481 09B4  
                  u2810 0F2C                    u2730 120E  
                  u2650 0F96                    u2490 09D0  
                  u2811 0F28                    u2731 120A  
                  u2651 0F92                    u2571 05D6  
                  u2491 09CC                    u2395 0D28  
                  u2820 0A7A                    u2740 1038  
                  u2660 0FB8                    u2580 05F6  
                  u2821 0A76                    u2741 1034  
                  u2661 0FB4                    u2581 05F2  
                  u2830 0A9C                    u2750 1072  
                  u2590 060E                    u2831 0A98  
                  u2751 106E                    u2591 060A  
                  u2840 0ACE                    u2760 0FCC  
                  u2680 10AE                    u2841 0ACA  
                  u2761 0FC8                    u2681 10AA  
                  u2850 0AF0                    u2770 0FEA  
                  u2690 10CA                    u2851 0AEC  
                  u2771 0FE6                    u2691 10C6  
                  u2860 0B18                    u2780 1000  
                  u2861 0B14                    u2781 0FFC  
                  u2870 0B4A                    u2790 0EF2  
                  u2871 0B46                    u2791 0EEE  
                  _SCnt 0000D6                    _ZCnt 0000D8  
    UART2_Init@baudrate 0103                    _main 00BA  
      __end_of_I2C_Init 12AC                    fsr0h 000FEA  
                  indf0 000FEF                    fsr0l 000FE9  
                  fsr1l 000FE1                    fsr2l 000FD9  
      __end_of_ADC_Init 0C60                    prodh 000FF4  
                  prodl 000FF3                    start 0014  
       __end_of_Clr_LCD 12BC         __end_of_DelayMs 1210  
            Scale@Ispan 0117              Scale@Izero 0113  
            Scale@Value 010F              Scale@Ospan 011F  
           ?_UART2_Init 0103              Scale@Ozero 011B  
      __end_of_LCD_Init 124E            _BAUDCON1bits 000F65  
          _BAUDCON2bits 000F20                   l30020 0742  
                 l30019 075E         __end_of___aldiv 0B70  
                 ?_main 0100                   _I2CRx 00006E  
                 STR_10 7FD2                   STR_11 7FF7  
                 STR_12 7FDA                   STR_21 7F8B  
                 STR_13 7FFA                   STR_14 7FAC  
                 STR_15 7FF6                   STR_16 7FF6  
                 STR_17 7F7E                   STR_19 7F6E  
       __end_of___lldiv 0E4E                   _T0CON 000FD5  
                 _LCDRL 000EFC         __end_of___lwdiv 0F50  
       __end_of___lwmod 1022                   _TMR0H 000FD7  
                 _TMR0L 000FD6     ___lmul@multiplicand 0127  
                 _RType 7764                   _Scale 0C60  
                 tablat 000FF5                   status 000FD8  
       __end_of_sprintf 0A6A            __end_of_main 03F4  
             ??_I2C_ISR 0173        __end_of_Read_adc 11CA  
                ??_main 0100           __activetblptr 000002  
         ??_Uart2_Write 0105                  ?_Scale 010F  
                _ANCON0 000F25                  _ANCON1 000F24  
                _ANCON2 000F23                  _LCDSE0 000EF6  
                _LCDSE1 000EF7                  _LCDSE2 000EF8  
                _LCDSE3 000EF9                  _LCDSE4 000EFA  
                _LCDREF 000EFD        __end_of_Write_IO 1276  
            _Uart2_Temp 12BC                  i2l4400 04D6  
                i2l4401 04DA                  i2l4410 0514  
                i2l4402 04DE                  i2l4412 0522  
                i2l4404 04EC                  i2l4413 0544  
                i2l4405 04F2                  i2l4414 0554  
                i2l4406 04F6                  i2l4415 0558  
                i2l4416 055C                  i2l4408 0504  
                i2l4409 0510                  i2l4418 056A  
                i2l4419 059A                  i2l4382 05C2  
                i2l4390 044A                  i2l4391 044E  
                i2l4383 05C2                  i2l4392 0452  
                i2l4385 059E                  i2l4394 0460  
                i2l4386 0416                  i2l4395 0482  
                i2l4387 041A                  i2l4396 04D6  
                i2l4397 04AC                  i2l4389 0428  
                i2l4398 04D6                  i2l4399 04C8  
             ??_Clr_LCD 0103               ??_DelayMs 0107  
                i2u3000 0522                  i2u3001 051E  
                i2u3010 0532                  i2u3011 052E  
                i2u3020 056A                  i2u3021 0566  
                i2u3030 058C                  i2u3031 0588  
                i2u2900 0402                  i2u2901 03FE  
                i2u2910 0410                  i2u2911 040C  
                i2u2920 0428                  i2u2921 0424  
                i2u2930 0438                  i2u2931 0434  
                i2u2940 0460                  i2u2941 045C  
                i2u2950 0470                  i2u2951 046C  
                i2u2960 0496                  i2u2961 0492  
                i2u2970 04BA                  i2u2971 04B6  
                i2u2980 04EC                  i2u2981 04E8  
                i2u2990 0504                  i2u2991 0500  
                _SPBRG1 000FAF                  _SPBRG2 000F1E  
            _ScratchPad 000054                  _TXREG1 000FAD  
                _TXREG2 000F1C                  __Ldata 000070  
     __end_of_UART_Init 0EDC                  ___lmul 1022  
             ??___aldiv 012B               ??___lldiv 0117  
             ??___lwdiv 0122               ??___lwmod 0122  
            _Print_UART 0F50       __end_of_SPI_Rx_Tx 10EC  
            _Update_LCD 05CC               ?_I2C_Init 0103  
             ?_ADC_Init 0103            __mediumconst 7764  
                tblptrh 000FF7                  tblptrl 000FF6  
             ??_sprintf 0113          Uart2_Temp@data 0103  
   __end_of_Uart2_Write 1292              __accesstop 0060  
             ?_LCD_Init 0103   __end_of_Print_Num_LCD 1184  
         __end_of_Scale 0D0E            Read_adc@data 0105  
 __end_of_Print_Str_LCD 113E              ??_I2C_Init 0103  
            ??_ADC_Init 0103                 ??_Scale 0123  
          Write_IO@data 0103           Temp_Calc@mask 0103  
           ?_Uart2_Temp 0103       __end_of_Temp_Calc 0904  
            ??_LCD_Init 0103               ?_Read_adc 0103  
           UART2_Init@x 0107                 ?___lmul 0123  
          ??_UART2_Init 0107                 _I2C_ISR 03F4  
           ?_Print_UART 010F          ___lmul@product 012B  
             ?_Write_IO 0103             ?_Update_LCD 0106  
           _Uart2_Write 1276      Update_LCD@Seg_code 010A  
               _SSP2ADD 000F01                 _SSP2BUF 000F02  
    __end_of_UART2_Init 0DAE                 _Clr_LCD 12AC  
               _DelayMs 11CA              ??_Read_adc 0105  
               __Hdata0 0000DA                 __Ldata0 000070  
               __Hparam 0175                 __Lparam 0100  
             _I2C_state 00006D            ADC_Init@val1 0104  
               ___aldiv 0A6A                 ___lldiv 0DAE  
               ___lwdiv 0EDC                 ___lwmod 0FBA  
           _Temperature 000064                 __ramtop 0800  
            ??_Write_IO 0104               _T0CONbits 000FD5  
               _dpowers 7F64        ___aldiv@dividend 0123  
             _LCDPSbits 000EF5                 _sprintf 0904  
               main@max 0101           __Lmediumconst 7764  
               int_func 0008         ___lldiv@divisor 0113  
      ___aldiv@quotient 012B                 postdec0 000FED  
           Update_LCD@x 0108                 postinc0 000FEE  
               postinc1 000FE6               _UART_Init 0E4E  
             _PORTAbits 000F80               _PORTCbits 000F82  
             _PORTFbits 000F85               _PORTGbits 000F86  
        Print_Num_LCD@i 0103               _TRISAbits 000F92  
             _TRISCbits 000F94               _TRISDbits 000F95  
             _TRISFbits 000F97               _TRISGbits 000F98  
             _SPI_Rx_Tx 1088          Print_Str_LCD@i 0103  
        __end_of___lmul 1088              ?_UART_Init 0103  
       Update_LCD@digit 0106              ?_SPI_Rx_Tx 0107  
             __Habsbss0 000070            ??_Uart2_Temp 0105  
             __Labsbss0 000000               _Temp_Calc 076A  
              ??___lmul 012B                ?_I2C_ISR 0173  
          ??_Print_UART 010F      __end_of_Uart2_Temp 12CA  
          ??_Update_LCD 010A            ?_Uart2_Write 0105  
              ?_Clr_LCD 0103                ?_DelayMs 0105  
           sprintf@_val 0117             sprintf@prec 0113  
    __end_of_Print_UART 0FBA              ?_Temp_Calc 0103  
      ___lwdiv@dividend 011E      __end_of_Update_LCD 076A  
              ?___aldiv 0123                ?___lldiv 010F  
              ?___lwdiv 011E                ?___lwmod 011E  
           ??_UART_Init 0107             __smallconst 0800  
              _I2C_Init 1292                _ADC_Init 0B70  
           ADC_Init@val 0103                _I2Cerror 00006F  
           ??_SPI_Rx_Tx 0107                _I2Crxlen 00006B  
              _I2Ctxlen 00006C                _LCDDATA0 000F66  
              _LCDDATA1 000F67                _LCDDATA2 000F68  
              _LCDDATA3 000F69                _LCDDATA4 000F6A  
              ?_sprintf 010F              UART_Init@x 0107  
       ___aldiv@divisor 0127                _LCD_Init 1210  
              DelayMs@j 0107                _PIE2bits 000FA0  
              _PIR2bits 000FA1           _Print_Num_LCD 113E  
              _SSP2CON1 000EFF                _SSP2STAT 000F00  
         _Print_Str_LCD 10EC                _AdcCount 000066  
     UART_Init@baudrate 0103               main@state 0100  
     ___lmul@multiplier 0123             DelayMs@time 0105  
              _Read_adc 1184                __Hparam1 0175  
           ??_Temp_Calc 0103                __Lparam1 0100  
        ?_Print_Num_LCD 0103            __Lsmallconst 0800  
              _PrintStr 000000          ?_Print_Str_LCD 0103  
              _Write_IO 124E         ___lwdiv@divisor 0120  
            _LCDCONbits 000EF4            _SSP2CON1bits 000EFF  
          _SSP2CON2bits 000EFE              _INTCONbits 000FF2  
              intlevel2 12CA               sprintf@ap 0115  
      ___lwmod@dividend 011E        ___lldiv@dividend 010F  
            _RCSTA1bits 000FAB              _RCSTA2bits 000F22  
       ??_Print_Num_LCD 0103         ??_Print_Str_LCD 0103  
            _UART2_Init 0D0E            Update_LCD@dp 0109  
              sprintf@c 0114                sprintf@f 010F  
      ___lldiv@quotient 0117         ___lwmod@divisor 0120  
